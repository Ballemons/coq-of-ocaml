(** Generated by coq-of-ocaml *)
Require Import OCaml.OCaml.

Local Open Scope string_scope.
Local Open Scope Z_scope.
Local Open Scope type_scope.
Import ListNotations.

Require Import Tezos.Environment.
Import Environment.Notations.

Parameter t : Set.

Definition voting_period : Set := t.

Parameter encoding : Data_encoding.t voting_period.

Parameter rpc_arg : RPC_arg.arg voting_period.

Parameter pp : Format.formatter -> voting_period -> unit.

Parameter Included_S : {_ : unit & Compare.S.signature voting_period}.

Definition op_eq : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.op_eq).

Definition op_ltgt : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.op_ltgt).

Definition op_lt : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.op_lt).

Definition op_lteq : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.op_lteq).

Definition op_gteq : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.op_gteq).

Definition op_gt : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.op_gt).

Definition compare : voting_period -> voting_period -> int :=
  (|Included_S|).(Compare.S.compare).

Definition equal : voting_period -> voting_period -> bool :=
  (|Included_S|).(Compare.S.equal).

Definition max : voting_period -> voting_period -> voting_period :=
  (|Included_S|).(Compare.S.max).

Definition min : voting_period -> voting_period -> voting_period :=
  (|Included_S|).(Compare.S.min).

Parameter to_int32 : voting_period -> int32.

Parameter of_int32_exn : int32 -> voting_period.

Parameter root : voting_period.

Parameter succ : voting_period -> voting_period.

Inductive kind : Set :=
| Proposal : kind
| Testing_vote : kind
| Testing : kind
| Promotion_vote : kind.

Parameter kind_encoding : Data_encoding.t kind.
