(** Generated by coq-of-ocaml *)
Require Import OCaml.OCaml.

Local Open Scope string_scope.
Local Open Scope Z_scope.
Local Open Scope type_scope.
Import ListNotations.

Unset Positivity Checking.
Unset Guard Checking.

Require Import Tezos.Environment.
Require Tezos.Qty_repr.

Definition QtyModule :=
  Qty_repr.Make
    (let id := "tez" in
    existT (A := unit) (fun _ => _) tt
      {|
        Qty_repr.QTY.id := id
      |}).

Definition qty := (|QtyModule|).(Qty_repr.S.qty).

Definition id := (|QtyModule|).(Qty_repr.S.id).

Definition zero := (|QtyModule|).(Qty_repr.S.zero).

Definition one_mutez := (|QtyModule|).(Qty_repr.S.one_mutez).

Definition one_cent := (|QtyModule|).(Qty_repr.S.one_cent).

Definition fifty_cents := (|QtyModule|).(Qty_repr.S.fifty_cents).

Definition one := (|QtyModule|).(Qty_repr.S.one).

Definition op_minusquestion := (|QtyModule|).(Qty_repr.S.op_minusquestion).

Definition op_plusquestion := (|QtyModule|).(Qty_repr.S.op_plusquestion).

Definition op_starquestion := (|QtyModule|).(Qty_repr.S.op_starquestion).

Definition op_divquestion := (|QtyModule|).(Qty_repr.S.op_divquestion).

Definition to_mutez := (|QtyModule|).(Qty_repr.S.to_mutez).

Definition of_mutez := (|QtyModule|).(Qty_repr.S.of_mutez).

Definition of_mutez_exn := (|QtyModule|).(Qty_repr.S.of_mutez_exn).

Definition add_exn := (|QtyModule|).(Qty_repr.S.add_exn).

Definition mul_exn := (|QtyModule|).(Qty_repr.S.mul_exn).

Definition qty_encoding := (|QtyModule|).(Qty_repr.S.qty_encoding).

Definition to_int64 := (|QtyModule|).(Qty_repr.S.to_int64).

Definition op_eq := (|QtyModule|).(Qty_repr.S.op_eq).

Definition op_ltgt := (|QtyModule|).(Qty_repr.S.op_ltgt).

Definition op_lt := (|QtyModule|).(Qty_repr.S.op_lt).

Definition op_lteq := (|QtyModule|).(Qty_repr.S.op_lteq).

Definition op_gteq := (|QtyModule|).(Qty_repr.S.op_gteq).

Definition op_gt := (|QtyModule|).(Qty_repr.S.op_gt).

Definition compare := (|QtyModule|).(Qty_repr.S.compare).

Definition equal := (|QtyModule|).(Qty_repr.S.equal).

Definition max := (|QtyModule|).(Qty_repr.S.max).

Definition min := (|QtyModule|).(Qty_repr.S.min).

Definition pp := (|QtyModule|).(Qty_repr.S.pp).

Definition of_string := (|QtyModule|).(Qty_repr.S.of_string).

Definition to_string := (|QtyModule|).(Qty_repr.S.to_string).

Definition t := qty.

Definition tez := qty.

Definition encoding : Data_encoding.encoding qty :=
  Pervasives.op_atat
    (let arg := Data_encoding.def "mutez" in
    fun eta => arg None None eta) qty_encoding.
