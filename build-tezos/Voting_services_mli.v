(** Generated by coq-of-ocaml *)
Require Import OCaml.OCaml.

Local Set Primitive Projections.
Local Open Scope string_scope.
Local Open Scope Z_scope.
Local Open Scope type_scope.
Import ListNotations.

Require Import Tezos.Environment.
Import Environment.Notations.
Require Tezos.Alpha_context.

Import Alpha_context.

Parameter ballots : forall {a : Set},
  RPC_context.simple a -> a ->
  Lwt.t (Error_monad.shell_tzresult Alpha_context.Vote.ballots).

Parameter ballot_list : forall {a : Set},
  RPC_context.simple a -> a ->
  Lwt.t
    (Error_monad.shell_tzresult
      (list
        ((|Signature.Public_key_hash|).(S.SPublic_key_hash.t) *
          Alpha_context.Vote.ballot))).

Parameter current_period_kind : forall {a : Set},
  RPC_context.simple a -> a ->
  Lwt.t (Error_monad.shell_tzresult Alpha_context.Voting_period.kind).

Parameter current_quorum : forall {a : Set},
  RPC_context.simple a -> a -> Lwt.t (Error_monad.shell_tzresult Int32.t).

Parameter listings : forall {a : Set},
  RPC_context.simple a -> a ->
  Lwt.t
    (Error_monad.shell_tzresult
      (list ((|Signature.Public_key_hash|).(S.SPublic_key_hash.t) * int32))).

Parameter proposals : forall {a : Set},
  RPC_context.simple a -> a ->
  Lwt.t
    (Error_monad.shell_tzresult
      ((|Protocol_hash|).(S.HASH.Map).(S.INDEXES_Map.t) Int32.t)).

Parameter current_proposal : forall {a : Set},
  RPC_context.simple a -> a ->
  Lwt.t (Error_monad.shell_tzresult (option (|Protocol_hash|).(S.HASH.t))).

Parameter register : unit -> unit.
