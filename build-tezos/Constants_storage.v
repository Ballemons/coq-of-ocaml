(** Generated by coq-of-ocaml *)
Require Import OCaml.OCaml.

Local Open Scope string_scope.
Local Open Scope Z_scope.
Local Open Scope type_scope.
Import ListNotations.

Unset Positivity Checking.
Unset Guard Checking.

Require Import Tezos.Environment.
Import Environment.Notations.
Require Tezos.Constants_repr.
Require Tezos.Period_repr.
Require Tezos.Raw_context.
Require Tezos.Tez_repr.

Definition preserved_cycles (c : Raw_context.context) : int :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.preserved_cycles).

Definition blocks_per_cycle (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.blocks_per_cycle).

Definition blocks_per_commitment (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.blocks_per_commitment).

Definition blocks_per_roll_snapshot (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.blocks_per_roll_snapshot).

Definition blocks_per_voting_period (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.blocks_per_voting_period).

Definition time_between_blocks (c : Raw_context.context) : list Period_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.time_between_blocks).

Definition endorsers_per_block (c : Raw_context.context) : int :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.endorsers_per_block).

Definition initial_endorsers (c : Raw_context.context) : int :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.initial_endorsers).

Definition delay_per_missing_endorsement (c : Raw_context.context)
  : Period_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.delay_per_missing_endorsement).

Definition hard_gas_limit_per_operation (c : Raw_context.context) : Z.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.hard_gas_limit_per_operation).

Definition hard_gas_limit_per_block (c : Raw_context.context) : Z.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.hard_gas_limit_per_block).

Definition cost_per_byte (c : Raw_context.context) : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.cost_per_byte).

Definition hard_storage_limit_per_operation (c : Raw_context.context) : Z.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.hard_storage_limit_per_operation).

Definition proof_of_work_threshold (c : Raw_context.context) : int64 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.proof_of_work_threshold).

Definition tokens_per_roll (c : Raw_context.context) : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.tokens_per_roll).

Definition michelson_maximum_type_size (c : Raw_context.context) : int :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.michelson_maximum_type_size).

Definition seed_nonce_revelation_tip (c : Raw_context.context) : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.seed_nonce_revelation_tip).

Definition origination_size (c : Raw_context.context) : int :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.origination_size).

Definition block_security_deposit (c : Raw_context.context) : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.block_security_deposit).

Definition endorsement_security_deposit (c : Raw_context.context)
  : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.endorsement_security_deposit).

Definition block_reward (c : Raw_context.context) : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.block_reward).

Definition endorsement_reward (c : Raw_context.context) : Tez_repr.t :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.endorsement_reward).

Definition test_chain_duration (c : Raw_context.context) : int64 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.test_chain_duration).

Definition quorum_min (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.quorum_min).

Definition quorum_max (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.quorum_max).

Definition min_proposal_quorum (c : Raw_context.context) : int32 :=
  let constants := Raw_context.constants c in
  constants.(Constants_repr.parametric.min_proposal_quorum).

Definition __parametric_value (c : Raw_context.context)
  : Constants_repr.parametric := Raw_context.constants c.
