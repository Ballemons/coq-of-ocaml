(** Generated by coq-of-ocaml *)
Require Import OCaml.OCaml.

Local Open Scope string_scope.
Local Open Scope Z_scope.
Local Open Scope type_scope.
Import ListNotations.

Unset Positivity Checking.
Unset Guard Checking.

Require Import Tezos.Environment.
Require Tezos.Storage_description.

Parameter Included_HASH :
  {'[t, __Set_t, Map_t] : _ & S.HASH.signature t __Set_t Map_t}.

Definition t := (|Included_HASH|).(S.HASH.t).

Definition name := (|Included_HASH|).(S.HASH.name).

Definition title := (|Included_HASH|).(S.HASH.title).

Definition pp := (|Included_HASH|).(S.HASH.pp).

Definition pp_short := (|Included_HASH|).(S.HASH.pp_short).

Definition op_eq := (|Included_HASH|).(S.HASH.op_eq).

Definition op_ltgt := (|Included_HASH|).(S.HASH.op_ltgt).

Definition op_lt := (|Included_HASH|).(S.HASH.op_lt).

Definition op_lteq := (|Included_HASH|).(S.HASH.op_lteq).

Definition op_gteq := (|Included_HASH|).(S.HASH.op_gteq).

Definition op_gt := (|Included_HASH|).(S.HASH.op_gt).

Definition compare := (|Included_HASH|).(S.HASH.compare).

Definition equal := (|Included_HASH|).(S.HASH.equal).

Definition max := (|Included_HASH|).(S.HASH.max).

Definition min := (|Included_HASH|).(S.HASH.min).

Definition hash_bytes := (|Included_HASH|).(S.HASH.hash_bytes).

Definition hash_string := (|Included_HASH|).(S.HASH.hash_string).

Definition zero := (|Included_HASH|).(S.HASH.zero).

Definition size := (|Included_HASH|).(S.HASH.size).

Definition to_bytes := (|Included_HASH|).(S.HASH.to_bytes).

Definition of_bytes_opt := (|Included_HASH|).(S.HASH.of_bytes_opt).

Definition of_bytes_exn := (|Included_HASH|).(S.HASH.of_bytes_exn).

Definition to_b58check := (|Included_HASH|).(S.HASH.to_b58check).

Definition to_short_b58check := (|Included_HASH|).(S.HASH.to_short_b58check).

Definition of_b58check_exn := (|Included_HASH|).(S.HASH.of_b58check_exn).

Definition of_b58check_opt := (|Included_HASH|).(S.HASH.of_b58check_opt).

Definition b58check_encoding := (|Included_HASH|).(S.HASH.b58check_encoding).

Definition encoding := (|Included_HASH|).(S.HASH.encoding).

Definition rpc_arg := (|Included_HASH|).(S.HASH.rpc_arg).

Definition to_path := (|Included_HASH|).(S.HASH.to_path).

Definition of_path := (|Included_HASH|).(S.HASH.of_path).

Definition of_path_exn := (|Included_HASH|).(S.HASH.of_path_exn).

Definition prefix_path := (|Included_HASH|).(S.HASH.prefix_path).

Definition path_length := (|Included_HASH|).(S.HASH.path_length).

Definition __Set := existT (fun _ => _) tt (|Included_HASH|).(S.HASH.__Set).

Definition Map := existT (fun _ => _) tt (|Included_HASH|).(S.HASH.Map).

Parameter activation_code : Set.

Parameter activation_code_encoding : Data_encoding.t activation_code.

Parameter of_ed25519_pkh :
  activation_code ->
  (|Ed25519|).(S.SIGNATURE.Public_key_hash).(S.SPublic_key_hash.t) -> t.

Parameter activation_code_of_hex : string -> activation_code.

Parameter Index : {_ : unit & Storage_description.INDEX.signature t}.
