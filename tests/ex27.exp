16
Value
  (rec, @.,
    [
      ((length_aux, [ A ], [ (len, Type (Z/1)); (x, Type (list/1, A)) ],
        Some Type (Z/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Variable (17, len/0));
              (Constructor (cons/1, a, l),
                Apply
                  (18,
                    Variable
                      (18,
                        length_aux/0),
                    [
                      Apply
                        (18,
                          Variable
                            (18,
                              Z.add/1),
                          [
                            Variable
                              (18,
                                len/0);
                            Constant
                              (18,
                                Int(1))
                          ]);
                      Variable
                        (18,
                          l/0)
                    ]))
            ]))
    ])

20
Value
  (non_rec, @.,
    [
      ((length, [ A ], [ (l, Type (list/1, A)) ], Some Type (Z/1)),
        Apply
          (20, Variable (20, length_aux/0),
            [ Constant (20, Int(0)); Variable (20, l/0) ]))
    ])

22
Value
  (non_rec, @.,
    [
      ((append, [ A ], [ ],
        Some (Type (list/1, A) -> (Type (list/1, A) -> Type (list/1, A)))),
        Variable (22, OCaml.Pervasives.app/1))
    ])

24
Value
  (rec, @.,
    [
      ((rev_append, [ A ], [ (l1, Type (list/1, A)); (l2, Type (list/1, A)) ],
        Some Type (list/1, A)),
        Match
          (25, Variable (25, l1/0),
            [
              (Constructor ([]/1), Variable (26, l2/0));
              (Constructor (cons/1, a, l),
                Apply
                  (27,
                    Variable
                      (27,
                        rev_append/0),
                    [
                      Variable
                        (27,
                          l/0);
                      Constructor
                        (27,
                          cons/1,
                          Variable
                            (27,
                              a/0),
                          Variable
                            (27,
                              l2/0))
                    ]))
            ]))
    ])

29
Value
  (non_rec, @.,
    [
      ((rev, [ A ], [ (l, Type (list/1, A)) ], Some Type (list/1, A)),
        Apply
          (29, Variable (29, rev_append/0),
            [ Variable (29, l/0); Constructor (29, []/1) ]))
    ])

31
Value
  (rec, @.,
    [
      ((flatten, [ A ], [ (x, Type (list/1, Type (list/1, A))) ],
        Some Type (list/1, A)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (32, []/1));
              (Constructor (cons/1, l, r),
                Apply
                  (33,
                    Variable
                      (33,
                        OCaml.Pervasives.app/1),
                    [
                      Variable
                        (33,
                          l/0);
                      Apply
                        (33,
                          Variable
                            (33,
                              flatten/0),
                          [
                            Variable
                              (33,
                                r/0)
                          ])
                    ]))
            ]))
    ])

35
Value
  (non_rec, @.,
    [
      ((concat, [ A ], [ ],
        Some (Type (list/1, Type (list/1, A)) -> Type (list/1, A))),
        Variable (35, flatten/0))
    ])

37
Value
  (rec, @.,
    [
      ((map, [ A; B ], [ (f, (A -> B)); (x, Type (list/1, A)) ],
        Some Type (list/1, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (38, []/1));
              (Constructor (cons/1, a, l),
                LetVar 39 r =
                  Apply
                    (39,
                      Variable
                        (39,
                          f/0),
                      [
                        Variable
                          (39,
                            a/0)
                      ])
                  in
                Constructor
                  (39, cons/1,
                    Variable
                      (39,
                        r/0),
                    Apply
                      (39,
                        Variable
                          (39,
                            map/0),
                        [
                          Variable
                            (39,
                              f/0);
                          Variable
                            (39,
                              l/0)
                        ])))
            ]))
    ])

41
Value
  (rec, @.,
    [
      ((mapi_aux, [ A; B ],
        [
          (i, Type (Z/1));
          (f, (Type (Z/1) -> (A -> B)));
          (x, Type (list/1, A))
        ], Some Type (list/1, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (42, []/1));
              (Constructor (cons/1, a, l),
                LetVar 43 r =
                  Apply
                    (43,
                      Variable
                        (43,
                          f/0),
                      [
                        Variable
                          (43,
                            i/0);
                        Variable
                          (43,
                            a/0)
                      ])
                  in
                Constructor
                  (43, cons/1,
                    Variable
                      (43,
                        r/0),
                    Apply
                      (43,
                        Variable
                          (43,
                            mapi_aux/0),
                        [
                          Apply
                            (43,
                              Variable
                                (43,
                                  Z.add/1),
                              [
                                Variable
                                  (43,
                                    i/0);
                                Constant
                                  (43,
                                    Int(1))
                              ]);
                          Variable
                            (43,
                              f/0);
                          Variable
                            (43,
                              l/0)
                        ])))
            ]))
    ])

45
Value
  (non_rec, @.,
    [
      ((mapi, [ A; B ],
        [ (f, (Type (Z/1) -> (A -> B))); (l, Type (list/1, A)) ],
        Some Type (list/1, B)),
        Apply
          (45, Variable (45, mapi_aux/0),
            [
              Constant (45, Int(0));
              Variable (45, f/0);
              Variable (45, l/0)
            ]))
    ])

47
Value
  (non_rec, @.,
    [
      ((rev_map, [ A; B ], [ (f, (A -> B)); (l, Type (list/1, A)) ],
        Some Type (list/1, B)),
        LetFun 48
          (rec, @coq_rec,
            [
              ((rmap_f_coq_rec, [ ],
                [
                  (accu,
                    Type
                      (list/1,
                        B));
                  (x, Type (list/1, A))
                ], Some Type (list/1, B)),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/1),
                        Variable
                          (49,
                            accu/0));
                      (Constructor
                        (cons/1,
                          a,
                          l),
                        Apply
                          (50,
                            Variable
                              (50,
                                rmap_f_coq_rec/0),
                            [
                              Constructor
                                (50,
                                  cons/1,
                                  Apply
                                    (50,
                                      Variable
                                        (50,
                                          f/0),
                                      [
                                        Variable
                                          (50,
                                            a/0)
                                      ]),
                                  Variable
                                    (50,
                                      accu/0));
                              Variable
                                (50,
                                  l/0)
                            ]))
                    ]))
            ]) in
        Apply
          (51, Variable (51, rmap_f_coq_rec/0),
            [ Constructor (51, []/1); Variable (51, l/0) ]))
    ])

53
Value
  (rec, @.,
    [
      ((fold_left, [ A; B ],
        [ (f, (A -> (B -> A))); (accu, A); (l, Type (list/1, B)) ], Some A),
        Match
          (54, Variable (54, l/0),
            [
              (Constructor ([]/1), Variable (55, accu/0));
              (Constructor (cons/1, a, l),
                Apply
                  (56,
                    Variable
                      (56,
                        fold_left/0),
                    [
                      Variable
                        (56,
                          f/0);
                      Apply
                        (56,
                          Variable
                            (56,
                              f/0),
                          [
                            Variable
                              (56,
                                accu/0);
                            Variable
                              (56,
                                a/0)
                          ]);
                      Variable
                        (56,
                          l/0)
                    ]))
            ]))
    ])

58
Value
  (rec, @.,
    [
      ((fold_right, [ A; B ],
        [ (f, (A -> (B -> B))); (l, Type (list/1, A)); (accu, B) ], Some B),
        Match
          (59, Variable (59, l/0),
            [
              (Constructor ([]/1), Variable (60, accu/0));
              (Constructor (cons/1, a, l),
                Apply
                  (61,
                    Variable
                      (61,
                        f/0),
                    [
                      Variable
                        (61,
                          a/0);
                      Apply
                        (61,
                          Variable
                            (61,
                              fold_right/0),
                          [
                            Variable
                              (61,
                                f/0);
                            Variable
                              (61,
                                l/0);
                            Variable
                              (61,
                                accu/0)
                          ])
                    ]))
            ]))
    ])

63
Value
  (rec, @.,
    [
      ((for_all, [ A ], [ (p, (A -> Type (bool/1))); (x, Type (list/1, A)) ],
        Some Type (bool/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (64, true/1));
              (Constructor (cons/1, a, l),
                Apply
                  (65,
                    Variable
                      (65,
                        andb/1),
                    [
                      Apply
                        (65,
                          Variable
                            (65,
                              p/0),
                          [
                            Variable
                              (65,
                                a/0)
                          ]);
                      Apply
                        (65,
                          Variable
                            (65,
                              for_all/0),
                          [
                            Variable
                              (65,
                                p/0);
                            Variable
                              (65,
                                l/0)
                          ])
                    ]))
            ]))
    ])

67
Value
  (rec, @.,
    [
      ((_exists, [ A ], [ (p, (A -> Type (bool/1))); (x, Type (list/1, A)) ],
        Some Type (bool/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (68, false/1));
              (Constructor (cons/1, a, l),
                Apply
                  (69,
                    Variable
                      (69,
                        orb/1),
                    [
                      Apply
                        (69,
                          Variable
                            (69,
                              p/0),
                          [
                            Variable
                              (69,
                                a/0)
                          ]);
                      Apply
                        (69,
                          Variable
                            (69,
                              _exists/0),
                          [
                            Variable
                              (69,
                                p/0);
                            Variable
                              (69,
                                l/0)
                          ])
                    ]))
            ]))
    ])

71
Value
  (non_rec, @.,
    [
      ((find_all, [ A ], [ (p, (A -> Type (bool/1))) ],
        Some (Type (list/1, A) -> Type (list/1, A))),
        LetFun 72
          (rec, @coq_rec,
            [
              ((find_coq_rec, [ ],
                [
                  (accu,
                    Type
                      (list/1,
                        A));
                  (x, Type (list/1, A))
                ], Some Type (list/1, A)),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/1),
                        Apply
                          (73,
                            Variable
                              (73,
                                rev/0),
                            [
                              Variable
                                (73,
                                  accu/0)
                            ]));
                      (Constructor
                        (cons/1,
                          x,
                          l),
                        IfThenElse
                          (74,
                            Apply
                              (74,
                                Variable
                                  (74,
                                    p/0),
                                [
                                  Variable
                                    (74,
                                      x/0)
                                ]),
                            Apply
                              (74,
                                Variable
                                  (74,
                                    find_coq_rec/0),
                                [
                                  Constructor
                                    (74,
                                      cons/1,
                                      Variable
                                        (74,
                                          x/0),
                                      Variable
                                        (74,
                                          accu/0));
                                  Variable
                                    (74,
                                      l/0)
                                ]),
                            Apply
                              (74,
                                Variable
                                  (74,
                                    find_coq_rec/0),
                                [
                                  Variable
                                    (74,
                                      accu/0);
                                  Variable
                                    (74,
                                      l/0)
                                ])))
                    ]))
            ]) in
        Apply (75, Variable (75, find_coq_rec/0), [ Constructor (75, []/1) ]))
    ])

77
Value
  (non_rec, @.,
    [
      ((filter, [ A ], [ ],
        Some ((A -> Type (bool/1)) -> (Type (list/1, A) -> Type (list/1, A)))),
        Variable (77, find_all/0))
    ])

79
Value
  (non_rec, @.,
    [
      ((partition, [ A ], [ (p, (A -> Type (bool/1))); (l, Type (list/1, A)) ],
        Some (Type (list/1, A) * Type (list/1, A))),
        LetFun 80
          (rec, @coq_rec,
            [
              ((part_coq_rec, [ ],
                [
                  (yes, Type (list/1, A));
                  (no, Type (list/1, A));
                  (x, Type (list/1, A))
                ],
                Some
                  (Type (list/1, A) *
                    Type
                      (list/1,
                        A))),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/1),
                        Tuple
                          (81,
                            Apply
                              (81,
                                Variable
                                  (81,
                                    rev/0),
                                [
                                  Variable
                                    (81,
                                      yes/0)
                                ]),
                            Apply
                              (81,
                                Variable
                                  (81,
                                    rev/0),
                                [
                                  Variable
                                    (81,
                                      no/0)
                                ])));
                      (Constructor
                        (cons/1,
                          x,
                          l),
                        IfThenElse
                          (83,
                            Apply
                              (83,
                                Variable
                                  (83,
                                    p/0),
                                [
                                  Variable
                                    (83,
                                      x/0)
                                ]),
                            Apply
                              (84,
                                Variable
                                  (84,
                                    part_coq_rec/0),
                                [
                                  Constructor
                                    (84,
                                      cons/1,
                                      Variable
                                        (84,
                                          x/0),
                                      Variable
                                        (84,
                                          yes/0));
                                  Variable
                                    (84,
                                      no/0);
                                  Variable
                                    (84,
                                      l/0)
                                ]),
                            Apply
                              (86,
                                Variable
                                  (86,
                                    part_coq_rec/0),
                                [
                                  Variable
                                    (86,
                                      yes/0);
                                  Constructor
                                    (86,
                                      cons/1,
                                      Variable
                                        (86,
                                          x/0),
                                      Variable
                                        (86,
                                          no/0));
                                  Variable
                                    (86,
                                      l/0)
                                ])))
                    ]))
            ]) in
        Apply
          (87, Variable (87, part_coq_rec/0),
            [
              Constructor (87, []/1);
              Constructor (87, []/1);
              Variable (87, l/0)
            ]))
    ])

89
Value
  (rec, @.,
    [
      ((split, [ A; B ], [ (x, Type (list/1, (A * B))) ],
        Some (Type (list/1, A) * Type (list/1, B))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1),
                Tuple
                  (90,
                    Constructor
                      (90,
                        []/1),
                    Constructor
                      (90,
                        []/1)));
              (Constructor (cons/1, Tuple (x, y), l),
                Match
                  (92,
                    Apply
                      (92,
                        Variable
                          (92,
                            split/0),
                        [
                          Variable
                            (92,
                              l/0)
                        ]),
                    [
                      (Tuple
                        (rx,
                          ry),
                        Tuple
                          (92,
                            Constructor
                              (92,
                                cons/1,
                                Variable
                                  (92,
                                    x/0),
                                Variable
                                  (92,
                                    rx/0)),
                            Constructor
                              (92,
                                cons/1,
                                Variable
                                  (92,
                                    y/0),
                                Variable
                                  (92,
                                    ry/0))))
                    ]))
            ]))
    ])

95
Value
  (rec, @.,
    [
      ((merge, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A))
        ], Some Type (list/1, A)),
        LetFun 96
          (rec, @coq_rec,
            [
              ((rev_merge_aux_coq_rec, [ ], [ (l2, Type (list/1, A)) ],
                Some Type (list/1, A)),
                Match
                  (97,
                    Tuple
                      (97,
                        Variable
                          (97,
                            l1/0),
                        Variable
                          (97,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          l2),
                        Variable
                          (98,
                            l2/0));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/1)),
                        Variable
                          (99,
                            l1/0));
                      (Tuple
                        (Constructor
                          (cons/1,
                            h1,
                            t1),
                          Constructor
                            (cons/1,
                              h2,
                              t2)),
                        IfThenElse
                          (101,
                            Apply
                              (101,
                                Variable
                                  (101,
                                    OCaml.Pervasives.le/1),
                                [
                                  Apply
                                    (101,
                                      Variable
                                        (101,
                                          cmp/0),
                                      [
                                        Variable
                                          (101,
                                            h1/0);
                                        Variable
                                          (101,
                                            h2/0)
                                      ]);
                                  Constant
                                    (101,
                                      Int(0))
                                ]),
                            Constructor
                              (102,
                                cons/1,
                                Variable
                                  (102,
                                    h1/0),
                                Apply
                                  (102,
                                    Variable
                                      (102,
                                        merge/0),
                                    [
                                      Variable
                                        (102,
                                          cmp/0);
                                      Variable
                                        (102,
                                          t1/0);
                                      Variable
                                        (102,
                                          l2/0)
                                    ])),
                            Constructor
                              (103,
                                cons/1,
                                Variable
                                  (103,
                                    h2/0),
                                Apply
                                  (103,
                                    Variable
                                      (103,
                                        rev_merge_aux_coq_rec/0),
                                    [
                                      Variable
                                        (103,
                                          t2/0)
                                    ]))))
                    ]))
            ]) in
        Apply
          (104, Variable (104, rev_merge_aux_coq_rec/0),
            [ Variable (104, l2/0) ]))
    ])

106
Value
  (rec, @.,
    [
      ((chop, [ A ], [ (k, Type (Z/1)); (l, Type (list/1, A)) ],
        Some Type (list/1, A)),
        IfThenElse
          (107,
            Apply
              (107, Variable (107, equiv_decb/1),
                [ Variable (107, k/0); Constant (107, Int(0)) ]),
            Variable (107, l/0),
            Match
              (107, Variable (108, l/0),
                [
                  (Constructor (cons/1, x, t),
                    Apply
                      (109,
                        Variable
                          (109,
                            chop/0),
                        [
                          Apply
                            (109,
                              Variable
                                (109,
                                  Z.sub/1),
                              [
                                Variable
                                  (109,
                                    k/0);
                                Constant
                                  (109,
                                    Int(1))
                              ]);
                          Variable
                            (109,
                              t/0)
                        ]));
                  (Any,
                    Apply
                      (110,
                        Variable
                          (110,
                            OCaml.assert/1),
                        [
                          Constructor
                            (110,
                              false/1)
                        ]))
                ])))
    ])

113 Module StableSort:
  114
  Value
    (rec, @.,
      [
        ((rev_merge, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (l1, Type (list/2, A));
            (l2, Type (list/2, A));
            (accu, Type (list/2, A))
          ], Some Type (list/2, A)),
          LetFun 115
            (rec, @coq_rec,
              [
                ((rev_merge_aux_coq_rec, [ ],
                  [
                    (l2,
                      Type
                        (list/2,
                          A));
                    (accu,
                      Type
                        (list/2,
                          A))
                  ],
                  Some Type (list/2, A)),
                  Match
                    (116,
                      Tuple
                        (116,
                          Variable
                            (116,
                              l1/0),
                          Variable
                            (116,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/2),
                            l2),
                          Apply
                            (117,
                              Variable
                                (117,
                                  rev_append/1),
                              [
                                Variable
                                  (117,
                                    l2/0);
                                Variable
                                  (117,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/2)),
                          Apply
                            (118,
                              Variable
                                (118,
                                  rev_append/1),
                              [
                                Variable
                                  (118,
                                    l1/0);
                                Variable
                                  (118,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/2,
                              h1,
                              t1),
                            Constructor
                              (cons/2,
                                h2,
                                t2)),
                          IfThenElse
                            (120,
                              Apply
                                (120,
                                  Variable
                                    (120,
                                      OCaml.Pervasives.le/2),
                                  [
                                    Apply
                                      (120,
                                        Variable
                                          (120,
                                            cmp/0),
                                        [
                                          Variable
                                            (120,
                                              h1/0);
                                          Variable
                                            (120,
                                              h2/0)
                                        ]);
                                    Constant
                                      (120,
                                        Int(0))
                                  ]),
                              Apply
                                (121,
                                  Variable
                                    (121,
                                      rev_merge/0),
                                  [
                                    Variable
                                      (121,
                                        cmp/0);
                                    Variable
                                      (121,
                                        t1/0);
                                    Variable
                                      (121,
                                        l2/0);
                                    Constructor
                                      (121,
                                        cons/2,
                                        Variable
                                          (121,
                                            h1/0),
                                        Variable
                                          (121,
                                            accu/0))
                                  ]),
                              Apply
                                (122,
                                  Variable
                                    (122,
                                      rev_merge_aux_coq_rec/0),
                                  [
                                    Variable
                                      (122,
                                        t2/0);
                                    Constructor
                                      (122,
                                        cons/2,
                                        Variable
                                          (122,
                                            h2/0),
                                        Variable
                                          (122,
                                            accu/0))
                                  ])))
                      ]))
              ]) in
          Apply
            (123, Variable (123, rev_merge_aux_coq_rec/0),
              [ Variable (123, l2/0); Variable (123, accu/0) ]))
      ])
  
  126
  Value
    (rec, @.,
      [
        ((rev_merge_rev, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (l1, Type (list/2, A));
            (l2, Type (list/2, A));
            (accu, Type (list/2, A))
          ], Some Type (list/2, A)),
          LetFun 127
            (rec, @coq_rec,
              [
                ((rev_merge_rev_aux_coq_rec, [ ],
                  [
                    (l2,
                      Type
                        (list/2,
                          A));
                    (accu,
                      Type
                        (list/2,
                          A))
                  ],
                  Some Type (list/2, A)),
                  Match
                    (128,
                      Tuple
                        (128,
                          Variable
                            (128,
                              l1/0),
                          Variable
                            (128,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/2),
                            l2),
                          Apply
                            (129,
                              Variable
                                (129,
                                  rev_append/1),
                              [
                                Variable
                                  (129,
                                    l2/0);
                                Variable
                                  (129,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/2)),
                          Apply
                            (130,
                              Variable
                                (130,
                                  rev_append/1),
                              [
                                Variable
                                  (130,
                                    l1/0);
                                Variable
                                  (130,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/2,
                              h1,
                              t1),
                            Constructor
                              (cons/2,
                                h2,
                                t2)),
                          IfThenElse
                            (132,
                              Apply
                                (132,
                                  Variable
                                    (132,
                                      OCaml.Pervasives.gt/2),
                                  [
                                    Apply
                                      (132,
                                        Variable
                                          (132,
                                            cmp/0),
                                        [
                                          Variable
                                            (132,
                                              h1/0);
                                          Variable
                                            (132,
                                              h2/0)
                                        ]);
                                    Constant
                                      (132,
                                        Int(0))
                                  ]),
                              Apply
                                (133,
                                  Variable
                                    (133,
                                      rev_merge_rev/0),
                                  [
                                    Variable
                                      (133,
                                        cmp/0);
                                    Variable
                                      (133,
                                        t1/0);
                                    Variable
                                      (133,
                                        l2/0);
                                    Constructor
                                      (133,
                                        cons/2,
                                        Variable
                                          (133,
                                            h1/0),
                                        Variable
                                          (133,
                                            accu/0))
                                  ]),
                              Apply
                                (134,
                                  Variable
                                    (134,
                                      rev_merge_rev_aux_coq_rec/0),
                                  [
                                    Variable
                                      (134,
                                        t2/0);
                                    Constructor
                                      (134,
                                        cons/2,
                                        Variable
                                          (134,
                                            h2/0),
                                        Variable
                                          (134,
                                            accu/0))
                                  ])))
                      ]))
              ]) in
          Apply
            (135, Variable (135, rev_merge_rev_aux_coq_rec/0),
              [ Variable (135, l2/0); Variable (135, accu/0) ]))
      ])
  
  138
  Value
    (rec, @.,
      [
        ((sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (n, Type (Z/2));
            (l, Type (list/2, A))
          ], Some Type (list/2, A)),
          Match
            (139, Tuple (139, Variable (139, n/0), Variable (139, l/0)),
              [
                (Tuple
                  (Int(2),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Any))),
                  IfThenElse
                    (141,
                      Apply
                        (141,
                          Variable
                            (141,
                              OCaml.Pervasives.le/2),
                          [
                            Apply
                              (141,
                                Variable
                                  (141,
                                    cmp/0),
                                [
                                  Variable
                                    (141,
                                      x1/0);
                                  Variable
                                    (141,
                                      x2/0)
                                ]);
                            Constant
                              (141,
                                Int(0))
                          ]),
                      Constructor
                        (141,
                          cons/2,
                          Variable
                            (141,
                              x1/0),
                          Constructor
                            (141,
                              cons/2,
                              Variable
                                (141,
                                  x2/0),
                              Constructor
                                (141,
                                  []/2))),
                      Constructor
                        (141,
                          cons/2,
                          Variable
                            (141,
                              x2/0),
                          Constructor
                            (141,
                              cons/2,
                              Variable
                                (141,
                                  x1/0),
                              Constructor
                                (141,
                                  []/2)))));
                (Tuple
                  (Int(3),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Constructor
                              (cons/2,
                                x3,
                                Any)))),
                  IfThenElse
                    (143,
                      Apply
                        (143,
                          Variable
                            (143,
                              OCaml.Pervasives.le/2),
                          [
                            Apply
                              (143,
                                Variable
                                  (143,
                                    cmp/0),
                                [
                                  Variable
                                    (143,
                                      x1/0);
                                  Variable
                                    (143,
                                      x2/0)
                                ]);
                            Constant
                              (143,
                                Int(0))
                          ]),
                      IfThenElse
                        (143,
                          Apply
                            (144,
                              Variable
                                (144,
                                  OCaml.Pervasives.le/2),
                              [
                                Apply
                                  (144,
                                    Variable
                                      (144,
                                        cmp/0),
                                    [
                                      Variable
                                        (144,
                                          x2/0);
                                      Variable
                                        (144,
                                          x3/0)
                                    ]);
                                Constant
                                  (144,
                                    Int(0))
                              ]),
                          Constructor
                            (144,
                              cons/2,
                              Variable
                                (144,
                                  x1/0),
                              Constructor
                                (144,
                                  cons/2,
                                  Variable
                                    (144,
                                      x2/0),
                                  Constructor
                                    (144,
                                      cons/2,
                                      Variable
                                        (144,
                                          x3/0),
                                      Constructor
                                        (144,
                                          []/2)))),
                          IfThenElse
                            (145,
                              Apply
                                (145,
                                  Variable
                                    (145,
                                      OCaml.Pervasives.le/2),
                                  [
                                    Apply
                                      (145,
                                        Variable
                                          (145,
                                            cmp/0),
                                        [
                                          Variable
                                            (145,
                                              x1/0);
                                          Variable
                                            (145,
                                              x3/0)
                                        ]);
                                    Constant
                                      (145,
                                        Int(0))
                                  ]),
                              Constructor
                                (145,
                                  cons/2,
                                  Variable
                                    (145,
                                      x1/0),
                                  Constructor
                                    (145,
                                      cons/2,
                                      Variable
                                        (145,
                                          x3/0),
                                      Constructor
                                        (145,
                                          cons/2,
                                          Variable
                                            (145,
                                              x2/0),
                                          Constructor
                                            (145,
                                              []/2)))),
                              Constructor
                                (146,
                                  cons/2,
                                  Variable
                                    (146,
                                      x3/0),
                                  Constructor
                                    (146,
                                      cons/2,
                                      Variable
                                        (146,
                                          x1/0),
                                      Constructor
                                        (146,
                                          cons/2,
                                          Variable
                                            (146,
                                              x2/0),
                                          Constructor
                                            (146,
                                              []/2)))))),
                      IfThenElse
                        (147,
                          Apply
                            (148,
                              Variable
                                (148,
                                  OCaml.Pervasives.le/2),
                              [
                                Apply
                                  (148,
                                    Variable
                                      (148,
                                        cmp/0),
                                    [
                                      Variable
                                        (148,
                                          x1/0);
                                      Variable
                                        (148,
                                          x3/0)
                                    ]);
                                Constant
                                  (148,
                                    Int(0))
                              ]),
                          Constructor
                            (148,
                              cons/2,
                              Variable
                                (148,
                                  x2/0),
                              Constructor
                                (148,
                                  cons/2,
                                  Variable
                                    (148,
                                      x1/0),
                                  Constructor
                                    (148,
                                      cons/2,
                                      Variable
                                        (148,
                                          x3/0),
                                      Constructor
                                        (148,
                                          []/2)))),
                          IfThenElse
                            (149,
                              Apply
                                (149,
                                  Variable
                                    (149,
                                      OCaml.Pervasives.le/2),
                                  [
                                    Apply
                                      (149,
                                        Variable
                                          (149,
                                            cmp/0),
                                        [
                                          Variable
                                            (149,
                                              x2/0);
                                          Variable
                                            (149,
                                              x3/0)
                                        ]);
                                    Constant
                                      (149,
                                        Int(0))
                                  ]),
                              Constructor
                                (149,
                                  cons/2,
                                  Variable
                                    (149,
                                      x2/0),
                                  Constructor
                                    (149,
                                      cons/2,
                                      Variable
                                        (149,
                                          x3/0),
                                      Constructor
                                        (149,
                                          cons/2,
                                          Variable
                                            (149,
                                              x1/0),
                                          Constructor
                                            (149,
                                              []/2)))),
                              Constructor
                                (150,
                                  cons/2,
                                  Variable
                                    (150,
                                      x3/0),
                                  Constructor
                                    (150,
                                      cons/2,
                                      Variable
                                        (150,
                                          x2/0),
                                      Constructor
                                        (150,
                                          cons/2,
                                          Variable
                                            (150,
                                              x1/0),
                                          Constructor
                                            (150,
                                              []/2))))))));
                (Tuple (n, l),
                  LetVar 153 n1 =
                    Apply
                      (153,
                        Variable
                          (153,
                            Z.div/2),
                        [
                          Variable
                            (153,
                              n/0);
                          Constant
                            (153,
                              Int(2))
                        ])
                    in
                  LetVar 154 n2 =
                    Apply
                      (154,
                        Variable
                          (154,
                            Z.sub/2),
                        [
                          Variable
                            (154,
                              n/0);
                          Variable
                            (154,
                              n1/0)
                        ])
                    in
                  LetVar 155 l2 =
                    Apply
                      (155,
                        Variable
                          (155,
                            chop/1),
                        [
                          Variable
                            (155,
                              n1/0);
                          Variable
                            (155,
                              l/0)
                        ])
                    in
                  LetVar 156 s1 =
                    Apply
                      (156,
                        Variable
                          (156,
                            rev_sort/0),
                        [
                          Variable
                            (156,
                              cmp/0);
                          Variable
                            (156,
                              n1/0);
                          Variable
                            (156,
                              l/0)
                        ])
                    in
                  LetVar 157 s2 =
                    Apply
                      (157,
                        Variable
                          (157,
                            rev_sort/0),
                        [
                          Variable
                            (157,
                              cmp/0);
                          Variable
                            (157,
                              n2/0);
                          Variable
                            (157,
                              l2/0)
                        ])
                    in
                  Apply
                    (158,
                      Variable
                        (158,
                          rev_merge_rev/0),
                      [
                        Variable
                          (158,
                            cmp/0);
                        Variable
                          (158,
                            s1/0);
                        Variable
                          (158,
                            s2/0);
                        Constructor
                          (158,
                            []/2)
                      ]))
              ]));
        ((rev_sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (n, Type (Z/2));
            (l, Type (list/2, A))
          ], Some Type (list/2, A)),
          Match
            (161, Tuple (161, Variable (161, n/0), Variable (161, l/0)),
              [
                (Tuple
                  (Int(2),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Any))),
                  IfThenElse
                    (163,
                      Apply
                        (163,
                          Variable
                            (163,
                              OCaml.Pervasives.gt/2),
                          [
                            Apply
                              (163,
                                Variable
                                  (163,
                                    cmp/0),
                                [
                                  Variable
                                    (163,
                                      x1/0);
                                  Variable
                                    (163,
                                      x2/0)
                                ]);
                            Constant
                              (163,
                                Int(0))
                          ]),
                      Constructor
                        (163,
                          cons/2,
                          Variable
                            (163,
                              x1/0),
                          Constructor
                            (163,
                              cons/2,
                              Variable
                                (163,
                                  x2/0),
                              Constructor
                                (163,
                                  []/2))),
                      Constructor
                        (163,
                          cons/2,
                          Variable
                            (163,
                              x2/0),
                          Constructor
                            (163,
                              cons/2,
                              Variable
                                (163,
                                  x1/0),
                              Constructor
                                (163,
                                  []/2)))));
                (Tuple
                  (Int(3),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Constructor
                              (cons/2,
                                x3,
                                Any)))),
                  IfThenElse
                    (165,
                      Apply
                        (165,
                          Variable
                            (165,
                              OCaml.Pervasives.gt/2),
                          [
                            Apply
                              (165,
                                Variable
                                  (165,
                                    cmp/0),
                                [
                                  Variable
                                    (165,
                                      x1/0);
                                  Variable
                                    (165,
                                      x2/0)
                                ]);
                            Constant
                              (165,
                                Int(0))
                          ]),
                      IfThenElse
                        (165,
                          Apply
                            (166,
                              Variable
                                (166,
                                  OCaml.Pervasives.gt/2),
                              [
                                Apply
                                  (166,
                                    Variable
                                      (166,
                                        cmp/0),
                                    [
                                      Variable
                                        (166,
                                          x2/0);
                                      Variable
                                        (166,
                                          x3/0)
                                    ]);
                                Constant
                                  (166,
                                    Int(0))
                              ]),
                          Constructor
                            (166,
                              cons/2,
                              Variable
                                (166,
                                  x1/0),
                              Constructor
                                (166,
                                  cons/2,
                                  Variable
                                    (166,
                                      x2/0),
                                  Constructor
                                    (166,
                                      cons/2,
                                      Variable
                                        (166,
                                          x3/0),
                                      Constructor
                                        (166,
                                          []/2)))),
                          IfThenElse
                            (167,
                              Apply
                                (167,
                                  Variable
                                    (167,
                                      OCaml.Pervasives.gt/2),
                                  [
                                    Apply
                                      (167,
                                        Variable
                                          (167,
                                            cmp/0),
                                        [
                                          Variable
                                            (167,
                                              x1/0);
                                          Variable
                                            (167,
                                              x3/0)
                                        ]);
                                    Constant
                                      (167,
                                        Int(0))
                                  ]),
                              Constructor
                                (167,
                                  cons/2,
                                  Variable
                                    (167,
                                      x1/0),
                                  Constructor
                                    (167,
                                      cons/2,
                                      Variable
                                        (167,
                                          x3/0),
                                      Constructor
                                        (167,
                                          cons/2,
                                          Variable
                                            (167,
                                              x2/0),
                                          Constructor
                                            (167,
                                              []/2)))),
                              Constructor
                                (168,
                                  cons/2,
                                  Variable
                                    (168,
                                      x3/0),
                                  Constructor
                                    (168,
                                      cons/2,
                                      Variable
                                        (168,
                                          x1/0),
                                      Constructor
                                        (168,
                                          cons/2,
                                          Variable
                                            (168,
                                              x2/0),
                                          Constructor
                                            (168,
                                              []/2)))))),
                      IfThenElse
                        (169,
                          Apply
                            (170,
                              Variable
                                (170,
                                  OCaml.Pervasives.gt/2),
                              [
                                Apply
                                  (170,
                                    Variable
                                      (170,
                                        cmp/0),
                                    [
                                      Variable
                                        (170,
                                          x1/0);
                                      Variable
                                        (170,
                                          x3/0)
                                    ]);
                                Constant
                                  (170,
                                    Int(0))
                              ]),
                          Constructor
                            (170,
                              cons/2,
                              Variable
                                (170,
                                  x2/0),
                              Constructor
                                (170,
                                  cons/2,
                                  Variable
                                    (170,
                                      x1/0),
                                  Constructor
                                    (170,
                                      cons/2,
                                      Variable
                                        (170,
                                          x3/0),
                                      Constructor
                                        (170,
                                          []/2)))),
                          IfThenElse
                            (171,
                              Apply
                                (171,
                                  Variable
                                    (171,
                                      OCaml.Pervasives.gt/2),
                                  [
                                    Apply
                                      (171,
                                        Variable
                                          (171,
                                            cmp/0),
                                        [
                                          Variable
                                            (171,
                                              x2/0);
                                          Variable
                                            (171,
                                              x3/0)
                                        ]);
                                    Constant
                                      (171,
                                        Int(0))
                                  ]),
                              Constructor
                                (171,
                                  cons/2,
                                  Variable
                                    (171,
                                      x2/0),
                                  Constructor
                                    (171,
                                      cons/2,
                                      Variable
                                        (171,
                                          x3/0),
                                      Constructor
                                        (171,
                                          cons/2,
                                          Variable
                                            (171,
                                              x1/0),
                                          Constructor
                                            (171,
                                              []/2)))),
                              Constructor
                                (172,
                                  cons/2,
                                  Variable
                                    (172,
                                      x3/0),
                                  Constructor
                                    (172,
                                      cons/2,
                                      Variable
                                        (172,
                                          x2/0),
                                      Constructor
                                        (172,
                                          cons/2,
                                          Variable
                                            (172,
                                              x1/0),
                                          Constructor
                                            (172,
                                              []/2))))))));
                (Tuple (n, l),
                  LetVar 175 n1 =
                    Apply
                      (175,
                        Variable
                          (175,
                            Z.div/2),
                        [
                          Variable
                            (175,
                              n/0);
                          Constant
                            (175,
                              Int(2))
                        ])
                    in
                  LetVar 176 n2 =
                    Apply
                      (176,
                        Variable
                          (176,
                            Z.sub/2),
                        [
                          Variable
                            (176,
                              n/0);
                          Variable
                            (176,
                              n1/0)
                        ])
                    in
                  LetVar 177 l2 =
                    Apply
                      (177,
                        Variable
                          (177,
                            chop/1),
                        [
                          Variable
                            (177,
                              n1/0);
                          Variable
                            (177,
                              l/0)
                        ])
                    in
                  LetVar 178 s1 =
                    Apply
                      (178,
                        Variable
                          (178,
                            sort/0),
                        [
                          Variable
                            (178,
                              cmp/0);
                          Variable
                            (178,
                              n1/0);
                          Variable
                            (178,
                              l/0)
                        ])
                    in
                  LetVar 179 s2 =
                    Apply
                      (179,
                        Variable
                          (179,
                            sort/0),
                        [
                          Variable
                            (179,
                              cmp/0);
                          Variable
                            (179,
                              n2/0);
                          Variable
                            (179,
                              l2/0)
                        ])
                    in
                  Apply
                    (180,
                      Variable
                        (180,
                          rev_merge/0),
                      [
                        Variable
                          (180,
                            cmp/0);
                        Variable
                          (180,
                            s1/0);
                        Variable
                          (180,
                            s2/0);
                        Constructor
                          (180,
                            []/2)
                      ]))
              ]))
      ])

183
Value
  (non_rec, @.,
    [
      ((stable_sort, [ A ],
        [ (cmp, (A -> (A -> Type (Z/1)))); (l, Type (list/1, A)) ],
        Some Type (list/1, A)),
        LetVar 184 len =
          Apply (184, Variable (184, length/0), [ Variable (184, l/0) ]) in
        IfThenElse
          (185,
            Apply
              (185, Variable (185, OCaml.Pervasives.lt/1),
                [ Variable (185, len/0); Constant (185, Int(2)) ]),
            Variable (185, l/0),
            Apply
              (185, Variable (185, StableSort.sort/0),
                [
                  Variable (185, cmp/0);
                  Variable (185, len/0);
                  Variable (185, l/0)
                ])))
    ])

187
Value
  (non_rec, @.,
    [
      ((sort, [ A ], [ ],
        Some
          ((A -> (A -> Type (Z/1))) ->
            (Type (list/1, A) -> Type (list/1, A)))),
        Variable (187, stable_sort/0))
    ])

188
Value
  (non_rec, @.,
    [
      ((fast_sort, [ A ], [ ],
        Some
          ((A -> (A -> Type (Z/1))) ->
            (Type (list/1, A) -> Type (list/1, A)))),
        Variable (188, stable_sort/0))
    ])

190 Module SortUniq:
  192
  Value
    (rec, @.,
      [
        ((rev_merge, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (l1, Type (list/2, A));
            (l2, Type (list/2, A));
            (accu, Type (list/2, A))
          ], Some Type (list/2, A)),
          LetFun 193
            (rec, @coq_rec,
              [
                ((rev_merge_aux_coq_rec, [ ],
                  [
                    (l2,
                      Type
                        (list/2,
                          A));
                    (accu,
                      Type
                        (list/2,
                          A))
                  ],
                  Some Type (list/2, A)),
                  Match
                    (194,
                      Tuple
                        (194,
                          Variable
                            (194,
                              l1/0),
                          Variable
                            (194,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/2),
                            l2),
                          Apply
                            (195,
                              Variable
                                (195,
                                  rev_append/1),
                              [
                                Variable
                                  (195,
                                    l2/0);
                                Variable
                                  (195,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/2)),
                          Apply
                            (196,
                              Variable
                                (196,
                                  rev_append/1),
                              [
                                Variable
                                  (196,
                                    l1/0);
                                Variable
                                  (196,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/2,
                              h1,
                              t1),
                            Constructor
                              (cons/2,
                                h2,
                                t2)),
                          LetVar
                            198
                            c
                            =
                            Apply
                              (198,
                                Variable
                                  (198,
                                    cmp/0),
                                [
                                  Variable
                                    (198,
                                      h1/0);
                                  Variable
                                    (198,
                                      h2/0)
                                ])
                            in
                          IfThenElse
                            (199,
                              Apply
                                (199,
                                  Variable
                                    (199,
                                      equiv_decb/2),
                                  [
                                    Variable
                                      (199,
                                        c/0);
                                    Constant
                                      (199,
                                        Int(0))
                                  ]),
                              Apply
                                (199,
                                  Variable
                                    (199,
                                      rev_merge/0),
                                  [
                                    Variable
                                      (199,
                                        cmp/0);
                                    Variable
                                      (199,
                                        t1/0);
                                    Variable
                                      (199,
                                        t2/0);
                                    Constructor
                                      (199,
                                        cons/2,
                                        Variable
                                          (199,
                                            h1/0),
                                        Variable
                                          (199,
                                            accu/0))
                                  ]),
                              IfThenElse
                                (200,
                                  Apply
                                    (200,
                                      Variable
                                        (200,
                                          OCaml.Pervasives.lt/2),
                                      [
                                        Variable
                                          (200,
                                            c/0);
                                        Constant
                                          (200,
                                            Int(0))
                                      ]),
                                  Apply
                                    (201,
                                      Variable
                                        (201,
                                          rev_merge/0),
                                      [
                                        Variable
                                          (201,
                                            cmp/0);
                                        Variable
                                          (201,
                                            t1/0);
                                        Variable
                                          (201,
                                            l2/0);
                                        Constructor
                                          (201,
                                            cons/2,
                                            Variable
                                              (201,
                                                h1/0),
                                            Variable
                                              (201,
                                                accu/0))
                                      ]),
                                  Apply
                                    (202,
                                      Variable
                                        (202,
                                          rev_merge_aux_coq_rec/0),
                                      [
                                        Variable
                                          (202,
                                            t2/0);
                                        Constructor
                                          (202,
                                            cons/2,
                                            Variable
                                              (202,
                                                h2/0),
                                            Variable
                                              (202,
                                                accu/0))
                                      ]))))
                      ]))
              ]) in
          Apply
            (203, Variable (203, rev_merge_aux_coq_rec/0),
              [ Variable (203, l2/0); Variable (203, accu/0) ]))
      ])
  
  206
  Value
    (rec, @.,
      [
        ((rev_merge_rev, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (l1, Type (list/2, A));
            (l2, Type (list/2, A));
            (accu, Type (list/2, A))
          ], Some Type (list/2, A)),
          LetFun 207
            (rec, @coq_rec,
              [
                ((rev_merge_rev_aux_coq_rec, [ ],
                  [
                    (l2,
                      Type
                        (list/2,
                          A));
                    (accu,
                      Type
                        (list/2,
                          A))
                  ],
                  Some Type (list/2, A)),
                  Match
                    (208,
                      Tuple
                        (208,
                          Variable
                            (208,
                              l1/0),
                          Variable
                            (208,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/2),
                            l2),
                          Apply
                            (209,
                              Variable
                                (209,
                                  rev_append/1),
                              [
                                Variable
                                  (209,
                                    l2/0);
                                Variable
                                  (209,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/2)),
                          Apply
                            (210,
                              Variable
                                (210,
                                  rev_append/1),
                              [
                                Variable
                                  (210,
                                    l1/0);
                                Variable
                                  (210,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/2,
                              h1,
                              t1),
                            Constructor
                              (cons/2,
                                h2,
                                t2)),
                          LetVar
                            212
                            c
                            =
                            Apply
                              (212,
                                Variable
                                  (212,
                                    cmp/0),
                                [
                                  Variable
                                    (212,
                                      h1/0);
                                  Variable
                                    (212,
                                      h2/0)
                                ])
                            in
                          IfThenElse
                            (213,
                              Apply
                                (213,
                                  Variable
                                    (213,
                                      equiv_decb/2),
                                  [
                                    Variable
                                      (213,
                                        c/0);
                                    Constant
                                      (213,
                                        Int(0))
                                  ]),
                              Apply
                                (213,
                                  Variable
                                    (213,
                                      rev_merge_rev/0),
                                  [
                                    Variable
                                      (213,
                                        cmp/0);
                                    Variable
                                      (213,
                                        t1/0);
                                    Variable
                                      (213,
                                        t2/0);
                                    Constructor
                                      (213,
                                        cons/2,
                                        Variable
                                          (213,
                                            h1/0),
                                        Variable
                                          (213,
                                            accu/0))
                                  ]),
                              IfThenElse
                                (214,
                                  Apply
                                    (214,
                                      Variable
                                        (214,
                                          OCaml.Pervasives.gt/2),
                                      [
                                        Variable
                                          (214,
                                            c/0);
                                        Constant
                                          (214,
                                            Int(0))
                                      ]),
                                  Apply
                                    (215,
                                      Variable
                                        (215,
                                          rev_merge_rev/0),
                                      [
                                        Variable
                                          (215,
                                            cmp/0);
                                        Variable
                                          (215,
                                            t1/0);
                                        Variable
                                          (215,
                                            l2/0);
                                        Constructor
                                          (215,
                                            cons/2,
                                            Variable
                                              (215,
                                                h1/0),
                                            Variable
                                              (215,
                                                accu/0))
                                      ]),
                                  Apply
                                    (216,
                                      Variable
                                        (216,
                                          rev_merge_rev_aux_coq_rec/0),
                                      [
                                        Variable
                                          (216,
                                            t2/0);
                                        Constructor
                                          (216,
                                            cons/2,
                                            Variable
                                              (216,
                                                h2/0),
                                            Variable
                                              (216,
                                                accu/0))
                                      ]))))
                      ]))
              ]) in
          Apply
            (217, Variable (217, rev_merge_rev_aux_coq_rec/0),
              [ Variable (217, l2/0); Variable (217, accu/0) ]))
      ])
  
  220
  Value
    (rec, @.,
      [
        ((sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (n, Type (Z/2));
            (l, Type (list/2, A))
          ], Some Type (list/2, A)),
          Match
            (221, Tuple (221, Variable (221, n/0), Variable (221, l/0)),
              [
                (Tuple
                  (Int(2),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Any))),
                  LetVar 223 c =
                    Apply
                      (223,
                        Variable
                          (223,
                            cmp/0),
                        [
                          Variable
                            (223,
                              x1/0);
                          Variable
                            (223,
                              x2/0)
                        ])
                    in
                  IfThenElse
                    (224,
                      Apply
                        (224,
                          Variable
                            (224,
                              equiv_decb/2),
                          [
                            Variable
                              (224,
                                c/0);
                            Constant
                              (224,
                                Int(0))
                          ]),
                      Constructor
                        (224,
                          cons/2,
                          Variable
                            (224,
                              x1/0),
                          Constructor
                            (224,
                              []/2)),
                      IfThenElse
                        (225,
                          Apply
                            (225,
                              Variable
                                (225,
                                  OCaml.Pervasives.lt/2),
                              [
                                Variable
                                  (225,
                                    c/0);
                                Constant
                                  (225,
                                    Int(0))
                              ]),
                          Constructor
                            (225,
                              cons/2,
                              Variable
                                (225,
                                  x1/0),
                              Constructor
                                (225,
                                  cons/2,
                                  Variable
                                    (225,
                                      x2/0),
                                  Constructor
                                    (225,
                                      []/2))),
                          Constructor
                            (225,
                              cons/2,
                              Variable
                                (225,
                                  x2/0),
                              Constructor
                                (225,
                                  cons/2,
                                  Variable
                                    (225,
                                      x1/0),
                                  Constructor
                                    (225,
                                      []/2))))));
                (Tuple
                  (Int(3),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Constructor
                              (cons/2,
                                x3,
                                Any)))),
                  LetVar 227 c =
                    Apply
                      (227,
                        Variable
                          (227,
                            cmp/0),
                        [
                          Variable
                            (227,
                              x1/0);
                          Variable
                            (227,
                              x2/0)
                        ])
                    in
                  IfThenElse
                    (228,
                      Apply
                        (228,
                          Variable
                            (228,
                              equiv_decb/2),
                          [
                            Variable
                              (228,
                                c/0);
                            Constant
                              (228,
                                Int(0))
                          ]),
                      LetVar
                        228
                        c
                        =
                        Apply
                          (229,
                            Variable
                              (229,
                                cmp/0),
                            [
                              Variable
                                (229,
                                  x2/0);
                              Variable
                                (229,
                                  x3/0)
                            ])
                        in
                      IfThenElse
                        (230,
                          Apply
                            (230,
                              Variable
                                (230,
                                  equiv_decb/2),
                              [
                                Variable
                                  (230,
                                    c/0);
                                Constant
                                  (230,
                                    Int(0))
                              ]),
                          Constructor
                            (230,
                              cons/2,
                              Variable
                                (230,
                                  x2/0),
                              Constructor
                                (230,
                                  []/2)),
                          IfThenElse
                            (231,
                              Apply
                                (231,
                                  Variable
                                    (231,
                                      OCaml.Pervasives.lt/2),
                                  [
                                    Variable
                                      (231,
                                        c/0);
                                    Constant
                                      (231,
                                        Int(0))
                                  ]),
                              Constructor
                                (231,
                                  cons/2,
                                  Variable
                                    (231,
                                      x2/0),
                                  Constructor
                                    (231,
                                      cons/2,
                                      Variable
                                        (231,
                                          x3/0),
                                      Constructor
                                        (231,
                                          []/2))),
                              Constructor
                                (231,
                                  cons/2,
                                  Variable
                                    (231,
                                      x3/0),
                                  Constructor
                                    (231,
                                      cons/2,
                                      Variable
                                        (231,
                                          x2/0),
                                      Constructor
                                        (231,
                                          []/2))))),
                      IfThenElse
                        (232,
                          Apply
                            (232,
                              Variable
                                (232,
                                  OCaml.Pervasives.lt/2),
                              [
                                Variable
                                  (232,
                                    c/0);
                                Constant
                                  (232,
                                    Int(0))
                              ]),
                          LetVar
                            232
                            c
                            =
                            Apply
                              (233,
                                Variable
                                  (233,
                                    cmp/0),
                                [
                                  Variable
                                    (233,
                                      x2/0);
                                  Variable
                                    (233,
                                      x3/0)
                                ])
                            in
                          IfThenElse
                            (234,
                              Apply
                                (234,
                                  Variable
                                    (234,
                                      equiv_decb/2),
                                  [
                                    Variable
                                      (234,
                                        c/0);
                                    Constant
                                      (234,
                                        Int(0))
                                  ]),
                              Constructor
                                (234,
                                  cons/2,
                                  Variable
                                    (234,
                                      x1/0),
                                  Constructor
                                    (234,
                                      cons/2,
                                      Variable
                                        (234,
                                          x2/0),
                                      Constructor
                                        (234,
                                          []/2))),
                              IfThenElse
                                (235,
                                  Apply
                                    (235,
                                      Variable
                                        (235,
                                          OCaml.Pervasives.lt/2),
                                      [
                                        Variable
                                          (235,
                                            c/0);
                                        Constant
                                          (235,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (235,
                                      cons/2,
                                      Variable
                                        (235,
                                          x1/0),
                                      Constructor
                                        (235,
                                          cons/2,
                                          Variable
                                            (235,
                                              x2/0),
                                          Constructor
                                            (235,
                                              cons/2,
                                              Variable
                                                (235,
                                                  x3/0),
                                              Constructor
                                                (235,
                                                  []/2)))),
                                  LetVar
                                    236
                                    c
                                    =
                                    Apply
                                      (236,
                                        Variable
                                          (236,
                                            cmp/0),
                                        [
                                          Variable
                                            (236,
                                              x1/0);
                                          Variable
                                            (236,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (237,
                                      Apply
                                        (237,
                                          Variable
                                            (237,
                                              equiv_decb/2),
                                          [
                                            Variable
                                              (237,
                                                c/0);
                                            Constant
                                              (237,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (237,
                                          cons/2,
                                          Variable
                                            (237,
                                              x1/0),
                                          Constructor
                                            (237,
                                              cons/2,
                                              Variable
                                                (237,
                                                  x2/0),
                                              Constructor
                                                (237,
                                                  []/2))),
                                      IfThenElse
                                        (238,
                                          Apply
                                            (238,
                                              Variable
                                                (238,
                                                  OCaml.Pervasives.lt/2),
                                              [
                                                Variable
                                                  (238,
                                                    c/0);
                                                Constant
                                                  (238,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (238,
                                              cons/2,
                                              Variable
                                                (238,
                                                  x1/0),
                                              Constructor
                                                (238,
                                                  cons/2,
                                                  Variable
                                                    (238,
                                                      x3/0),
                                                  Constructor
                                                    (238,
                                                      cons/2,
                                                      Variable
                                                        (238,
                                                          x2/0),
                                                      Constructor
                                                        (238,
                                                          []/2)))),
                                          Constructor
                                            (239,
                                              cons/2,
                                              Variable
                                                (239,
                                                  x3/0),
                                              Constructor
                                                (239,
                                                  cons/2,
                                                  Variable
                                                    (239,
                                                      x1/0),
                                                  Constructor
                                                    (239,
                                                      cons/2,
                                                      Variable
                                                        (239,
                                                          x2/0),
                                                      Constructor
                                                        (239,
                                                          []/2)))))))),
                          LetVar
                            240
                            c
                            =
                            Apply
                              (241,
                                Variable
                                  (241,
                                    cmp/0),
                                [
                                  Variable
                                    (241,
                                      x1/0);
                                  Variable
                                    (241,
                                      x3/0)
                                ])
                            in
                          IfThenElse
                            (242,
                              Apply
                                (242,
                                  Variable
                                    (242,
                                      equiv_decb/2),
                                  [
                                    Variable
                                      (242,
                                        c/0);
                                    Constant
                                      (242,
                                        Int(0))
                                  ]),
                              Constructor
                                (242,
                                  cons/2,
                                  Variable
                                    (242,
                                      x2/0),
                                  Constructor
                                    (242,
                                      cons/2,
                                      Variable
                                        (242,
                                          x1/0),
                                      Constructor
                                        (242,
                                          []/2))),
                              IfThenElse
                                (243,
                                  Apply
                                    (243,
                                      Variable
                                        (243,
                                          OCaml.Pervasives.lt/2),
                                      [
                                        Variable
                                          (243,
                                            c/0);
                                        Constant
                                          (243,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (243,
                                      cons/2,
                                      Variable
                                        (243,
                                          x2/0),
                                      Constructor
                                        (243,
                                          cons/2,
                                          Variable
                                            (243,
                                              x1/0),
                                          Constructor
                                            (243,
                                              cons/2,
                                              Variable
                                                (243,
                                                  x3/0),
                                              Constructor
                                                (243,
                                                  []/2)))),
                                  LetVar
                                    244
                                    c
                                    =
                                    Apply
                                      (244,
                                        Variable
                                          (244,
                                            cmp/0),
                                        [
                                          Variable
                                            (244,
                                              x2/0);
                                          Variable
                                            (244,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (245,
                                      Apply
                                        (245,
                                          Variable
                                            (245,
                                              equiv_decb/2),
                                          [
                                            Variable
                                              (245,
                                                c/0);
                                            Constant
                                              (245,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (245,
                                          cons/2,
                                          Variable
                                            (245,
                                              x2/0),
                                          Constructor
                                            (245,
                                              cons/2,
                                              Variable
                                                (245,
                                                  x1/0),
                                              Constructor
                                                (245,
                                                  []/2))),
                                      IfThenElse
                                        (246,
                                          Apply
                                            (246,
                                              Variable
                                                (246,
                                                  OCaml.Pervasives.lt/2),
                                              [
                                                Variable
                                                  (246,
                                                    c/0);
                                                Constant
                                                  (246,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (246,
                                              cons/2,
                                              Variable
                                                (246,
                                                  x2/0),
                                              Constructor
                                                (246,
                                                  cons/2,
                                                  Variable
                                                    (246,
                                                      x3/0),
                                                  Constructor
                                                    (246,
                                                      cons/2,
                                                      Variable
                                                        (246,
                                                          x1/0),
                                                      Constructor
                                                        (246,
                                                          []/2)))),
                                          Constructor
                                            (247,
                                              cons/2,
                                              Variable
                                                (247,
                                                  x3/0),
                                              Constructor
                                                (247,
                                                  cons/2,
                                                  Variable
                                                    (247,
                                                      x2/0),
                                                  Constructor
                                                    (247,
                                                      cons/2,
                                                      Variable
                                                        (247,
                                                          x1/0),
                                                      Constructor
                                                        (247,
                                                          []/2)))))))))));
                (Tuple (n, l),
                  LetVar 250 n1 =
                    Apply
                      (250,
                        Variable
                          (250,
                            Z.div/2),
                        [
                          Variable
                            (250,
                              n/0);
                          Constant
                            (250,
                              Int(2))
                        ])
                    in
                  LetVar 251 n2 =
                    Apply
                      (251,
                        Variable
                          (251,
                            Z.sub/2),
                        [
                          Variable
                            (251,
                              n/0);
                          Variable
                            (251,
                              n1/0)
                        ])
                    in
                  LetVar 252 l2 =
                    Apply
                      (252,
                        Variable
                          (252,
                            chop/1),
                        [
                          Variable
                            (252,
                              n1/0);
                          Variable
                            (252,
                              l/0)
                        ])
                    in
                  LetVar 253 s1 =
                    Apply
                      (253,
                        Variable
                          (253,
                            rev_sort/0),
                        [
                          Variable
                            (253,
                              cmp/0);
                          Variable
                            (253,
                              n1/0);
                          Variable
                            (253,
                              l/0)
                        ])
                    in
                  LetVar 254 s2 =
                    Apply
                      (254,
                        Variable
                          (254,
                            rev_sort/0),
                        [
                          Variable
                            (254,
                              cmp/0);
                          Variable
                            (254,
                              n2/0);
                          Variable
                            (254,
                              l2/0)
                        ])
                    in
                  Apply
                    (255,
                      Variable
                        (255,
                          rev_merge_rev/0),
                      [
                        Variable
                          (255,
                            cmp/0);
                        Variable
                          (255,
                            s1/0);
                        Variable
                          (255,
                            s2/0);
                        Constructor
                          (255,
                            []/2)
                      ]))
              ]));
        ((rev_sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/2))));
            (n, Type (Z/2));
            (l, Type (list/2, A))
          ], Some Type (list/2, A)),
          Match
            (258, Tuple (258, Variable (258, n/0), Variable (258, l/0)),
              [
                (Tuple
                  (Int(2),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Any))),
                  LetVar 260 c =
                    Apply
                      (260,
                        Variable
                          (260,
                            cmp/0),
                        [
                          Variable
                            (260,
                              x1/0);
                          Variable
                            (260,
                              x2/0)
                        ])
                    in
                  IfThenElse
                    (261,
                      Apply
                        (261,
                          Variable
                            (261,
                              equiv_decb/2),
                          [
                            Variable
                              (261,
                                c/0);
                            Constant
                              (261,
                                Int(0))
                          ]),
                      Constructor
                        (261,
                          cons/2,
                          Variable
                            (261,
                              x1/0),
                          Constructor
                            (261,
                              []/2)),
                      IfThenElse
                        (262,
                          Apply
                            (262,
                              Variable
                                (262,
                                  OCaml.Pervasives.gt/2),
                              [
                                Variable
                                  (262,
                                    c/0);
                                Constant
                                  (262,
                                    Int(0))
                              ]),
                          Constructor
                            (262,
                              cons/2,
                              Variable
                                (262,
                                  x1/0),
                              Constructor
                                (262,
                                  cons/2,
                                  Variable
                                    (262,
                                      x2/0),
                                  Constructor
                                    (262,
                                      []/2))),
                          Constructor
                            (262,
                              cons/2,
                              Variable
                                (262,
                                  x2/0),
                              Constructor
                                (262,
                                  cons/2,
                                  Variable
                                    (262,
                                      x1/0),
                                  Constructor
                                    (262,
                                      []/2))))));
                (Tuple
                  (Int(3),
                    Constructor
                      (cons/2,
                        x1,
                        Constructor
                          (cons/2,
                            x2,
                            Constructor
                              (cons/2,
                                x3,
                                Any)))),
                  LetVar 264 c =
                    Apply
                      (264,
                        Variable
                          (264,
                            cmp/0),
                        [
                          Variable
                            (264,
                              x1/0);
                          Variable
                            (264,
                              x2/0)
                        ])
                    in
                  IfThenElse
                    (265,
                      Apply
                        (265,
                          Variable
                            (265,
                              equiv_decb/2),
                          [
                            Variable
                              (265,
                                c/0);
                            Constant
                              (265,
                                Int(0))
                          ]),
                      LetVar
                        265
                        c
                        =
                        Apply
                          (266,
                            Variable
                              (266,
                                cmp/0),
                            [
                              Variable
                                (266,
                                  x2/0);
                              Variable
                                (266,
                                  x3/0)
                            ])
                        in
                      IfThenElse
                        (267,
                          Apply
                            (267,
                              Variable
                                (267,
                                  equiv_decb/2),
                              [
                                Variable
                                  (267,
                                    c/0);
                                Constant
                                  (267,
                                    Int(0))
                              ]),
                          Constructor
                            (267,
                              cons/2,
                              Variable
                                (267,
                                  x2/0),
                              Constructor
                                (267,
                                  []/2)),
                          IfThenElse
                            (268,
                              Apply
                                (268,
                                  Variable
                                    (268,
                                      OCaml.Pervasives.gt/2),
                                  [
                                    Variable
                                      (268,
                                        c/0);
                                    Constant
                                      (268,
                                        Int(0))
                                  ]),
                              Constructor
                                (268,
                                  cons/2,
                                  Variable
                                    (268,
                                      x2/0),
                                  Constructor
                                    (268,
                                      cons/2,
                                      Variable
                                        (268,
                                          x3/0),
                                      Constructor
                                        (268,
                                          []/2))),
                              Constructor
                                (268,
                                  cons/2,
                                  Variable
                                    (268,
                                      x3/0),
                                  Constructor
                                    (268,
                                      cons/2,
                                      Variable
                                        (268,
                                          x2/0),
                                      Constructor
                                        (268,
                                          []/2))))),
                      IfThenElse
                        (269,
                          Apply
                            (269,
                              Variable
                                (269,
                                  OCaml.Pervasives.gt/2),
                              [
                                Variable
                                  (269,
                                    c/0);
                                Constant
                                  (269,
                                    Int(0))
                              ]),
                          LetVar
                            269
                            c
                            =
                            Apply
                              (270,
                                Variable
                                  (270,
                                    cmp/0),
                                [
                                  Variable
                                    (270,
                                      x2/0);
                                  Variable
                                    (270,
                                      x3/0)
                                ])
                            in
                          IfThenElse
                            (271,
                              Apply
                                (271,
                                  Variable
                                    (271,
                                      equiv_decb/2),
                                  [
                                    Variable
                                      (271,
                                        c/0);
                                    Constant
                                      (271,
                                        Int(0))
                                  ]),
                              Constructor
                                (271,
                                  cons/2,
                                  Variable
                                    (271,
                                      x1/0),
                                  Constructor
                                    (271,
                                      cons/2,
                                      Variable
                                        (271,
                                          x2/0),
                                      Constructor
                                        (271,
                                          []/2))),
                              IfThenElse
                                (272,
                                  Apply
                                    (272,
                                      Variable
                                        (272,
                                          OCaml.Pervasives.gt/2),
                                      [
                                        Variable
                                          (272,
                                            c/0);
                                        Constant
                                          (272,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (272,
                                      cons/2,
                                      Variable
                                        (272,
                                          x1/0),
                                      Constructor
                                        (272,
                                          cons/2,
                                          Variable
                                            (272,
                                              x2/0),
                                          Constructor
                                            (272,
                                              cons/2,
                                              Variable
                                                (272,
                                                  x3/0),
                                              Constructor
                                                (272,
                                                  []/2)))),
                                  LetVar
                                    273
                                    c
                                    =
                                    Apply
                                      (273,
                                        Variable
                                          (273,
                                            cmp/0),
                                        [
                                          Variable
                                            (273,
                                              x1/0);
                                          Variable
                                            (273,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (274,
                                      Apply
                                        (274,
                                          Variable
                                            (274,
                                              equiv_decb/2),
                                          [
                                            Variable
                                              (274,
                                                c/0);
                                            Constant
                                              (274,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (274,
                                          cons/2,
                                          Variable
                                            (274,
                                              x1/0),
                                          Constructor
                                            (274,
                                              cons/2,
                                              Variable
                                                (274,
                                                  x2/0),
                                              Constructor
                                                (274,
                                                  []/2))),
                                      IfThenElse
                                        (275,
                                          Apply
                                            (275,
                                              Variable
                                                (275,
                                                  OCaml.Pervasives.gt/2),
                                              [
                                                Variable
                                                  (275,
                                                    c/0);
                                                Constant
                                                  (275,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (275,
                                              cons/2,
                                              Variable
                                                (275,
                                                  x1/0),
                                              Constructor
                                                (275,
                                                  cons/2,
                                                  Variable
                                                    (275,
                                                      x3/0),
                                                  Constructor
                                                    (275,
                                                      cons/2,
                                                      Variable
                                                        (275,
                                                          x2/0),
                                                      Constructor
                                                        (275,
                                                          []/2)))),
                                          Constructor
                                            (276,
                                              cons/2,
                                              Variable
                                                (276,
                                                  x3/0),
                                              Constructor
                                                (276,
                                                  cons/2,
                                                  Variable
                                                    (276,
                                                      x1/0),
                                                  Constructor
                                                    (276,
                                                      cons/2,
                                                      Variable
                                                        (276,
                                                          x2/0),
                                                      Constructor
                                                        (276,
                                                          []/2)))))))),
                          LetVar
                            277
                            c
                            =
                            Apply
                              (278,
                                Variable
                                  (278,
                                    cmp/0),
                                [
                                  Variable
                                    (278,
                                      x1/0);
                                  Variable
                                    (278,
                                      x3/0)
                                ])
                            in
                          IfThenElse
                            (279,
                              Apply
                                (279,
                                  Variable
                                    (279,
                                      equiv_decb/2),
                                  [
                                    Variable
                                      (279,
                                        c/0);
                                    Constant
                                      (279,
                                        Int(0))
                                  ]),
                              Constructor
                                (279,
                                  cons/2,
                                  Variable
                                    (279,
                                      x2/0),
                                  Constructor
                                    (279,
                                      cons/2,
                                      Variable
                                        (279,
                                          x1/0),
                                      Constructor
                                        (279,
                                          []/2))),
                              IfThenElse
                                (280,
                                  Apply
                                    (280,
                                      Variable
                                        (280,
                                          OCaml.Pervasives.gt/2),
                                      [
                                        Variable
                                          (280,
                                            c/0);
                                        Constant
                                          (280,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (280,
                                      cons/2,
                                      Variable
                                        (280,
                                          x2/0),
                                      Constructor
                                        (280,
                                          cons/2,
                                          Variable
                                            (280,
                                              x1/0),
                                          Constructor
                                            (280,
                                              cons/2,
                                              Variable
                                                (280,
                                                  x3/0),
                                              Constructor
                                                (280,
                                                  []/2)))),
                                  LetVar
                                    281
                                    c
                                    =
                                    Apply
                                      (281,
                                        Variable
                                          (281,
                                            cmp/0),
                                        [
                                          Variable
                                            (281,
                                              x2/0);
                                          Variable
                                            (281,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (282,
                                      Apply
                                        (282,
                                          Variable
                                            (282,
                                              equiv_decb/2),
                                          [
                                            Variable
                                              (282,
                                                c/0);
                                            Constant
                                              (282,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (282,
                                          cons/2,
                                          Variable
                                            (282,
                                              x2/0),
                                          Constructor
                                            (282,
                                              cons/2,
                                              Variable
                                                (282,
                                                  x1/0),
                                              Constructor
                                                (282,
                                                  []/2))),
                                      IfThenElse
                                        (283,
                                          Apply
                                            (283,
                                              Variable
                                                (283,
                                                  OCaml.Pervasives.gt/2),
                                              [
                                                Variable
                                                  (283,
                                                    c/0);
                                                Constant
                                                  (283,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (283,
                                              cons/2,
                                              Variable
                                                (283,
                                                  x2/0),
                                              Constructor
                                                (283,
                                                  cons/2,
                                                  Variable
                                                    (283,
                                                      x3/0),
                                                  Constructor
                                                    (283,
                                                      cons/2,
                                                      Variable
                                                        (283,
                                                          x1/0),
                                                      Constructor
                                                        (283,
                                                          []/2)))),
                                          Constructor
                                            (284,
                                              cons/2,
                                              Variable
                                                (284,
                                                  x3/0),
                                              Constructor
                                                (284,
                                                  cons/2,
                                                  Variable
                                                    (284,
                                                      x2/0),
                                                  Constructor
                                                    (284,
                                                      cons/2,
                                                      Variable
                                                        (284,
                                                          x1/0),
                                                      Constructor
                                                        (284,
                                                          []/2)))))))))));
                (Tuple (n, l),
                  LetVar 287 n1 =
                    Apply
                      (287,
                        Variable
                          (287,
                            Z.div/2),
                        [
                          Variable
                            (287,
                              n/0);
                          Constant
                            (287,
                              Int(2))
                        ])
                    in
                  LetVar 288 n2 =
                    Apply
                      (288,
                        Variable
                          (288,
                            Z.sub/2),
                        [
                          Variable
                            (288,
                              n/0);
                          Variable
                            (288,
                              n1/0)
                        ])
                    in
                  LetVar 289 l2 =
                    Apply
                      (289,
                        Variable
                          (289,
                            chop/1),
                        [
                          Variable
                            (289,
                              n1/0);
                          Variable
                            (289,
                              l/0)
                        ])
                    in
                  LetVar 290 s1 =
                    Apply
                      (290,
                        Variable
                          (290,
                            sort/0),
                        [
                          Variable
                            (290,
                              cmp/0);
                          Variable
                            (290,
                              n1/0);
                          Variable
                            (290,
                              l/0)
                        ])
                    in
                  LetVar 291 s2 =
                    Apply
                      (291,
                        Variable
                          (291,
                            sort/0),
                        [
                          Variable
                            (291,
                              cmp/0);
                          Variable
                            (291,
                              n2/0);
                          Variable
                            (291,
                              l2/0)
                        ])
                    in
                  Apply
                    (292,
                      Variable
                        (292,
                          rev_merge/0),
                      [
                        Variable
                          (292,
                            cmp/0);
                        Variable
                          (292,
                            s1/0);
                        Variable
                          (292,
                            s2/0);
                        Constructor
                          (292,
                            []/2)
                      ]))
              ]))
      ])

295
Value
  (non_rec, @.,
    [
      ((sort_uniq, [ A ],
        [ (cmp, (A -> (A -> Type (Z/1)))); (l, Type (list/1, A)) ],
        Some Type (list/1, A)),
        LetVar 296 len =
          Apply (296, Variable (296, length/0), [ Variable (296, l/0) ]) in
        IfThenElse
          (297,
            Apply
              (297, Variable (297, OCaml.Pervasives.lt/1),
                [ Variable (297, len/0); Constant (297, Int(2)) ]),
            Variable (297, l/0),
            Apply
              (297, Variable (297, SortUniq.sort/0),
                [
                  Variable (297, cmp/0);
                  Variable (297, len/0);
                  Variable (297, l/0)
                ])))
    ])
