16
(Value
  (rec, @coq_rec,
    [
      ((length_aux, [ A ], [ (len, Type (Z/1)); (x, Type (list/1, A)) ],
        Some Type (Z/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Variable (17, len/0));
              (Constructor (cons/1, a, l),
                Apply
                  (18,
                    Variable
                      (18,
                        length_aux/0),
                    [
                      Apply
                        (18,
                          Variable
                            (18,
                              Z.add/0),
                          [
                            Variable
                              (18,
                                len/0);
                            Constant
                              (18,
                                Int(1))
                          ]);
                      Variable
                        (18,
                          l/0)
                    ]))
            ]))
    ]))

21
(Value
  (non_rec, @.,
    [
      ((length, [ A ], [ (l, Type (list/1, A)) ], Some Type (Z/1)),
        Apply
          (21, Variable (21, length_aux/0),
            [ Constant (21, Int(0)); Variable (21, l/0) ]))
    ]))

23
(Value
  (non_rec, @.,
    [
      ((hd, [ A ], [ (x, Type (list/1, A)) ], Some A),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1),
                Apply
                  (24,
                    Variable
                      (24,
                        OCaml.Pervasives.failwith/1),
                    [
                      Constant
                        (24,
                          String("hd"))
                    ]));
              (Constructor (cons/1, a, l), Variable (25, a/0))
            ]))
    ]))

27
(Value
  (non_rec, @.,
    [
      ((tl, [ A ], [ (x, Type (list/1, A)) ], Some Type (list/1, A)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1),
                Apply
                  (28,
                    Variable
                      (28,
                        OCaml.Pervasives.failwith/1),
                    [
                      Constant
                        (28,
                          String("tl"))
                    ]));
              (Constructor (cons/1, a, l), Variable (29, l/0))
            ]))
    ]))

31
(Value
  (non_rec, @.,
    [
      ((nth, [ A ], [ (l, Type (list/1, A)); (n, Type (Z/1)) ], Some A),
        IfThenElse
          (32,
            Apply
              (32, Variable (32, OCaml.Pervasives.lt/0),
                [ Variable (32, n/0); Constant (32, Int(0)) ]),
            Apply
              (32, Variable (32, OCaml.Pervasives.invalid_arg/1),
                [ Constant (32, String("List.nth")) ]),
            LetFun 33
              (rec, @coq_rec,
                [
                  ((nth_aux, [ B ],
                    [
                      (l,
                        Type
                          (list/1,
                            B));
                      (n,
                        Type
                          (Z/1))
                    ], Some B),
                    Match
                      (34,
                        Variable
                          (34,
                            l/0),
                        [
                          (Constructor
                            ([]/1),
                            Apply
                              (35,
                                Variable
                                  (35,
                                    OCaml.Pervasives.failwith/1),
                                [
                                  Constant
                                    (35,
                                      String("nth"))
                                ]));
                          (Constructor
                            (cons/1,
                              a,
                              l),
                            IfThenElse
                              (36,
                                Apply
                                  (36,
                                    Variable
                                      (36,
                                        equiv_decb/0),
                                    [
                                      Variable
                                        (36,
                                          n/0);
                                      Constant
                                        (36,
                                          Int(0))
                                    ]),
                                Variable
                                  (36,
                                    a/0),
                                Apply
                                  (36,
                                    Variable
                                      (36,
                                        nth_aux/0),
                                    [
                                      Variable
                                        (36,
                                          l/0);
                                      Apply
                                        (36,
                                          Variable
                                            (36,
                                              Z.sub/0),
                                          [
                                            Variable
                                              (36,
                                                n/0);
                                            Constant
                                              (36,
                                                Int(1))
                                          ])
                                    ])))
                        ]))
                ]) in
            Apply
              (38, Variable (38, nth_aux/0),
                [ Variable (38, l/0); Variable (38, n/0) ])))
    ]))

40
(Value
  (non_rec, @.,
    [
      ((append, [ A ], [ ],
        Some (Type (list/1, A) -> (Type (list/1, A) -> Type (list/1, A)))),
        Variable (40, OCaml.Pervasives.app/0))
    ]))

42
(Value
  (rec, @coq_rec,
    [
      ((rev_append, [ A ], [ (l1, Type (list/1, A)); (l2, Type (list/1, A)) ],
        Some Type (list/1, A)),
        Match
          (43, Variable (43, l1/0),
            [
              (Constructor ([]/1), Variable (44, l2/0));
              (Constructor (cons/1, a, l),
                Apply
                  (45,
                    Variable
                      (45,
                        rev_append/0),
                    [
                      Variable
                        (45,
                          l/0);
                      Constructor
                        (45,
                          cons/1,
                          Variable
                            (45,
                              a/0),
                          Variable
                            (45,
                              l2/0))
                    ]))
            ]))
    ]))

48
(Value
  (non_rec, @.,
    [
      ((rev, [ A ], [ (l, Type (list/1, A)) ], Some Type (list/1, A)),
        Apply
          (48, Variable (48, rev_append/0),
            [ Variable (48, l/0); Constructor (48, []/1) ]))
    ]))

50
(Value
  (rec, @coq_rec,
    [
      ((flatten, [ A ], [ (x, Type (list/1, Type (list/1, A))) ],
        Some Type (list/1, A)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (51, []/1));
              (Constructor (cons/1, l, r),
                Apply
                  (52,
                    Variable
                      (52,
                        OCaml.Pervasives.app/0),
                    [
                      Variable
                        (52,
                          l/0);
                      Apply
                        (52,
                          Variable
                            (52,
                              flatten/0),
                          [
                            Variable
                              (52,
                                r/0)
                          ])
                    ]))
            ]))
    ]))

55
(Value
  (non_rec, @.,
    [
      ((concat, [ A ], [ ],
        Some (Type (list/1, Type (list/1, A)) -> Type (list/1, A))),
        Variable (55, flatten/0))
    ]))

57
(Value
  (rec, @coq_rec,
    [
      ((map, [ A; B ], [ (f, (A -> B)); (x, Type (list/1, A)) ],
        Some Type (list/1, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (58, []/1));
              (Constructor (cons/1, a, l),
                LetVar 59 r =
                  Apply
                    (59,
                      Variable
                        (59,
                          f/0),
                      [
                        Variable
                          (59,
                            a/0)
                      ])
                  in
                Constructor
                  (59, cons/1,
                    Variable
                      (59,
                        r/0),
                    Apply
                      (59,
                        Variable
                          (59,
                            map/0),
                        [
                          Variable
                            (59,
                              f/0);
                          Variable
                            (59,
                              l/0)
                        ])))
            ]))
    ]))

62
(Value
  (rec, @coq_rec,
    [
      ((mapi_aux, [ A; B ],
        [
          (i, Type (Z/1));
          (f, (Type (Z/1) -> (A -> B)));
          (x, Type (list/1, A))
        ], Some Type (list/1, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (63, []/1));
              (Constructor (cons/1, a, l),
                LetVar 64 r =
                  Apply
                    (64,
                      Variable
                        (64,
                          f/0),
                      [
                        Variable
                          (64,
                            i/0);
                        Variable
                          (64,
                            a/0)
                      ])
                  in
                Constructor
                  (64, cons/1,
                    Variable
                      (64,
                        r/0),
                    Apply
                      (64,
                        Variable
                          (64,
                            mapi_aux/0),
                        [
                          Apply
                            (64,
                              Variable
                                (64,
                                  Z.add/0),
                              [
                                Variable
                                  (64,
                                    i/0);
                                Constant
                                  (64,
                                    Int(1))
                              ]);
                          Variable
                            (64,
                              f/0);
                          Variable
                            (64,
                              l/0)
                        ])))
            ]))
    ]))

67
(Value
  (non_rec, @.,
    [
      ((mapi, [ A; B ],
        [ (f, (Type (Z/1) -> (A -> B))); (l, Type (list/1, A)) ],
        Some Type (list/1, B)),
        Apply
          (67, Variable (67, mapi_aux/0),
            [
              Constant (67, Int(0));
              Variable (67, f/0);
              Variable (67, l/0)
            ]))
    ]))

69
(Value
  (non_rec, @.,
    [
      ((rev_map, [ A; B ], [ (f, (A -> B)); (l, Type (list/1, A)) ],
        Some Type (list/1, B)),
        LetFun 70
          (rec, @coq_rec,
            [
              ((rmap_f, [ ],
                [
                  (accu,
                    Type
                      (list/1,
                        B));
                  (x, Type (list/1, A))
                ], Some Type (list/1, B)),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/1),
                        Variable
                          (71,
                            accu/0));
                      (Constructor
                        (cons/1,
                          a,
                          l),
                        Apply
                          (72,
                            Variable
                              (72,
                                rmap_f/0),
                            [
                              Constructor
                                (72,
                                  cons/1,
                                  Apply
                                    (72,
                                      Variable
                                        (72,
                                          f/0),
                                      [
                                        Variable
                                          (72,
                                            a/0)
                                      ]),
                                  Variable
                                    (72,
                                      accu/0));
                              Variable
                                (72,
                                  l/0)
                            ]))
                    ]))
            ]) in
        Apply
          (74, Variable (74, rmap_f/0),
            [ Constructor (74, []/1); Variable (74, l/0) ]))
    ]))

76
(Value
  (rec, @coq_rec,
    [
      ((iter, [ A; B ], [ (f, (A -> B)); (x, Type (list/1, A)) ],
        Some Type (unit/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (77, tt/1));
              (Constructor (cons/1, a, l),
                Sequence
                  (78,
                    Apply
                      (78,
                        Variable
                          (78,
                            f/0),
                        [
                          Variable
                            (78,
                              a/0)
                        ]),
                    Apply
                      (78,
                        Variable
                          (78,
                            iter/0),
                        [
                          Variable
                            (78,
                              f/0);
                          Variable
                            (78,
                              l/0)
                        ])))
            ]))
    ]))

81
(Value
  (rec, @coq_rec,
    [
      ((iteri_aux, [ A; B ],
        [
          (i, Type (Z/1));
          (f, (Type (Z/1) -> (A -> B)));
          (x, Type (list/1, A))
        ], Some Type (unit/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (82, tt/1));
              (Constructor (cons/1, a, l),
                Sequence
                  (83,
                    Apply
                      (83,
                        Variable
                          (83,
                            f/0),
                        [
                          Variable
                            (83,
                              i/0);
                          Variable
                            (83,
                              a/0)
                        ]),
                    Apply
                      (83,
                        Variable
                          (83,
                            iteri_aux/0),
                        [
                          Apply
                            (83,
                              Variable
                                (83,
                                  Z.add/0),
                              [
                                Variable
                                  (83,
                                    i/0);
                                Constant
                                  (83,
                                    Int(1))
                              ]);
                          Variable
                            (83,
                              f/0);
                          Variable
                            (83,
                              l/0)
                        ])))
            ]))
    ]))

86
(Value
  (non_rec, @.,
    [
      ((iteri, [ A; B ],
        [ (f, (Type (Z/1) -> (A -> B))); (l, Type (list/1, A)) ],
        Some Type (unit/1)),
        Apply
          (86, Variable (86, iteri_aux/0),
            [
              Constant (86, Int(0));
              Variable (86, f/0);
              Variable (86, l/0)
            ]))
    ]))

88
(Value
  (rec, @coq_rec,
    [
      ((fold_left, [ A; B ],
        [ (f, (A -> (B -> A))); (accu, A); (l, Type (list/1, B)) ], Some A),
        Match
          (89, Variable (89, l/0),
            [
              (Constructor ([]/1), Variable (90, accu/0));
              (Constructor (cons/1, a, l),
                Apply
                  (91,
                    Variable
                      (91,
                        fold_left/0),
                    [
                      Variable
                        (91,
                          f/0);
                      Apply
                        (91,
                          Variable
                            (91,
                              f/0),
                          [
                            Variable
                              (91,
                                accu/0);
                            Variable
                              (91,
                                a/0)
                          ]);
                      Variable
                        (91,
                          l/0)
                    ]))
            ]))
    ]))

94
(Value
  (rec, @coq_rec,
    [
      ((fold_right, [ A; B ],
        [ (f, (A -> (B -> B))); (l, Type (list/1, A)); (accu, B) ], Some B),
        Match
          (95, Variable (95, l/0),
            [
              (Constructor ([]/1), Variable (96, accu/0));
              (Constructor (cons/1, a, l),
                Apply
                  (97,
                    Variable
                      (97,
                        f/0),
                    [
                      Variable
                        (97,
                          a/0);
                      Apply
                        (97,
                          Variable
                            (97,
                              fold_right/0),
                          [
                            Variable
                              (97,
                                f/0);
                            Variable
                              (97,
                                l/0);
                            Variable
                              (97,
                                accu/0)
                          ])
                    ]))
            ]))
    ]))

100
(Value
  (rec, @coq_rec,
    [
      ((map2, [ A; B; C ],
        [
          (f, (A -> (B -> C)));
          (l1, Type (list/1, A));
          (l2, Type (list/1, B))
        ], Some Type (list/1, C)),
        Match
          (101, Tuple (101, Variable (101, l1/0), Variable (101, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Constructor (102, []/1));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                LetVar 103 r =
                  Apply
                    (103,
                      Variable
                        (103,
                          f/0),
                      [
                        Variable
                          (103,
                            a1/0);
                        Variable
                          (103,
                            a2/0)
                      ])
                  in
                Constructor
                  (103, cons/1,
                    Variable
                      (103,
                        r/0),
                    Apply
                      (103,
                        Variable
                          (103,
                            map2/0),
                        [
                          Variable
                            (103,
                              f/0);
                          Variable
                            (103,
                              l1/0);
                          Variable
                            (103,
                              l2/0)
                        ])));
              (Tuple (Any, Any),
                Apply
                  (104,
                    Variable
                      (104,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (104,
                          String("List.map2"))
                    ]))
            ]))
    ]))

107
(Value
  (non_rec, @.,
    [
      ((rev_map2, [ A; B; C ],
        [
          (f, (A -> (B -> C)));
          (l1, Type (list/1, A));
          (l2, Type (list/1, B))
        ], Some Type (list/1, C)),
        LetFun 108
          (rec, @coq_rec,
            [
              ((rmap2_f, [ ],
                [
                  (accu,
                    Type
                      (list/1,
                        C));
                  (l1, Type (list/1, A));
                  (l2, Type (list/1, B))
                ], Some Type (list/1, C)),
                Match
                  (109,
                    Tuple
                      (109,
                        Variable
                          (109,
                            l1/0),
                        Variable
                          (109,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          Constructor
                            ([]/1)),
                        Variable
                          (110,
                            accu/0));
                      (Tuple
                        (Constructor
                          (cons/1,
                            a1,
                            l1),
                          Constructor
                            (cons/1,
                              a2,
                              l2)),
                        Apply
                          (111,
                            Variable
                              (111,
                                rmap2_f/0),
                            [
                              Constructor
                                (111,
                                  cons/1,
                                  Apply
                                    (111,
                                      Variable
                                        (111,
                                          f/0),
                                      [
                                        Variable
                                          (111,
                                            a1/0);
                                        Variable
                                          (111,
                                            a2/0)
                                      ]),
                                  Variable
                                    (111,
                                      accu/0));
                              Variable
                                (111,
                                  l1/0);
                              Variable
                                (111,
                                  l2/0)
                            ]));
                      (Tuple
                        (Any,
                          Any),
                        Apply
                          (112,
                            Variable
                              (112,
                                OCaml.Pervasives.invalid_arg/1),
                            [
                              Constant
                                (112,
                                  String("List.rev_map2"))
                            ]))
                    ]))
            ]) in
        Apply
          (114, Variable (114, rmap2_f/0),
            [
              Constructor (114, []/1);
              Variable (114, l1/0);
              Variable (114, l2/0)
            ]))
    ]))

116
(Value
  (rec, @coq_rec,
    [
      ((iter2, [ A; B; C ],
        [
          (f, (A -> (B -> C)));
          (l1, Type (list/1, A));
          (l2, Type (list/1, B))
        ], Some Type (unit/1)),
        Match
          (117, Tuple (117, Variable (117, l1/0), Variable (117, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Constructor (118, tt/1));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                Sequence
                  (119,
                    Apply
                      (119,
                        Variable
                          (119,
                            f/0),
                        [
                          Variable
                            (119,
                              a1/0);
                          Variable
                            (119,
                              a2/0)
                        ]),
                    Apply
                      (119,
                        Variable
                          (119,
                            iter2/0),
                        [
                          Variable
                            (119,
                              f/0);
                          Variable
                            (119,
                              l1/0);
                          Variable
                            (119,
                              l2/0)
                        ])));
              (Tuple (Any, Any),
                Apply
                  (120,
                    Variable
                      (120,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (120,
                          String("List.iter2"))
                    ]))
            ]))
    ]))

123
(Value
  (rec, @coq_rec,
    [
      ((fold_left2, [ A; B; C ],
        [
          (f, (A -> (B -> (C -> A))));
          (accu, A);
          (l1, Type (list/1, B));
          (l2, Type (list/1, C))
        ], Some A),
        Match
          (124, Tuple (124, Variable (124, l1/0), Variable (124, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Variable (125, accu/0));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                Apply
                  (126,
                    Variable
                      (126,
                        fold_left2/0),
                    [
                      Variable
                        (126,
                          f/0);
                      Apply
                        (126,
                          Variable
                            (126,
                              f/0),
                          [
                            Variable
                              (126,
                                accu/0);
                            Variable
                              (126,
                                a1/0);
                            Variable
                              (126,
                                a2/0)
                          ]);
                      Variable
                        (126,
                          l1/0);
                      Variable
                        (126,
                          l2/0)
                    ]));
              (Tuple (Any, Any),
                Apply
                  (127,
                    Variable
                      (127,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (127,
                          String("List.fold_left2"))
                    ]))
            ]))
    ]))

130
(Value
  (rec, @coq_rec,
    [
      ((fold_right2, [ A; B; C ],
        [
          (f, (A -> (B -> (C -> C))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, B));
          (accu, C)
        ], Some C),
        Match
          (131, Tuple (131, Variable (131, l1/0), Variable (131, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Variable (132, accu/0));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                Apply
                  (133,
                    Variable
                      (133,
                        f/0),
                    [
                      Variable
                        (133,
                          a1/0);
                      Variable
                        (133,
                          a2/0);
                      Apply
                        (133,
                          Variable
                            (133,
                              fold_right2/0),
                          [
                            Variable
                              (133,
                                f/0);
                            Variable
                              (133,
                                l1/0);
                            Variable
                              (133,
                                l2/0);
                            Variable
                              (133,
                                accu/0)
                          ])
                    ]));
              (Tuple (Any, Any),
                Apply
                  (134,
                    Variable
                      (134,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (134,
                          String("List.fold_right2"))
                    ]))
            ]))
    ]))

137
(Value
  (rec, @coq_rec,
    [
      ((for_all, [ A ], [ (p, (A -> Type (bool/1))); (x, Type (list/1, A)) ],
        Some Type (bool/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (138, true/1));
              (Constructor (cons/1, a, l),
                Apply
                  (139,
                    Variable
                      (139,
                        andb/0),
                    [
                      Apply
                        (139,
                          Variable
                            (139,
                              p/0),
                          [
                            Variable
                              (139,
                                a/0)
                          ]);
                      Apply
                        (139,
                          Variable
                            (139,
                              for_all/0),
                          [
                            Variable
                              (139,
                                p/0);
                            Variable
                              (139,
                                l/0)
                          ])
                    ]))
            ]))
    ]))

142
(Value
  (rec, @coq_rec,
    [
      ((_exists, [ A ], [ (p, (A -> Type (bool/1))); (x, Type (list/1, A)) ],
        Some Type (bool/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1), Constructor (143, false/1));
              (Constructor (cons/1, a, l),
                Apply
                  (144,
                    Variable
                      (144,
                        orb/0),
                    [
                      Apply
                        (144,
                          Variable
                            (144,
                              p/0),
                          [
                            Variable
                              (144,
                                a/0)
                          ]);
                      Apply
                        (144,
                          Variable
                            (144,
                              _exists/0),
                          [
                            Variable
                              (144,
                                p/0);
                            Variable
                              (144,
                                l/0)
                          ])
                    ]))
            ]))
    ]))

147
(Value
  (rec, @coq_rec,
    [
      ((for_all2, [ A; B ],
        [
          (p, (A -> (B -> Type (bool/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, B))
        ], Some Type (bool/1)),
        Match
          (148, Tuple (148, Variable (148, l1/0), Variable (148, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Constructor (149, true/1));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                Apply
                  (150,
                    Variable
                      (150,
                        andb/0),
                    [
                      Apply
                        (150,
                          Variable
                            (150,
                              p/0),
                          [
                            Variable
                              (150,
                                a1/0);
                            Variable
                              (150,
                                a2/0)
                          ]);
                      Apply
                        (150,
                          Variable
                            (150,
                              for_all2/0),
                          [
                            Variable
                              (150,
                                p/0);
                            Variable
                              (150,
                                l1/0);
                            Variable
                              (150,
                                l2/0)
                          ])
                    ]));
              (Tuple (Any, Any),
                Apply
                  (151,
                    Variable
                      (151,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (151,
                          String("List.for_all2"))
                    ]))
            ]))
    ]))

154
(Value
  (rec, @coq_rec,
    [
      ((_exists2, [ A; B ],
        [
          (p, (A -> (B -> Type (bool/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, B))
        ], Some Type (bool/1)),
        Match
          (155, Tuple (155, Variable (155, l1/0), Variable (155, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Constructor (156, false/1));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                Apply
                  (157,
                    Variable
                      (157,
                        orb/0),
                    [
                      Apply
                        (157,
                          Variable
                            (157,
                              p/0),
                          [
                            Variable
                              (157,
                                a1/0);
                            Variable
                              (157,
                                a2/0)
                          ]);
                      Apply
                        (157,
                          Variable
                            (157,
                              _exists2/0),
                          [
                            Variable
                              (157,
                                p/0);
                            Variable
                              (157,
                                l1/0);
                            Variable
                              (157,
                                l2/0)
                          ])
                    ]));
              (Tuple (Any, Any),
                Apply
                  (158,
                    Variable
                      (158,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (158,
                          String("List.exists2"))
                    ]))
            ]))
    ]))

194
(Value
  (rec, @coq_rec,
    [
      ((find, [ A ], [ (p, (A -> Type (bool/1))); (x, Type (list/1, A)) ],
        Some A),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1),
                Apply
                  (195,
                    Variable
                      (195,
                        OCaml.raise_Not_found/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (cons/1, x, l),
                IfThenElse
                  (196,
                    Apply
                      (196,
                        Variable
                          (196,
                            p/0),
                        [
                          Variable
                            (196,
                              x/0)
                        ]),
                    Variable
                      (196,
                        x/0),
                    Apply
                      (196,
                        Variable
                          (196,
                            find/0),
                        [
                          Variable
                            (196,
                              p/0);
                          Variable
                            (196,
                              l/0)
                        ])))
            ]))
    ]))

199
(Value
  (non_rec, @.,
    [
      ((find_all, [ A ], [ (p, (A -> Type (bool/1))) ],
        Some (Type (list/1, A) -> Type (list/1, A))),
        LetFun 200
          (rec, @coq_rec,
            [
              ((find, [ ],
                [
                  (accu,
                    Type
                      (list/1,
                        A));
                  (x, Type (list/1, A))
                ], Some Type (list/1, A)),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/1),
                        Apply
                          (201,
                            Variable
                              (201,
                                rev/0),
                            [
                              Variable
                                (201,
                                  accu/0)
                            ]));
                      (Constructor
                        (cons/1,
                          x,
                          l),
                        IfThenElse
                          (202,
                            Apply
                              (202,
                                Variable
                                  (202,
                                    p/0),
                                [
                                  Variable
                                    (202,
                                      x/0)
                                ]),
                            Apply
                              (202,
                                Variable
                                  (202,
                                    find/0),
                                [
                                  Constructor
                                    (202,
                                      cons/1,
                                      Variable
                                        (202,
                                          x/0),
                                      Variable
                                        (202,
                                          accu/0));
                                  Variable
                                    (202,
                                      l/0)
                                ]),
                            Apply
                              (202,
                                Variable
                                  (202,
                                    find/0),
                                [
                                  Variable
                                    (202,
                                      accu/0);
                                  Variable
                                    (202,
                                      l/0)
                                ])))
                    ]))
            ]) in
        Apply (204, Variable (204, find/0), [ Constructor (204, []/1) ]))
    ]))

206
(Value
  (non_rec, @.,
    [
      ((filter, [ A ], [ ],
        Some ((A -> Type (bool/1)) -> (Type (list/1, A) -> Type (list/1, A)))),
        Variable (206, find_all/0))
    ]))

208
(Value
  (non_rec, @.,
    [
      ((partition, [ A ], [ (p, (A -> Type (bool/1))); (l, Type (list/1, A)) ],
        Some (Type (list/1, A) * Type (list/1, A))),
        LetFun 209
          (rec, @coq_rec,
            [
              ((part, [ ],
                [
                  (yes, Type (list/1, A));
                  (no, Type (list/1, A));
                  (x, Type (list/1, A))
                ],
                Some
                  (Type (list/1, A) *
                    Type
                      (list/1,
                        A))),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/1),
                        Tuple
                          (210,
                            Apply
                              (210,
                                Variable
                                  (210,
                                    rev/0),
                                [
                                  Variable
                                    (210,
                                      yes/0)
                                ]),
                            Apply
                              (210,
                                Variable
                                  (210,
                                    rev/0),
                                [
                                  Variable
                                    (210,
                                      no/0)
                                ])));
                      (Constructor
                        (cons/1,
                          x,
                          l),
                        IfThenElse
                          (211,
                            Apply
                              (211,
                                Variable
                                  (211,
                                    p/0),
                                [
                                  Variable
                                    (211,
                                      x/0)
                                ]),
                            Apply
                              (211,
                                Variable
                                  (211,
                                    part/0),
                                [
                                  Constructor
                                    (211,
                                      cons/1,
                                      Variable
                                        (211,
                                          x/0),
                                      Variable
                                        (211,
                                          yes/0));
                                  Variable
                                    (211,
                                      no/0);
                                  Variable
                                    (211,
                                      l/0)
                                ]),
                            Apply
                              (211,
                                Variable
                                  (211,
                                    part/0),
                                [
                                  Variable
                                    (211,
                                      yes/0);
                                  Constructor
                                    (211,
                                      cons/1,
                                      Variable
                                        (211,
                                          x/0),
                                      Variable
                                        (211,
                                          no/0));
                                  Variable
                                    (211,
                                      l/0)
                                ])))
                    ]))
            ]) in
        Apply
          (213, Variable (213, part/0),
            [
              Constructor (213, []/1);
              Constructor (213, []/1);
              Variable (213, l/0)
            ]))
    ]))

215
(Value
  (rec, @coq_rec,
    [
      ((split, [ A; B ], [ (x, Type (list/1, (A * B))) ],
        Some (Type (list/1, A) * Type (list/1, B))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/1),
                Tuple
                  (216,
                    Constructor
                      (216,
                        []/1),
                    Constructor
                      (216,
                        []/1)));
              (Constructor (cons/1, Tuple (x, y), l),
                Match
                  (218,
                    Apply
                      (218,
                        Variable
                          (218,
                            split/0),
                        [
                          Variable
                            (218,
                              l/0)
                        ]),
                    [
                      (Tuple
                        (rx,
                          ry),
                        Tuple
                          (218,
                            Constructor
                              (218,
                                cons/1,
                                Variable
                                  (218,
                                    x/0),
                                Variable
                                  (218,
                                    rx/0)),
                            Constructor
                              (218,
                                cons/1,
                                Variable
                                  (218,
                                    y/0),
                                Variable
                                  (218,
                                    ry/0))))
                    ]))
            ]))
    ]))

221
(Value
  (rec, @coq_rec,
    [
      ((combine, [ A; B ], [ (l1, Type (list/1, A)); (l2, Type (list/1, B)) ],
        Some Type (list/1, (A * B))),
        Match
          (222, Tuple (222, Variable (222, l1/0), Variable (222, l2/0)),
            [
              (Tuple (Constructor ([]/1), Constructor ([]/1)),
                Constructor (223, []/1));
              (Tuple
                (Constructor (cons/1, a1, l1),
                  Constructor
                    (cons/1,
                      a2,
                      l2)),
                Constructor
                  (224, cons/1,
                    Tuple
                      (224,
                        Variable
                          (224,
                            a1/0),
                        Variable
                          (224,
                            a2/0)),
                    Apply
                      (224,
                        Variable
                          (224,
                            combine/0),
                        [
                          Variable
                            (224,
                              l1/0);
                          Variable
                            (224,
                              l2/0)
                        ])));
              (Tuple (Any, Any),
                Apply
                  (225,
                    Variable
                      (225,
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        (225,
                          String("List.combine"))
                    ]))
            ]))
    ]))

230
(Value
  (rec, @.,
    [
      ((merge_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (231,
                    Tuple
                      (231,
                        Variable
                          (231,
                            l1/0),
                        Variable
                          (231,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          l2),
                        Variable
                          (232,
                            l2/0));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/1)),
                        Variable
                          (233,
                            l1/0));
                      (Tuple
                        (Constructor
                          (cons/1,
                            h1,
                            t1),
                          Constructor
                            (cons/1,
                              h2,
                              t2)),
                        IfThenElse
                          (235,
                            Apply
                              (235,
                                Variable
                                  (235,
                                    OCaml.Pervasives.le/0),
                                [
                                  Apply
                                    (235,
                                      Variable
                                        (235,
                                          cmp/0),
                                      [
                                        Variable
                                          (235,
                                            h1/0);
                                        Variable
                                          (235,
                                            h2/0)
                                      ]);
                                  Constant
                                    (235,
                                      Int(0))
                                ]),
                            Constructor
                              (236,
                                cons/1,
                                Variable
                                  (236,
                                    h1/0),
                                Apply
                                  (236,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            merge_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (236,
                                          cmp/0);
                                      Variable
                                        (236,
                                          t1/0);
                                      Variable
                                        (236,
                                          l2/0)
                                    ])),
                            Constructor
                              (237,
                                cons/1,
                                Variable
                                  (237,
                                    h2/0),
                                Apply
                                  (237,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            merge_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (237,
                                          cmp/0);
                                      Variable
                                        (237,
                                          l1/0);
                                      Variable
                                        (237,
                                          t2/0)
                                    ]))))
                    ]))
            ]))
    ]))

230
(Value
  (non_rec, @.,
    [
      ((merge, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, merge_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, l1/0);
              Variable (?, l2/0)
            ]))
    ]))

239
(Value
  (rec, @coq_rec,
    [
      ((chop, [ A ], [ (k, Type (Z/1)); (l, Type (list/1, A)) ],
        Some Type (list/1, A)),
        IfThenElse
          (240,
            Apply
              (240, Variable (240, equiv_decb/0),
                [ Variable (240, k/0); Constant (240, Int(0)) ]),
            Variable (240, l/0),
            Match
              (240, Variable (241, l/0),
                [
                  (Constructor (cons/1, x, t),
                    Apply
                      (242,
                        Variable
                          (242,
                            chop/0),
                        [
                          Apply
                            (242,
                              Variable
                                (242,
                                  Z.sub/0),
                              [
                                Variable
                                  (242,
                                    k/0);
                                Constant
                                  (242,
                                    Int(1))
                              ]);
                          Variable
                            (242,
                              t/0)
                        ]));
                  (Any,
                    Apply
                      (243,
                        Variable
                          (243,
                            OCaml.assert/1),
                        [
                          Constructor
                            (243,
                              false/1)
                        ]))
                ])))
    ]))

247
(Value
  (rec, @.,
    [
      ((stable_sort_rev_merge_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (248,
                    Tuple
                      (248,
                        Variable
                          (248,
                            l1/0),
                        Variable
                          (248,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          l2),
                        Apply
                          (249,
                            Variable
                              (249,
                                rev_append/0),
                            [
                              Variable
                                (249,
                                  l2/0);
                              Variable
                                (249,
                                  accu/0)
                            ]));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/1)),
                        Apply
                          (250,
                            Variable
                              (250,
                                rev_append/0),
                            [
                              Variable
                                (250,
                                  l1/0);
                              Variable
                                (250,
                                  accu/0)
                            ]));
                      (Tuple
                        (Constructor
                          (cons/1,
                            h1,
                            t1),
                          Constructor
                            (cons/1,
                              h2,
                              t2)),
                        IfThenElse
                          (252,
                            Apply
                              (252,
                                Variable
                                  (252,
                                    OCaml.Pervasives.le/0),
                                [
                                  Apply
                                    (252,
                                      Variable
                                        (252,
                                          cmp/0),
                                      [
                                        Variable
                                          (252,
                                            h1/0);
                                        Variable
                                          (252,
                                            h2/0)
                                      ]);
                                  Constant
                                    (252,
                                      Int(0))
                                ]),
                            Apply
                              (253,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        stable_sort_rev_merge_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (253,
                                      cmp/0);
                                  Variable
                                    (253,
                                      t1/0);
                                  Variable
                                    (253,
                                      l2/0);
                                  Constructor
                                    (253,
                                      cons/1,
                                      Variable
                                        (253,
                                          h1/0),
                                      Variable
                                        (253,
                                          accu/0))
                                ]),
                            Apply
                              (254,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        stable_sort_rev_merge_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (254,
                                      cmp/0);
                                  Variable
                                    (254,
                                      l1/0);
                                  Variable
                                    (254,
                                      t2/0);
                                  Constructor
                                    (254,
                                      cons/1,
                                      Variable
                                        (254,
                                          h2/0),
                                      Variable
                                        (254,
                                          accu/0))
                                ])))
                    ]))
            ]))
    ]))

247
(Value
  (non_rec, @.,
    [
      ((stable_sort_rev_merge, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, stable_sort_rev_merge_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, l1/0);
              Variable (?, l2/0);
              Variable (?, accu/0)
            ]))
    ]))

256
(Value
  (rec, @.,
    [
      ((stable_sort_rev_merge_rev_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (257,
                    Tuple
                      (257,
                        Variable
                          (257,
                            l1/0),
                        Variable
                          (257,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          l2),
                        Apply
                          (258,
                            Variable
                              (258,
                                rev_append/0),
                            [
                              Variable
                                (258,
                                  l2/0);
                              Variable
                                (258,
                                  accu/0)
                            ]));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/1)),
                        Apply
                          (259,
                            Variable
                              (259,
                                rev_append/0),
                            [
                              Variable
                                (259,
                                  l1/0);
                              Variable
                                (259,
                                  accu/0)
                            ]));
                      (Tuple
                        (Constructor
                          (cons/1,
                            h1,
                            t1),
                          Constructor
                            (cons/1,
                              h2,
                              t2)),
                        IfThenElse
                          (261,
                            Apply
                              (261,
                                Variable
                                  (261,
                                    OCaml.Pervasives.gt/0),
                                [
                                  Apply
                                    (261,
                                      Variable
                                        (261,
                                          cmp/0),
                                      [
                                        Variable
                                          (261,
                                            h1/0);
                                        Variable
                                          (261,
                                            h2/0)
                                      ]);
                                  Constant
                                    (261,
                                      Int(0))
                                ]),
                            Apply
                              (262,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        stable_sort_rev_merge_rev_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (262,
                                      cmp/0);
                                  Variable
                                    (262,
                                      t1/0);
                                  Variable
                                    (262,
                                      l2/0);
                                  Constructor
                                    (262,
                                      cons/1,
                                      Variable
                                        (262,
                                          h1/0),
                                      Variable
                                        (262,
                                          accu/0))
                                ]),
                            Apply
                              (263,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        stable_sort_rev_merge_rev_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (263,
                                      cmp/0);
                                  Variable
                                    (263,
                                      l1/0);
                                  Variable
                                    (263,
                                      t2/0);
                                  Constructor
                                    (263,
                                      cons/1,
                                      Variable
                                        (263,
                                          h2/0),
                                      Variable
                                        (263,
                                          accu/0))
                                ])))
                    ]))
            ]))
    ]))

256
(Value
  (non_rec, @.,
    [
      ((stable_sort_rev_merge_rev, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, stable_sort_rev_merge_rev_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, l1/0);
              Variable (?, l2/0);
              Variable (?, accu/0)
            ]))
    ]))

265
(Value
  (rec, @.,
    [
      ((stable_sort_sort_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (266,
                    Tuple
                      (266,
                        Variable
                          (266,
                            n/0),
                        Variable
                          (266,
                            l/0)),
                    [
                      (Tuple
                        (Int(2),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Any))),
                        IfThenElse
                          (268,
                            Apply
                              (268,
                                Variable
                                  (268,
                                    OCaml.Pervasives.le/0),
                                [
                                  Apply
                                    (268,
                                      Variable
                                        (268,
                                          cmp/0),
                                      [
                                        Variable
                                          (268,
                                            x1/0);
                                        Variable
                                          (268,
                                            x2/0)
                                      ]);
                                  Constant
                                    (268,
                                      Int(0))
                                ]),
                            Constructor
                              (268,
                                cons/1,
                                Variable
                                  (268,
                                    x1/0),
                                Constructor
                                  (268,
                                    cons/1,
                                    Variable
                                      (268,
                                        x2/0),
                                    Constructor
                                      (268,
                                        []/1))),
                            Constructor
                              (268,
                                cons/1,
                                Variable
                                  (268,
                                    x2/0),
                                Constructor
                                  (268,
                                    cons/1,
                                    Variable
                                      (268,
                                        x1/0),
                                    Constructor
                                      (268,
                                        []/1)))));
                      (Tuple
                        (Int(3),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Constructor
                                    (cons/1,
                                      x3,
                                      Any)))),
                        IfThenElse
                          (270,
                            Apply
                              (270,
                                Variable
                                  (270,
                                    OCaml.Pervasives.le/0),
                                [
                                  Apply
                                    (270,
                                      Variable
                                        (270,
                                          cmp/0),
                                      [
                                        Variable
                                          (270,
                                            x1/0);
                                        Variable
                                          (270,
                                            x2/0)
                                      ]);
                                  Constant
                                    (270,
                                      Int(0))
                                ]),
                            IfThenElse
                              (270,
                                Apply
                                  (271,
                                    Variable
                                      (271,
                                        OCaml.Pervasives.le/0),
                                    [
                                      Apply
                                        (271,
                                          Variable
                                            (271,
                                              cmp/0),
                                          [
                                            Variable
                                              (271,
                                                x2/0);
                                            Variable
                                              (271,
                                                x3/0)
                                          ]);
                                      Constant
                                        (271,
                                          Int(0))
                                    ]),
                                Constructor
                                  (271,
                                    cons/1,
                                    Variable
                                      (271,
                                        x1/0),
                                    Constructor
                                      (271,
                                        cons/1,
                                        Variable
                                          (271,
                                            x2/0),
                                        Constructor
                                          (271,
                                            cons/1,
                                            Variable
                                              (271,
                                                x3/0),
                                            Constructor
                                              (271,
                                                []/1)))),
                                IfThenElse
                                  (272,
                                    Apply
                                      (272,
                                        Variable
                                          (272,
                                            OCaml.Pervasives.le/0),
                                        [
                                          Apply
                                            (272,
                                              Variable
                                                (272,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (272,
                                                    x1/0);
                                                Variable
                                                  (272,
                                                    x3/0)
                                              ]);
                                          Constant
                                            (272,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (272,
                                        cons/1,
                                        Variable
                                          (272,
                                            x1/0),
                                        Constructor
                                          (272,
                                            cons/1,
                                            Variable
                                              (272,
                                                x3/0),
                                            Constructor
                                              (272,
                                                cons/1,
                                                Variable
                                                  (272,
                                                    x2/0),
                                                Constructor
                                                  (272,
                                                    []/1)))),
                                    Constructor
                                      (273,
                                        cons/1,
                                        Variable
                                          (273,
                                            x3/0),
                                        Constructor
                                          (273,
                                            cons/1,
                                            Variable
                                              (273,
                                                x1/0),
                                            Constructor
                                              (273,
                                                cons/1,
                                                Variable
                                                  (273,
                                                    x2/0),
                                                Constructor
                                                  (273,
                                                    []/1)))))),
                            IfThenElse
                              (274,
                                Apply
                                  (275,
                                    Variable
                                      (275,
                                        OCaml.Pervasives.le/0),
                                    [
                                      Apply
                                        (275,
                                          Variable
                                            (275,
                                              cmp/0),
                                          [
                                            Variable
                                              (275,
                                                x1/0);
                                            Variable
                                              (275,
                                                x3/0)
                                          ]);
                                      Constant
                                        (275,
                                          Int(0))
                                    ]),
                                Constructor
                                  (275,
                                    cons/1,
                                    Variable
                                      (275,
                                        x2/0),
                                    Constructor
                                      (275,
                                        cons/1,
                                        Variable
                                          (275,
                                            x1/0),
                                        Constructor
                                          (275,
                                            cons/1,
                                            Variable
                                              (275,
                                                x3/0),
                                            Constructor
                                              (275,
                                                []/1)))),
                                IfThenElse
                                  (276,
                                    Apply
                                      (276,
                                        Variable
                                          (276,
                                            OCaml.Pervasives.le/0),
                                        [
                                          Apply
                                            (276,
                                              Variable
                                                (276,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (276,
                                                    x2/0);
                                                Variable
                                                  (276,
                                                    x3/0)
                                              ]);
                                          Constant
                                            (276,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (276,
                                        cons/1,
                                        Variable
                                          (276,
                                            x2/0),
                                        Constructor
                                          (276,
                                            cons/1,
                                            Variable
                                              (276,
                                                x3/0),
                                            Constructor
                                              (276,
                                                cons/1,
                                                Variable
                                                  (276,
                                                    x1/0),
                                                Constructor
                                                  (276,
                                                    []/1)))),
                                    Constructor
                                      (277,
                                        cons/1,
                                        Variable
                                          (277,
                                            x3/0),
                                        Constructor
                                          (277,
                                            cons/1,
                                            Variable
                                              (277,
                                                x2/0),
                                            Constructor
                                              (277,
                                                cons/1,
                                                Variable
                                                  (277,
                                                    x1/0),
                                                Constructor
                                                  (277,
                                                    []/1))))))));
                      (Tuple
                        (n,
                          l),
                        LetVar
                          280
                          n1
                          =
                          Apply
                            (280,
                              Variable
                                (280,
                                  Z.div/0),
                              [
                                Variable
                                  (280,
                                    n/0);
                                Constant
                                  (280,
                                    Int(2))
                              ])
                          in
                        LetVar
                          281
                          n2
                          =
                          Apply
                            (281,
                              Variable
                                (281,
                                  Z.sub/0),
                              [
                                Variable
                                  (281,
                                    n/0);
                                Variable
                                  (281,
                                    n1/0)
                              ])
                          in
                        LetVar
                          282
                          l2
                          =
                          Apply
                            (282,
                              Variable
                                (282,
                                  chop/0),
                              [
                                Variable
                                  (282,
                                    n1/0);
                                Variable
                                  (282,
                                    l/0)
                              ])
                          in
                        LetVar
                          283
                          s1
                          =
                          Apply
                            (283,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      stable_sort_rev_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (283,
                                    cmp/0);
                                Variable
                                  (283,
                                    n1/0);
                                Variable
                                  (283,
                                    l/0)
                              ])
                          in
                        LetVar
                          284
                          s2
                          =
                          Apply
                            (284,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      stable_sort_rev_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (284,
                                    cmp/0);
                                Variable
                                  (284,
                                    n2/0);
                                Variable
                                  (284,
                                    l2/0)
                              ])
                          in
                        Apply
                          (285,
                            Variable
                              (285,
                                stable_sort_rev_merge_rev/0),
                            [
                              Variable
                                (285,
                                  cmp/0);
                              Variable
                                (285,
                                  s1/0);
                              Variable
                                (285,
                                  s2/0);
                              Constructor
                                (285,
                                  []/1)
                            ]))
                    ]))
            ]));
      ((stable_sort_rev_sort_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (288,
                    Tuple
                      (288,
                        Variable
                          (288,
                            n/0),
                        Variable
                          (288,
                            l/0)),
                    [
                      (Tuple
                        (Int(2),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Any))),
                        IfThenElse
                          (290,
                            Apply
                              (290,
                                Variable
                                  (290,
                                    OCaml.Pervasives.gt/0),
                                [
                                  Apply
                                    (290,
                                      Variable
                                        (290,
                                          cmp/0),
                                      [
                                        Variable
                                          (290,
                                            x1/0);
                                        Variable
                                          (290,
                                            x2/0)
                                      ]);
                                  Constant
                                    (290,
                                      Int(0))
                                ]),
                            Constructor
                              (290,
                                cons/1,
                                Variable
                                  (290,
                                    x1/0),
                                Constructor
                                  (290,
                                    cons/1,
                                    Variable
                                      (290,
                                        x2/0),
                                    Constructor
                                      (290,
                                        []/1))),
                            Constructor
                              (290,
                                cons/1,
                                Variable
                                  (290,
                                    x2/0),
                                Constructor
                                  (290,
                                    cons/1,
                                    Variable
                                      (290,
                                        x1/0),
                                    Constructor
                                      (290,
                                        []/1)))));
                      (Tuple
                        (Int(3),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Constructor
                                    (cons/1,
                                      x3,
                                      Any)))),
                        IfThenElse
                          (292,
                            Apply
                              (292,
                                Variable
                                  (292,
                                    OCaml.Pervasives.gt/0),
                                [
                                  Apply
                                    (292,
                                      Variable
                                        (292,
                                          cmp/0),
                                      [
                                        Variable
                                          (292,
                                            x1/0);
                                        Variable
                                          (292,
                                            x2/0)
                                      ]);
                                  Constant
                                    (292,
                                      Int(0))
                                ]),
                            IfThenElse
                              (292,
                                Apply
                                  (293,
                                    Variable
                                      (293,
                                        OCaml.Pervasives.gt/0),
                                    [
                                      Apply
                                        (293,
                                          Variable
                                            (293,
                                              cmp/0),
                                          [
                                            Variable
                                              (293,
                                                x2/0);
                                            Variable
                                              (293,
                                                x3/0)
                                          ]);
                                      Constant
                                        (293,
                                          Int(0))
                                    ]),
                                Constructor
                                  (293,
                                    cons/1,
                                    Variable
                                      (293,
                                        x1/0),
                                    Constructor
                                      (293,
                                        cons/1,
                                        Variable
                                          (293,
                                            x2/0),
                                        Constructor
                                          (293,
                                            cons/1,
                                            Variable
                                              (293,
                                                x3/0),
                                            Constructor
                                              (293,
                                                []/1)))),
                                IfThenElse
                                  (294,
                                    Apply
                                      (294,
                                        Variable
                                          (294,
                                            OCaml.Pervasives.gt/0),
                                        [
                                          Apply
                                            (294,
                                              Variable
                                                (294,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (294,
                                                    x1/0);
                                                Variable
                                                  (294,
                                                    x3/0)
                                              ]);
                                          Constant
                                            (294,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (294,
                                        cons/1,
                                        Variable
                                          (294,
                                            x1/0),
                                        Constructor
                                          (294,
                                            cons/1,
                                            Variable
                                              (294,
                                                x3/0),
                                            Constructor
                                              (294,
                                                cons/1,
                                                Variable
                                                  (294,
                                                    x2/0),
                                                Constructor
                                                  (294,
                                                    []/1)))),
                                    Constructor
                                      (295,
                                        cons/1,
                                        Variable
                                          (295,
                                            x3/0),
                                        Constructor
                                          (295,
                                            cons/1,
                                            Variable
                                              (295,
                                                x1/0),
                                            Constructor
                                              (295,
                                                cons/1,
                                                Variable
                                                  (295,
                                                    x2/0),
                                                Constructor
                                                  (295,
                                                    []/1)))))),
                            IfThenElse
                              (296,
                                Apply
                                  (297,
                                    Variable
                                      (297,
                                        OCaml.Pervasives.gt/0),
                                    [
                                      Apply
                                        (297,
                                          Variable
                                            (297,
                                              cmp/0),
                                          [
                                            Variable
                                              (297,
                                                x1/0);
                                            Variable
                                              (297,
                                                x3/0)
                                          ]);
                                      Constant
                                        (297,
                                          Int(0))
                                    ]),
                                Constructor
                                  (297,
                                    cons/1,
                                    Variable
                                      (297,
                                        x2/0),
                                    Constructor
                                      (297,
                                        cons/1,
                                        Variable
                                          (297,
                                            x1/0),
                                        Constructor
                                          (297,
                                            cons/1,
                                            Variable
                                              (297,
                                                x3/0),
                                            Constructor
                                              (297,
                                                []/1)))),
                                IfThenElse
                                  (298,
                                    Apply
                                      (298,
                                        Variable
                                          (298,
                                            OCaml.Pervasives.gt/0),
                                        [
                                          Apply
                                            (298,
                                              Variable
                                                (298,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (298,
                                                    x2/0);
                                                Variable
                                                  (298,
                                                    x3/0)
                                              ]);
                                          Constant
                                            (298,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (298,
                                        cons/1,
                                        Variable
                                          (298,
                                            x2/0),
                                        Constructor
                                          (298,
                                            cons/1,
                                            Variable
                                              (298,
                                                x3/0),
                                            Constructor
                                              (298,
                                                cons/1,
                                                Variable
                                                  (298,
                                                    x1/0),
                                                Constructor
                                                  (298,
                                                    []/1)))),
                                    Constructor
                                      (299,
                                        cons/1,
                                        Variable
                                          (299,
                                            x3/0),
                                        Constructor
                                          (299,
                                            cons/1,
                                            Variable
                                              (299,
                                                x2/0),
                                            Constructor
                                              (299,
                                                cons/1,
                                                Variable
                                                  (299,
                                                    x1/0),
                                                Constructor
                                                  (299,
                                                    []/1))))))));
                      (Tuple
                        (n,
                          l),
                        LetVar
                          302
                          n1
                          =
                          Apply
                            (302,
                              Variable
                                (302,
                                  Z.div/0),
                              [
                                Variable
                                  (302,
                                    n/0);
                                Constant
                                  (302,
                                    Int(2))
                              ])
                          in
                        LetVar
                          303
                          n2
                          =
                          Apply
                            (303,
                              Variable
                                (303,
                                  Z.sub/0),
                              [
                                Variable
                                  (303,
                                    n/0);
                                Variable
                                  (303,
                                    n1/0)
                              ])
                          in
                        LetVar
                          304
                          l2
                          =
                          Apply
                            (304,
                              Variable
                                (304,
                                  chop/0),
                              [
                                Variable
                                  (304,
                                    n1/0);
                                Variable
                                  (304,
                                    l/0)
                              ])
                          in
                        LetVar
                          305
                          s1
                          =
                          Apply
                            (305,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      stable_sort_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (305,
                                    cmp/0);
                                Variable
                                  (305,
                                    n1/0);
                                Variable
                                  (305,
                                    l/0)
                              ])
                          in
                        LetVar
                          306
                          s2
                          =
                          Apply
                            (306,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      stable_sort_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (306,
                                    cmp/0);
                                Variable
                                  (306,
                                    n2/0);
                                Variable
                                  (306,
                                    l2/0)
                              ])
                          in
                        Apply
                          (307,
                            Variable
                              (307,
                                stable_sort_rev_merge/0),
                            [
                              Variable
                                (307,
                                  cmp/0);
                              Variable
                                (307,
                                  s1/0);
                              Variable
                                (307,
                                  s2/0);
                              Constructor
                                (307,
                                  []/1)
                            ]))
                    ]))
            ]))
    ]))

265
(Value
  (non_rec, @.,
    [
      ((stable_sort_sort, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, stable_sort_sort_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, n/0);
              Variable (?, l/0)
            ]))
    ]))

265
(Value
  (non_rec, @.,
    [
      ((stable_sort_rev_sort, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, stable_sort_rev_sort_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, n/0);
              Variable (?, l/0)
            ]))
    ]))

309
(Value
  (non_rec, @.,
    [
      ((stable_sort, [ A ],
        [ (cmp, (A -> (A -> Type (Z/1)))); (l, Type (list/1, A)) ],
        Some Type (list/1, A)),
        LetVar 310 len =
          Apply (310, Variable (310, length/0), [ Variable (310, l/0) ]) in
        IfThenElse
          (311,
            Apply
              (311, Variable (311, OCaml.Pervasives.lt/0),
                [ Variable (311, len/0); Constant (311, Int(2)) ]),
            Variable (311, l/0),
            Apply
              (311, Variable (311, stable_sort_sort/0),
                [
                  Variable (311, cmp/0);
                  Variable (311, len/0);
                  Variable (311, l/0)
                ])))
    ]))

313
(Value
  (non_rec, @.,
    [
      ((sort, [ A ], [ ],
        Some
          ((A -> (A -> Type (Z/1))) ->
            (Type (list/1, A) -> Type (list/1, A)))),
        Variable (313, stable_sort/0))
    ]))

314
(Value
  (non_rec, @.,
    [
      ((fast_sort, [ A ], [ ],
        Some
          ((A -> (A -> Type (Z/1))) ->
            (Type (list/1, A) -> Type (list/1, A)))),
        Variable (314, stable_sort/0))
    ]))

350
(Value
  (rec, @.,
    [
      ((sort_uniq_rev_merge_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (351,
                    Tuple
                      (351,
                        Variable
                          (351,
                            l1/0),
                        Variable
                          (351,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          l2),
                        Apply
                          (352,
                            Variable
                              (352,
                                rev_append/0),
                            [
                              Variable
                                (352,
                                  l2/0);
                              Variable
                                (352,
                                  accu/0)
                            ]));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/1)),
                        Apply
                          (353,
                            Variable
                              (353,
                                rev_append/0),
                            [
                              Variable
                                (353,
                                  l1/0);
                              Variable
                                (353,
                                  accu/0)
                            ]));
                      (Tuple
                        (Constructor
                          (cons/1,
                            h1,
                            t1),
                          Constructor
                            (cons/1,
                              h2,
                              t2)),
                        LetVar
                          355
                          c
                          =
                          Apply
                            (355,
                              Variable
                                (355,
                                  cmp/0),
                              [
                                Variable
                                  (355,
                                    h1/0);
                                Variable
                                  (355,
                                    h2/0)
                              ])
                          in
                        IfThenElse
                          (356,
                            Apply
                              (356,
                                Variable
                                  (356,
                                    equiv_decb/0),
                                [
                                  Variable
                                    (356,
                                      c/0);
                                  Constant
                                    (356,
                                      Int(0))
                                ]),
                            Apply
                              (356,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        sort_uniq_rev_merge_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (356,
                                      cmp/0);
                                  Variable
                                    (356,
                                      t1/0);
                                  Variable
                                    (356,
                                      t2/0);
                                  Constructor
                                    (356,
                                      cons/1,
                                      Variable
                                        (356,
                                          h1/0),
                                      Variable
                                        (356,
                                          accu/0))
                                ]),
                            IfThenElse
                              (357,
                                Apply
                                  (357,
                                    Variable
                                      (357,
                                        OCaml.Pervasives.lt/0),
                                    [
                                      Variable
                                        (357,
                                          c/0);
                                      Constant
                                        (357,
                                          Int(0))
                                    ]),
                                Apply
                                  (358,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            sort_uniq_rev_merge_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (358,
                                          cmp/0);
                                      Variable
                                        (358,
                                          t1/0);
                                      Variable
                                        (358,
                                          l2/0);
                                      Constructor
                                        (358,
                                          cons/1,
                                          Variable
                                            (358,
                                              h1/0),
                                          Variable
                                            (358,
                                              accu/0))
                                    ]),
                                Apply
                                  (359,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            sort_uniq_rev_merge_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (359,
                                          cmp/0);
                                      Variable
                                        (359,
                                          l1/0);
                                      Variable
                                        (359,
                                          t2/0);
                                      Constructor
                                        (359,
                                          cons/1,
                                          Variable
                                            (359,
                                              h2/0),
                                          Variable
                                            (359,
                                              accu/0))
                                    ]))))
                    ]))
            ]))
    ]))

350
(Value
  (non_rec, @.,
    [
      ((sort_uniq_rev_merge, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, sort_uniq_rev_merge_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, l1/0);
              Variable (?, l2/0);
              Variable (?, accu/0)
            ]))
    ]))

361
(Value
  (rec, @.,
    [
      ((sort_uniq_rev_merge_rev_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (362,
                    Tuple
                      (362,
                        Variable
                          (362,
                            l1/0),
                        Variable
                          (362,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/1),
                          l2),
                        Apply
                          (363,
                            Variable
                              (363,
                                rev_append/0),
                            [
                              Variable
                                (363,
                                  l2/0);
                              Variable
                                (363,
                                  accu/0)
                            ]));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/1)),
                        Apply
                          (364,
                            Variable
                              (364,
                                rev_append/0),
                            [
                              Variable
                                (364,
                                  l1/0);
                              Variable
                                (364,
                                  accu/0)
                            ]));
                      (Tuple
                        (Constructor
                          (cons/1,
                            h1,
                            t1),
                          Constructor
                            (cons/1,
                              h2,
                              t2)),
                        LetVar
                          366
                          c
                          =
                          Apply
                            (366,
                              Variable
                                (366,
                                  cmp/0),
                              [
                                Variable
                                  (366,
                                    h1/0);
                                Variable
                                  (366,
                                    h2/0)
                              ])
                          in
                        IfThenElse
                          (367,
                            Apply
                              (367,
                                Variable
                                  (367,
                                    equiv_decb/0),
                                [
                                  Variable
                                    (367,
                                      c/0);
                                  Constant
                                    (367,
                                      Int(0))
                                ]),
                            Apply
                              (367,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        sort_uniq_rev_merge_rev_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (367,
                                      cmp/0);
                                  Variable
                                    (367,
                                      t1/0);
                                  Variable
                                    (367,
                                      t2/0);
                                  Constructor
                                    (367,
                                      cons/1,
                                      Variable
                                        (367,
                                          h1/0),
                                      Variable
                                        (367,
                                          accu/0))
                                ]),
                            IfThenElse
                              (368,
                                Apply
                                  (368,
                                    Variable
                                      (368,
                                        OCaml.Pervasives.gt/0),
                                    [
                                      Variable
                                        (368,
                                          c/0);
                                      Constant
                                        (368,
                                          Int(0))
                                    ]),
                                Apply
                                  (369,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            sort_uniq_rev_merge_rev_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (369,
                                          cmp/0);
                                      Variable
                                        (369,
                                          t1/0);
                                      Variable
                                        (369,
                                          l2/0);
                                      Constructor
                                        (369,
                                          cons/1,
                                          Variable
                                            (369,
                                              h1/0),
                                          Variable
                                            (369,
                                              accu/0))
                                    ]),
                                Apply
                                  (370,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            sort_uniq_rev_merge_rev_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (370,
                                          cmp/0);
                                      Variable
                                        (370,
                                          l1/0);
                                      Variable
                                        (370,
                                          t2/0);
                                      Constructor
                                        (370,
                                          cons/1,
                                          Variable
                                            (370,
                                              h2/0),
                                          Variable
                                            (370,
                                              accu/0))
                                    ]))))
                    ]))
            ]))
    ]))

361
(Value
  (non_rec, @.,
    [
      ((sort_uniq_rev_merge_rev, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (l1, Type (list/1, A));
          (l2, Type (list/1, A));
          (accu, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, sort_uniq_rev_merge_rev_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, l1/0);
              Variable (?, l2/0);
              Variable (?, accu/0)
            ]))
    ]))

372
(Value
  (rec, @.,
    [
      ((sort_uniq_sort_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (373,
                    Tuple
                      (373,
                        Variable
                          (373,
                            n/0),
                        Variable
                          (373,
                            l/0)),
                    [
                      (Tuple
                        (Int(2),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Any))),
                        LetVar
                          375
                          c
                          =
                          Apply
                            (375,
                              Variable
                                (375,
                                  cmp/0),
                              [
                                Variable
                                  (375,
                                    x1/0);
                                Variable
                                  (375,
                                    x2/0)
                              ])
                          in
                        IfThenElse
                          (376,
                            Apply
                              (376,
                                Variable
                                  (376,
                                    equiv_decb/0),
                                [
                                  Variable
                                    (376,
                                      c/0);
                                  Constant
                                    (376,
                                      Int(0))
                                ]),
                            Constructor
                              (376,
                                cons/1,
                                Variable
                                  (376,
                                    x1/0),
                                Constructor
                                  (376,
                                    []/1)),
                            IfThenElse
                              (377,
                                Apply
                                  (377,
                                    Variable
                                      (377,
                                        OCaml.Pervasives.lt/0),
                                    [
                                      Variable
                                        (377,
                                          c/0);
                                      Constant
                                        (377,
                                          Int(0))
                                    ]),
                                Constructor
                                  (377,
                                    cons/1,
                                    Variable
                                      (377,
                                        x1/0),
                                    Constructor
                                      (377,
                                        cons/1,
                                        Variable
                                          (377,
                                            x2/0),
                                        Constructor
                                          (377,
                                            []/1))),
                                Constructor
                                  (377,
                                    cons/1,
                                    Variable
                                      (377,
                                        x2/0),
                                    Constructor
                                      (377,
                                        cons/1,
                                        Variable
                                          (377,
                                            x1/0),
                                        Constructor
                                          (377,
                                            []/1))))));
                      (Tuple
                        (Int(3),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Constructor
                                    (cons/1,
                                      x3,
                                      Any)))),
                        LetVar
                          379
                          c
                          =
                          Apply
                            (379,
                              Variable
                                (379,
                                  cmp/0),
                              [
                                Variable
                                  (379,
                                    x1/0);
                                Variable
                                  (379,
                                    x2/0)
                              ])
                          in
                        IfThenElse
                          (380,
                            Apply
                              (380,
                                Variable
                                  (380,
                                    equiv_decb/0),
                                [
                                  Variable
                                    (380,
                                      c/0);
                                  Constant
                                    (380,
                                      Int(0))
                                ]),
                            LetVar
                              380
                              c
                              =
                              Apply
                                (381,
                                  Variable
                                    (381,
                                      cmp/0),
                                  [
                                    Variable
                                      (381,
                                        x2/0);
                                    Variable
                                      (381,
                                        x3/0)
                                  ])
                              in
                            IfThenElse
                              (382,
                                Apply
                                  (382,
                                    Variable
                                      (382,
                                        equiv_decb/0),
                                    [
                                      Variable
                                        (382,
                                          c/0);
                                      Constant
                                        (382,
                                          Int(0))
                                    ]),
                                Constructor
                                  (382,
                                    cons/1,
                                    Variable
                                      (382,
                                        x2/0),
                                    Constructor
                                      (382,
                                        []/1)),
                                IfThenElse
                                  (383,
                                    Apply
                                      (383,
                                        Variable
                                          (383,
                                            OCaml.Pervasives.lt/0),
                                        [
                                          Variable
                                            (383,
                                              c/0);
                                          Constant
                                            (383,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (383,
                                        cons/1,
                                        Variable
                                          (383,
                                            x2/0),
                                        Constructor
                                          (383,
                                            cons/1,
                                            Variable
                                              (383,
                                                x3/0),
                                            Constructor
                                              (383,
                                                []/1))),
                                    Constructor
                                      (383,
                                        cons/1,
                                        Variable
                                          (383,
                                            x3/0),
                                        Constructor
                                          (383,
                                            cons/1,
                                            Variable
                                              (383,
                                                x2/0),
                                            Constructor
                                              (383,
                                                []/1))))),
                            IfThenElse
                              (384,
                                Apply
                                  (384,
                                    Variable
                                      (384,
                                        OCaml.Pervasives.lt/0),
                                    [
                                      Variable
                                        (384,
                                          c/0);
                                      Constant
                                        (384,
                                          Int(0))
                                    ]),
                                LetVar
                                  384
                                  c
                                  =
                                  Apply
                                    (385,
                                      Variable
                                        (385,
                                          cmp/0),
                                      [
                                        Variable
                                          (385,
                                            x2/0);
                                        Variable
                                          (385,
                                            x3/0)
                                      ])
                                  in
                                IfThenElse
                                  (386,
                                    Apply
                                      (386,
                                        Variable
                                          (386,
                                            equiv_decb/0),
                                        [
                                          Variable
                                            (386,
                                              c/0);
                                          Constant
                                            (386,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (386,
                                        cons/1,
                                        Variable
                                          (386,
                                            x1/0),
                                        Constructor
                                          (386,
                                            cons/1,
                                            Variable
                                              (386,
                                                x2/0),
                                            Constructor
                                              (386,
                                                []/1))),
                                    IfThenElse
                                      (387,
                                        Apply
                                          (387,
                                            Variable
                                              (387,
                                                OCaml.Pervasives.lt/0),
                                            [
                                              Variable
                                                (387,
                                                  c/0);
                                              Constant
                                                (387,
                                                  Int(0))
                                            ]),
                                        Constructor
                                          (387,
                                            cons/1,
                                            Variable
                                              (387,
                                                x1/0),
                                            Constructor
                                              (387,
                                                cons/1,
                                                Variable
                                                  (387,
                                                    x2/0),
                                                Constructor
                                                  (387,
                                                    cons/1,
                                                    Variable
                                                      (387,
                                                        x3/0),
                                                    Constructor
                                                      (387,
                                                        []/1)))),
                                        LetVar
                                          388
                                          c
                                          =
                                          Apply
                                            (388,
                                              Variable
                                                (388,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (388,
                                                    x1/0);
                                                Variable
                                                  (388,
                                                    x3/0)
                                              ])
                                          in
                                        IfThenElse
                                          (389,
                                            Apply
                                              (389,
                                                Variable
                                                  (389,
                                                    equiv_decb/0),
                                                [
                                                  Variable
                                                    (389,
                                                      c/0);
                                                  Constant
                                                    (389,
                                                      Int(0))
                                                ]),
                                            Constructor
                                              (389,
                                                cons/1,
                                                Variable
                                                  (389,
                                                    x1/0),
                                                Constructor
                                                  (389,
                                                    cons/1,
                                                    Variable
                                                      (389,
                                                        x2/0),
                                                    Constructor
                                                      (389,
                                                        []/1))),
                                            IfThenElse
                                              (390,
                                                Apply
                                                  (390,
                                                    Variable
                                                      (390,
                                                        OCaml.Pervasives.lt/0),
                                                    [
                                                      Variable
                                                        (390,
                                                          c/0);
                                                      Constant
                                                        (390,
                                                          Int(0))
                                                    ]),
                                                Constructor
                                                  (390,
                                                    cons/1,
                                                    Variable
                                                      (390,
                                                        x1/0),
                                                    Constructor
                                                      (390,
                                                        cons/1,
                                                        Variable
                                                          (390,
                                                            x3/0),
                                                        Constructor
                                                          (390,
                                                            cons/1,
                                                            Variable
                                                              (390,
                                                                x2/0),
                                                            Constructor
                                                              (390,
                                                                []/1)))),
                                                Constructor
                                                  (391,
                                                    cons/1,
                                                    Variable
                                                      (391,
                                                        x3/0),
                                                    Constructor
                                                      (391,
                                                        cons/1,
                                                        Variable
                                                          (391,
                                                            x1/0),
                                                        Constructor
                                                          (391,
                                                            cons/1,
                                                            Variable
                                                              (391,
                                                                x2/0),
                                                            Constructor
                                                              (391,
                                                                []/1)))))))),
                                LetVar
                                  392
                                  c
                                  =
                                  Apply
                                    (393,
                                      Variable
                                        (393,
                                          cmp/0),
                                      [
                                        Variable
                                          (393,
                                            x1/0);
                                        Variable
                                          (393,
                                            x3/0)
                                      ])
                                  in
                                IfThenElse
                                  (394,
                                    Apply
                                      (394,
                                        Variable
                                          (394,
                                            equiv_decb/0),
                                        [
                                          Variable
                                            (394,
                                              c/0);
                                          Constant
                                            (394,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (394,
                                        cons/1,
                                        Variable
                                          (394,
                                            x2/0),
                                        Constructor
                                          (394,
                                            cons/1,
                                            Variable
                                              (394,
                                                x1/0),
                                            Constructor
                                              (394,
                                                []/1))),
                                    IfThenElse
                                      (395,
                                        Apply
                                          (395,
                                            Variable
                                              (395,
                                                OCaml.Pervasives.lt/0),
                                            [
                                              Variable
                                                (395,
                                                  c/0);
                                              Constant
                                                (395,
                                                  Int(0))
                                            ]),
                                        Constructor
                                          (395,
                                            cons/1,
                                            Variable
                                              (395,
                                                x2/0),
                                            Constructor
                                              (395,
                                                cons/1,
                                                Variable
                                                  (395,
                                                    x1/0),
                                                Constructor
                                                  (395,
                                                    cons/1,
                                                    Variable
                                                      (395,
                                                        x3/0),
                                                    Constructor
                                                      (395,
                                                        []/1)))),
                                        LetVar
                                          396
                                          c
                                          =
                                          Apply
                                            (396,
                                              Variable
                                                (396,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (396,
                                                    x2/0);
                                                Variable
                                                  (396,
                                                    x3/0)
                                              ])
                                          in
                                        IfThenElse
                                          (397,
                                            Apply
                                              (397,
                                                Variable
                                                  (397,
                                                    equiv_decb/0),
                                                [
                                                  Variable
                                                    (397,
                                                      c/0);
                                                  Constant
                                                    (397,
                                                      Int(0))
                                                ]),
                                            Constructor
                                              (397,
                                                cons/1,
                                                Variable
                                                  (397,
                                                    x2/0),
                                                Constructor
                                                  (397,
                                                    cons/1,
                                                    Variable
                                                      (397,
                                                        x1/0),
                                                    Constructor
                                                      (397,
                                                        []/1))),
                                            IfThenElse
                                              (398,
                                                Apply
                                                  (398,
                                                    Variable
                                                      (398,
                                                        OCaml.Pervasives.lt/0),
                                                    [
                                                      Variable
                                                        (398,
                                                          c/0);
                                                      Constant
                                                        (398,
                                                          Int(0))
                                                    ]),
                                                Constructor
                                                  (398,
                                                    cons/1,
                                                    Variable
                                                      (398,
                                                        x2/0),
                                                    Constructor
                                                      (398,
                                                        cons/1,
                                                        Variable
                                                          (398,
                                                            x3/0),
                                                        Constructor
                                                          (398,
                                                            cons/1,
                                                            Variable
                                                              (398,
                                                                x1/0),
                                                            Constructor
                                                              (398,
                                                                []/1)))),
                                                Constructor
                                                  (399,
                                                    cons/1,
                                                    Variable
                                                      (399,
                                                        x3/0),
                                                    Constructor
                                                      (399,
                                                        cons/1,
                                                        Variable
                                                          (399,
                                                            x2/0),
                                                        Constructor
                                                          (399,
                                                            cons/1,
                                                            Variable
                                                              (399,
                                                                x1/0),
                                                            Constructor
                                                              (399,
                                                                []/1)))))))))));
                      (Tuple
                        (n,
                          l),
                        LetVar
                          402
                          n1
                          =
                          Apply
                            (402,
                              Variable
                                (402,
                                  Z.div/0),
                              [
                                Variable
                                  (402,
                                    n/0);
                                Constant
                                  (402,
                                    Int(2))
                              ])
                          in
                        LetVar
                          403
                          n2
                          =
                          Apply
                            (403,
                              Variable
                                (403,
                                  Z.sub/0),
                              [
                                Variable
                                  (403,
                                    n/0);
                                Variable
                                  (403,
                                    n1/0)
                              ])
                          in
                        LetVar
                          404
                          l2
                          =
                          Apply
                            (404,
                              Variable
                                (404,
                                  chop/0),
                              [
                                Variable
                                  (404,
                                    n1/0);
                                Variable
                                  (404,
                                    l/0)
                              ])
                          in
                        LetVar
                          405
                          s1
                          =
                          Apply
                            (405,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      sort_uniq_rev_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (405,
                                    cmp/0);
                                Variable
                                  (405,
                                    n1/0);
                                Variable
                                  (405,
                                    l/0)
                              ])
                          in
                        LetVar
                          406
                          s2
                          =
                          Apply
                            (406,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      sort_uniq_rev_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (406,
                                    cmp/0);
                                Variable
                                  (406,
                                    n2/0);
                                Variable
                                  (406,
                                    l2/0)
                              ])
                          in
                        Apply
                          (407,
                            Variable
                              (407,
                                sort_uniq_rev_merge_rev/0),
                            [
                              Variable
                                (407,
                                  cmp/0);
                              Variable
                                (407,
                                  s1/0);
                              Variable
                                (407,
                                  s2/0);
                              Constructor
                                (407,
                                  []/1)
                            ]))
                    ]))
            ]));
      ((sort_uniq_rev_sort_rec, [ A ],
        [
          (counter, Type (nat/1));
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/1),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/1),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/1, counter),
                Match
                  (410,
                    Tuple
                      (410,
                        Variable
                          (410,
                            n/0),
                        Variable
                          (410,
                            l/0)),
                    [
                      (Tuple
                        (Int(2),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Any))),
                        LetVar
                          412
                          c
                          =
                          Apply
                            (412,
                              Variable
                                (412,
                                  cmp/0),
                              [
                                Variable
                                  (412,
                                    x1/0);
                                Variable
                                  (412,
                                    x2/0)
                              ])
                          in
                        IfThenElse
                          (413,
                            Apply
                              (413,
                                Variable
                                  (413,
                                    equiv_decb/0),
                                [
                                  Variable
                                    (413,
                                      c/0);
                                  Constant
                                    (413,
                                      Int(0))
                                ]),
                            Constructor
                              (413,
                                cons/1,
                                Variable
                                  (413,
                                    x1/0),
                                Constructor
                                  (413,
                                    []/1)),
                            IfThenElse
                              (414,
                                Apply
                                  (414,
                                    Variable
                                      (414,
                                        OCaml.Pervasives.gt/0),
                                    [
                                      Variable
                                        (414,
                                          c/0);
                                      Constant
                                        (414,
                                          Int(0))
                                    ]),
                                Constructor
                                  (414,
                                    cons/1,
                                    Variable
                                      (414,
                                        x1/0),
                                    Constructor
                                      (414,
                                        cons/1,
                                        Variable
                                          (414,
                                            x2/0),
                                        Constructor
                                          (414,
                                            []/1))),
                                Constructor
                                  (414,
                                    cons/1,
                                    Variable
                                      (414,
                                        x2/0),
                                    Constructor
                                      (414,
                                        cons/1,
                                        Variable
                                          (414,
                                            x1/0),
                                        Constructor
                                          (414,
                                            []/1))))));
                      (Tuple
                        (Int(3),
                          Constructor
                            (cons/1,
                              x1,
                              Constructor
                                (cons/1,
                                  x2,
                                  Constructor
                                    (cons/1,
                                      x3,
                                      Any)))),
                        LetVar
                          416
                          c
                          =
                          Apply
                            (416,
                              Variable
                                (416,
                                  cmp/0),
                              [
                                Variable
                                  (416,
                                    x1/0);
                                Variable
                                  (416,
                                    x2/0)
                              ])
                          in
                        IfThenElse
                          (417,
                            Apply
                              (417,
                                Variable
                                  (417,
                                    equiv_decb/0),
                                [
                                  Variable
                                    (417,
                                      c/0);
                                  Constant
                                    (417,
                                      Int(0))
                                ]),
                            LetVar
                              417
                              c
                              =
                              Apply
                                (418,
                                  Variable
                                    (418,
                                      cmp/0),
                                  [
                                    Variable
                                      (418,
                                        x2/0);
                                    Variable
                                      (418,
                                        x3/0)
                                  ])
                              in
                            IfThenElse
                              (419,
                                Apply
                                  (419,
                                    Variable
                                      (419,
                                        equiv_decb/0),
                                    [
                                      Variable
                                        (419,
                                          c/0);
                                      Constant
                                        (419,
                                          Int(0))
                                    ]),
                                Constructor
                                  (419,
                                    cons/1,
                                    Variable
                                      (419,
                                        x2/0),
                                    Constructor
                                      (419,
                                        []/1)),
                                IfThenElse
                                  (420,
                                    Apply
                                      (420,
                                        Variable
                                          (420,
                                            OCaml.Pervasives.gt/0),
                                        [
                                          Variable
                                            (420,
                                              c/0);
                                          Constant
                                            (420,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (420,
                                        cons/1,
                                        Variable
                                          (420,
                                            x2/0),
                                        Constructor
                                          (420,
                                            cons/1,
                                            Variable
                                              (420,
                                                x3/0),
                                            Constructor
                                              (420,
                                                []/1))),
                                    Constructor
                                      (420,
                                        cons/1,
                                        Variable
                                          (420,
                                            x3/0),
                                        Constructor
                                          (420,
                                            cons/1,
                                            Variable
                                              (420,
                                                x2/0),
                                            Constructor
                                              (420,
                                                []/1))))),
                            IfThenElse
                              (421,
                                Apply
                                  (421,
                                    Variable
                                      (421,
                                        OCaml.Pervasives.gt/0),
                                    [
                                      Variable
                                        (421,
                                          c/0);
                                      Constant
                                        (421,
                                          Int(0))
                                    ]),
                                LetVar
                                  421
                                  c
                                  =
                                  Apply
                                    (422,
                                      Variable
                                        (422,
                                          cmp/0),
                                      [
                                        Variable
                                          (422,
                                            x2/0);
                                        Variable
                                          (422,
                                            x3/0)
                                      ])
                                  in
                                IfThenElse
                                  (423,
                                    Apply
                                      (423,
                                        Variable
                                          (423,
                                            equiv_decb/0),
                                        [
                                          Variable
                                            (423,
                                              c/0);
                                          Constant
                                            (423,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (423,
                                        cons/1,
                                        Variable
                                          (423,
                                            x1/0),
                                        Constructor
                                          (423,
                                            cons/1,
                                            Variable
                                              (423,
                                                x2/0),
                                            Constructor
                                              (423,
                                                []/1))),
                                    IfThenElse
                                      (424,
                                        Apply
                                          (424,
                                            Variable
                                              (424,
                                                OCaml.Pervasives.gt/0),
                                            [
                                              Variable
                                                (424,
                                                  c/0);
                                              Constant
                                                (424,
                                                  Int(0))
                                            ]),
                                        Constructor
                                          (424,
                                            cons/1,
                                            Variable
                                              (424,
                                                x1/0),
                                            Constructor
                                              (424,
                                                cons/1,
                                                Variable
                                                  (424,
                                                    x2/0),
                                                Constructor
                                                  (424,
                                                    cons/1,
                                                    Variable
                                                      (424,
                                                        x3/0),
                                                    Constructor
                                                      (424,
                                                        []/1)))),
                                        LetVar
                                          425
                                          c
                                          =
                                          Apply
                                            (425,
                                              Variable
                                                (425,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (425,
                                                    x1/0);
                                                Variable
                                                  (425,
                                                    x3/0)
                                              ])
                                          in
                                        IfThenElse
                                          (426,
                                            Apply
                                              (426,
                                                Variable
                                                  (426,
                                                    equiv_decb/0),
                                                [
                                                  Variable
                                                    (426,
                                                      c/0);
                                                  Constant
                                                    (426,
                                                      Int(0))
                                                ]),
                                            Constructor
                                              (426,
                                                cons/1,
                                                Variable
                                                  (426,
                                                    x1/0),
                                                Constructor
                                                  (426,
                                                    cons/1,
                                                    Variable
                                                      (426,
                                                        x2/0),
                                                    Constructor
                                                      (426,
                                                        []/1))),
                                            IfThenElse
                                              (427,
                                                Apply
                                                  (427,
                                                    Variable
                                                      (427,
                                                        OCaml.Pervasives.gt/0),
                                                    [
                                                      Variable
                                                        (427,
                                                          c/0);
                                                      Constant
                                                        (427,
                                                          Int(0))
                                                    ]),
                                                Constructor
                                                  (427,
                                                    cons/1,
                                                    Variable
                                                      (427,
                                                        x1/0),
                                                    Constructor
                                                      (427,
                                                        cons/1,
                                                        Variable
                                                          (427,
                                                            x3/0),
                                                        Constructor
                                                          (427,
                                                            cons/1,
                                                            Variable
                                                              (427,
                                                                x2/0),
                                                            Constructor
                                                              (427,
                                                                []/1)))),
                                                Constructor
                                                  (428,
                                                    cons/1,
                                                    Variable
                                                      (428,
                                                        x3/0),
                                                    Constructor
                                                      (428,
                                                        cons/1,
                                                        Variable
                                                          (428,
                                                            x1/0),
                                                        Constructor
                                                          (428,
                                                            cons/1,
                                                            Variable
                                                              (428,
                                                                x2/0),
                                                            Constructor
                                                              (428,
                                                                []/1)))))))),
                                LetVar
                                  429
                                  c
                                  =
                                  Apply
                                    (430,
                                      Variable
                                        (430,
                                          cmp/0),
                                      [
                                        Variable
                                          (430,
                                            x1/0);
                                        Variable
                                          (430,
                                            x3/0)
                                      ])
                                  in
                                IfThenElse
                                  (431,
                                    Apply
                                      (431,
                                        Variable
                                          (431,
                                            equiv_decb/0),
                                        [
                                          Variable
                                            (431,
                                              c/0);
                                          Constant
                                            (431,
                                              Int(0))
                                        ]),
                                    Constructor
                                      (431,
                                        cons/1,
                                        Variable
                                          (431,
                                            x2/0),
                                        Constructor
                                          (431,
                                            cons/1,
                                            Variable
                                              (431,
                                                x1/0),
                                            Constructor
                                              (431,
                                                []/1))),
                                    IfThenElse
                                      (432,
                                        Apply
                                          (432,
                                            Variable
                                              (432,
                                                OCaml.Pervasives.gt/0),
                                            [
                                              Variable
                                                (432,
                                                  c/0);
                                              Constant
                                                (432,
                                                  Int(0))
                                            ]),
                                        Constructor
                                          (432,
                                            cons/1,
                                            Variable
                                              (432,
                                                x2/0),
                                            Constructor
                                              (432,
                                                cons/1,
                                                Variable
                                                  (432,
                                                    x1/0),
                                                Constructor
                                                  (432,
                                                    cons/1,
                                                    Variable
                                                      (432,
                                                        x3/0),
                                                    Constructor
                                                      (432,
                                                        []/1)))),
                                        LetVar
                                          433
                                          c
                                          =
                                          Apply
                                            (433,
                                              Variable
                                                (433,
                                                  cmp/0),
                                              [
                                                Variable
                                                  (433,
                                                    x2/0);
                                                Variable
                                                  (433,
                                                    x3/0)
                                              ])
                                          in
                                        IfThenElse
                                          (434,
                                            Apply
                                              (434,
                                                Variable
                                                  (434,
                                                    equiv_decb/0),
                                                [
                                                  Variable
                                                    (434,
                                                      c/0);
                                                  Constant
                                                    (434,
                                                      Int(0))
                                                ]),
                                            Constructor
                                              (434,
                                                cons/1,
                                                Variable
                                                  (434,
                                                    x2/0),
                                                Constructor
                                                  (434,
                                                    cons/1,
                                                    Variable
                                                      (434,
                                                        x1/0),
                                                    Constructor
                                                      (434,
                                                        []/1))),
                                            IfThenElse
                                              (435,
                                                Apply
                                                  (435,
                                                    Variable
                                                      (435,
                                                        OCaml.Pervasives.gt/0),
                                                    [
                                                      Variable
                                                        (435,
                                                          c/0);
                                                      Constant
                                                        (435,
                                                          Int(0))
                                                    ]),
                                                Constructor
                                                  (435,
                                                    cons/1,
                                                    Variable
                                                      (435,
                                                        x2/0),
                                                    Constructor
                                                      (435,
                                                        cons/1,
                                                        Variable
                                                          (435,
                                                            x3/0),
                                                        Constructor
                                                          (435,
                                                            cons/1,
                                                            Variable
                                                              (435,
                                                                x1/0),
                                                            Constructor
                                                              (435,
                                                                []/1)))),
                                                Constructor
                                                  (436,
                                                    cons/1,
                                                    Variable
                                                      (436,
                                                        x3/0),
                                                    Constructor
                                                      (436,
                                                        cons/1,
                                                        Variable
                                                          (436,
                                                            x2/0),
                                                        Constructor
                                                          (436,
                                                            cons/1,
                                                            Variable
                                                              (436,
                                                                x1/0),
                                                            Constructor
                                                              (436,
                                                                []/1)))))))))));
                      (Tuple
                        (n,
                          l),
                        LetVar
                          439
                          n1
                          =
                          Apply
                            (439,
                              Variable
                                (439,
                                  Z.div/0),
                              [
                                Variable
                                  (439,
                                    n/0);
                                Constant
                                  (439,
                                    Int(2))
                              ])
                          in
                        LetVar
                          440
                          n2
                          =
                          Apply
                            (440,
                              Variable
                                (440,
                                  Z.sub/0),
                              [
                                Variable
                                  (440,
                                    n/0);
                                Variable
                                  (440,
                                    n1/0)
                              ])
                          in
                        LetVar
                          441
                          l2
                          =
                          Apply
                            (441,
                              Variable
                                (441,
                                  chop/0),
                              [
                                Variable
                                  (441,
                                    n1/0);
                                Variable
                                  (441,
                                    l/0)
                              ])
                          in
                        LetVar
                          442
                          s1
                          =
                          Apply
                            (442,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      sort_uniq_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (442,
                                    cmp/0);
                                Variable
                                  (442,
                                    n1/0);
                                Variable
                                  (442,
                                    l/0)
                              ])
                          in
                        LetVar
                          443
                          s2
                          =
                          Apply
                            (443,
                              Apply
                                (?,
                                  Variable
                                    (?,
                                      sort_uniq_sort_rec/0),
                                  [
                                    Variable
                                      (?,
                                        counter/0)
                                  ]),
                              [
                                Variable
                                  (443,
                                    cmp/0);
                                Variable
                                  (443,
                                    n2/0);
                                Variable
                                  (443,
                                    l2/0)
                              ])
                          in
                        Apply
                          (444,
                            Variable
                              (444,
                                sort_uniq_rev_merge/0),
                            [
                              Variable
                                (444,
                                  cmp/0);
                              Variable
                                (444,
                                  s1/0);
                              Variable
                                (444,
                                  s2/0);
                              Constructor
                                (444,
                                  []/1)
                            ]))
                    ]))
            ]))
    ]))

372
(Value
  (non_rec, @.,
    [
      ((sort_uniq_sort, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, sort_uniq_sort_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, n/0);
              Variable (?, l/0)
            ]))
    ]))

372
(Value
  (non_rec, @.,
    [
      ((sort_uniq_rev_sort, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/1))));
          (n, Type (Z/1));
          (l, Type (list/1, A))
        ], Some Type (list/1, A)),
        Apply
          (?, Variable (?, sort_uniq_rev_sort_rec/0),
            [
              Apply (?, Variable (?, read_counter/1), [ Tuple (?) ]);
              Variable (?, cmp/0);
              Variable (?, n/0);
              Variable (?, l/0)
            ]))
    ]))

446
(Value
  (non_rec, @.,
    [
      ((sort_uniq, [ A ],
        [ (cmp, (A -> (A -> Type (Z/1)))); (l, Type (list/1, A)) ],
        Some Type (list/1, A)),
        LetVar 447 len =
          Apply (447, Variable (447, length/0), [ Variable (447, l/0) ]) in
        IfThenElse
          (448,
            Apply
              (448, Variable (448, OCaml.Pervasives.lt/0),
                [ Variable (448, len/0); Constant (448, Int(2)) ]),
            Variable (448, l/0),
            Apply
              (448, Variable (448, sort_uniq_sort/0),
                [
                  Variable (448, cmp/0);
                  Variable (448, len/0);
                  Variable (448, l/0)
                ])))
    ]))
