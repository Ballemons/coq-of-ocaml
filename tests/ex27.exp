16
(Value
  (rec, @coq_rec,
    [
      ((length_aux, [ A ], [ (len, Type (Z/0)); (x, Type (list/0, A)) ],
        Some Type (Z/0)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Variable (17, len/0));
              (Constructor (cons/0, a, l),
                Apply
                  (18,
                    Variable
                      (18,
                        length_aux/0),
                    [
                      Apply
                        (18,
                          Variable
                            (18,
                              Z.add/0),
                          [
                            Variable
                              (18,
                                len/0);
                            Constant
                              (18,
                                Int(1))
                          ]);
                      Variable
                        (18,
                          l/0)
                    ]))
            ]))
    ]))

21
(Value
  (non_rec, @.,
    [
      ((length, [ A ], [ (l, Type (list/0, A)) ], Some Type (Z/0)),
        Apply
          (21, Variable (21, length_aux/0),
            [ Constant (21, Int(0)); Variable (21, l/0) ]))
    ]))

23
(Value
  (non_rec, @.,
    [
      ((hd, [ A ], [ (x, Type (list/0, A)) ], Some A),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0),
                Apply
                  (24,
                    Variable
                      (24,
                        OCaml.Pervasives.failwith/0),
                    [
                      Constant
                        (24,
                          String("hd"))
                    ]));
              (Constructor (cons/0, a, l), Variable (25, a/0))
            ]))
    ]))

27
(Value
  (non_rec, @.,
    [
      ((tl, [ A ], [ (x, Type (list/0, A)) ], Some Type (list/0, A)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0),
                Apply
                  (28,
                    Variable
                      (28,
                        OCaml.Pervasives.failwith/0),
                    [
                      Constant
                        (28,
                          String("tl"))
                    ]));
              (Constructor (cons/0, a, l), Variable (29, l/0))
            ]))
    ]))

31
(Value
  (non_rec, @.,
    [
      ((nth, [ A ], [ (l, Type (list/0, A)); (n, Type (Z/0)) ], Some A),
        IfThenElse
          (32,
            Apply
              (32, Variable (32, OCaml.Pervasives.lt/0),
                [ Variable (32, n/0); Constant (32, Int(0)) ]),
            Apply
              (32, Variable (32, OCaml.Pervasives.invalid_arg/0),
                [ Constant (32, String("List.nth")) ]),
            LetFun 33
              (rec, @coq_rec,
                [
                  ((nth_aux, [ B ],
                    [
                      (l,
                        Type
                          (list/0,
                            B));
                      (n,
                        Type
                          (Z/0))
                    ], Some B),
                    Match
                      (34,
                        Variable
                          (34,
                            l/0),
                        [
                          (Constructor
                            ([]/0),
                            Apply
                              (35,
                                Variable
                                  (35,
                                    OCaml.Pervasives.failwith/0),
                                [
                                  Constant
                                    (35,
                                      String("nth"))
                                ]));
                          (Constructor
                            (cons/0,
                              a,
                              l),
                            IfThenElse
                              (36,
                                Apply
                                  (36,
                                    Variable
                                      (36,
                                        equiv_decb/0),
                                    [
                                      Variable
                                        (36,
                                          n/0);
                                      Constant
                                        (36,
                                          Int(0))
                                    ]),
                                Variable
                                  (36,
                                    a/0),
                                Apply
                                  (36,
                                    Variable
                                      (36,
                                        nth_aux/0),
                                    [
                                      Variable
                                        (36,
                                          l/0);
                                      Apply
                                        (36,
                                          Variable
                                            (36,
                                              Z.sub/0),
                                          [
                                            Variable
                                              (36,
                                                n/0);
                                            Constant
                                              (36,
                                                Int(1))
                                          ])
                                    ])))
                        ]))
                ]) in
            Apply
              (38, Variable (38, nth_aux/0),
                [ Variable (38, l/0); Variable (38, n/0) ])))
    ]))

40
(Value
  (non_rec, @.,
    [
      ((append, [ A ], [ ],
        Some (Type (list/0, A) -> (Type (list/0, A) -> Type (list/0, A)))),
        Variable (40, OCaml.Pervasives.app/0))
    ]))

42
(Value
  (rec, @coq_rec,
    [
      ((rev_append, [ A ], [ (l1, Type (list/0, A)); (l2, Type (list/0, A)) ],
        Some Type (list/0, A)),
        Match
          (43, Variable (43, l1/0),
            [
              (Constructor ([]/0), Variable (44, l2/0));
              (Constructor (cons/0, a, l),
                Apply
                  (45,
                    Variable
                      (45,
                        rev_append/0),
                    [
                      Variable
                        (45,
                          l/0);
                      Constructor
                        (45,
                          cons/0,
                          Variable
                            (45,
                              a/0),
                          Variable
                            (45,
                              l2/0))
                    ]))
            ]))
    ]))

48
(Value
  (non_rec, @.,
    [
      ((rev, [ A ], [ (l, Type (list/0, A)) ], Some Type (list/0, A)),
        Apply
          (48, Variable (48, rev_append/0),
            [ Variable (48, l/0); Constructor (48, []/0) ]))
    ]))

50
(Value
  (rec, @coq_rec,
    [
      ((flatten, [ A ], [ (x, Type (list/0, Type (list/0, A))) ],
        Some Type (list/0, A)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (51, []/0));
              (Constructor (cons/0, l, r),
                Apply
                  (52,
                    Variable
                      (52,
                        OCaml.Pervasives.app/0),
                    [
                      Variable
                        (52,
                          l/0);
                      Apply
                        (52,
                          Variable
                            (52,
                              flatten/0),
                          [
                            Variable
                              (52,
                                r/0)
                          ])
                    ]))
            ]))
    ]))

55
(Value
  (non_rec, @.,
    [
      ((concat, [ A ], [ ],
        Some (Type (list/0, Type (list/0, A)) -> Type (list/0, A))),
        Variable (55, flatten/0))
    ]))

57
(Value
  (rec, @coq_rec,
    [
      ((map, [ A; B ], [ (f, (A -> B)); (x, Type (list/0, A)) ],
        Some Type (list/0, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (58, []/0));
              (Constructor (cons/0, a, l),
                LetVar 59 r =
                  Apply
                    (59,
                      Variable
                        (59,
                          f/0),
                      [
                        Variable
                          (59,
                            a/0)
                      ])
                  in
                Constructor
                  (59, cons/0,
                    Variable
                      (59,
                        r/0),
                    Apply
                      (59,
                        Variable
                          (59,
                            map/0),
                        [
                          Variable
                            (59,
                              f/0);
                          Variable
                            (59,
                              l/0)
                        ])))
            ]))
    ]))

62
(Value
  (rec, @coq_rec,
    [
      ((mapi_aux, [ A; B ],
        [
          (i, Type (Z/0));
          (f, (Type (Z/0) -> (A -> B)));
          (x, Type (list/0, A))
        ], Some Type (list/0, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (63, []/0));
              (Constructor (cons/0, a, l),
                LetVar 64 r =
                  Apply
                    (64,
                      Variable
                        (64,
                          f/0),
                      [
                        Variable
                          (64,
                            i/0);
                        Variable
                          (64,
                            a/0)
                      ])
                  in
                Constructor
                  (64, cons/0,
                    Variable
                      (64,
                        r/0),
                    Apply
                      (64,
                        Variable
                          (64,
                            mapi_aux/0),
                        [
                          Apply
                            (64,
                              Variable
                                (64,
                                  Z.add/0),
                              [
                                Variable
                                  (64,
                                    i/0);
                                Constant
                                  (64,
                                    Int(1))
                              ]);
                          Variable
                            (64,
                              f/0);
                          Variable
                            (64,
                              l/0)
                        ])))
            ]))
    ]))

67
(Value
  (non_rec, @.,
    [
      ((mapi, [ A; B ],
        [ (f, (Type (Z/0) -> (A -> B))); (l, Type (list/0, A)) ],
        Some Type (list/0, B)),
        Apply
          (67, Variable (67, mapi_aux/0),
            [
              Constant (67, Int(0));
              Variable (67, f/0);
              Variable (67, l/0)
            ]))
    ]))

69
(Value
  (non_rec, @.,
    [
      ((rev_map, [ A; B ], [ (f, (A -> B)); (l, Type (list/0, A)) ],
        Some Type (list/0, B)),
        LetFun 70
          (rec, @coq_rec,
            [
              ((rmap_f, [ ],
                [
                  (accu,
                    Type
                      (list/0,
                        B));
                  (x, Type (list/0, A))
                ], Some Type (list/0, B)),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/0),
                        Variable
                          (71,
                            accu/0));
                      (Constructor
                        (cons/0,
                          a,
                          l),
                        Apply
                          (72,
                            Variable
                              (72,
                                rmap_f/0),
                            [
                              Constructor
                                (72,
                                  cons/0,
                                  Apply
                                    (72,
                                      Variable
                                        (72,
                                          f/0),
                                      [
                                        Variable
                                          (72,
                                            a/0)
                                      ]),
                                  Variable
                                    (72,
                                      accu/0));
                              Variable
                                (72,
                                  l/0)
                            ]))
                    ]))
            ]) in
        Apply
          (74, Variable (74, rmap_f/0),
            [ Constructor (74, []/0); Variable (74, l/0) ]))
    ]))

76
(Value
  (rec, @coq_rec,
    [
      ((iter, [ A; B ], [ (f, (A -> B)); (x, Type (list/0, A)) ],
        Some Type (unit/0)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (77, tt/0));
              (Constructor (cons/0, a, l),
                Sequence
                  (78,
                    Apply
                      (78,
                        Variable
                          (78,
                            f/0),
                        [
                          Variable
                            (78,
                              a/0)
                        ]),
                    Apply
                      (78,
                        Variable
                          (78,
                            iter/0),
                        [
                          Variable
                            (78,
                              f/0);
                          Variable
                            (78,
                              l/0)
                        ])))
            ]))
    ]))

81
(Value
  (rec, @coq_rec,
    [
      ((iteri_aux, [ A; B ],
        [
          (i, Type (Z/0));
          (f, (Type (Z/0) -> (A -> B)));
          (x, Type (list/0, A))
        ], Some Type (unit/0)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (82, tt/0));
              (Constructor (cons/0, a, l),
                Sequence
                  (83,
                    Apply
                      (83,
                        Variable
                          (83,
                            f/0),
                        [
                          Variable
                            (83,
                              i/0);
                          Variable
                            (83,
                              a/0)
                        ]),
                    Apply
                      (83,
                        Variable
                          (83,
                            iteri_aux/0),
                        [
                          Apply
                            (83,
                              Variable
                                (83,
                                  Z.add/0),
                              [
                                Variable
                                  (83,
                                    i/0);
                                Constant
                                  (83,
                                    Int(1))
                              ]);
                          Variable
                            (83,
                              f/0);
                          Variable
                            (83,
                              l/0)
                        ])))
            ]))
    ]))

86
(Value
  (non_rec, @.,
    [
      ((iteri, [ A; B ],
        [ (f, (Type (Z/0) -> (A -> B))); (l, Type (list/0, A)) ],
        Some Type (unit/0)),
        Apply
          (86, Variable (86, iteri_aux/0),
            [
              Constant (86, Int(0));
              Variable (86, f/0);
              Variable (86, l/0)
            ]))
    ]))

88
(Value
  (rec, @coq_rec,
    [
      ((fold_left, [ A; B ],
        [ (f, (A -> (B -> A))); (accu, A); (l, Type (list/0, B)) ], Some A),
        Match
          (89, Variable (89, l/0),
            [
              (Constructor ([]/0), Variable (90, accu/0));
              (Constructor (cons/0, a, l),
                Apply
                  (91,
                    Variable
                      (91,
                        fold_left/0),
                    [
                      Variable
                        (91,
                          f/0);
                      Apply
                        (91,
                          Variable
                            (91,
                              f/0),
                          [
                            Variable
                              (91,
                                accu/0);
                            Variable
                              (91,
                                a/0)
                          ]);
                      Variable
                        (91,
                          l/0)
                    ]))
            ]))
    ]))

94
(Value
  (rec, @coq_rec,
    [
      ((fold_right, [ A; B ],
        [ (f, (A -> (B -> B))); (l, Type (list/0, A)); (accu, B) ], Some B),
        Match
          (95, Variable (95, l/0),
            [
              (Constructor ([]/0), Variable (96, accu/0));
              (Constructor (cons/0, a, l),
                Apply
                  (97,
                    Variable
                      (97,
                        f/0),
                    [
                      Variable
                        (97,
                          a/0);
                      Apply
                        (97,
                          Variable
                            (97,
                              fold_right/0),
                          [
                            Variable
                              (97,
                                f/0);
                            Variable
                              (97,
                                l/0);
                            Variable
                              (97,
                                accu/0)
                          ])
                    ]))
            ]))
    ]))

100
(Value
  (rec, @coq_rec,
    [
      ((map2, [ A; B; C ],
        [
          (f, (A -> (B -> C)));
          (l1, Type (list/0, A));
          (l2, Type (list/0, B))
        ], Some Type (list/0, C)),
        Match
          (101, Tuple (101, Variable (101, l1/0), Variable (101, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Constructor (102, []/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                LetVar 103 r =
                  Apply
                    (103,
                      Variable
                        (103,
                          f/0),
                      [
                        Variable
                          (103,
                            a1/0);
                        Variable
                          (103,
                            a2/0)
                      ])
                  in
                Constructor
                  (103, cons/0,
                    Variable
                      (103,
                        r/0),
                    Apply
                      (103,
                        Variable
                          (103,
                            map2/0),
                        [
                          Variable
                            (103,
                              f/0);
                          Variable
                            (103,
                              l1/0);
                          Variable
                            (103,
                              l2/0)
                        ])));
              (Tuple (Any, Any),
                Apply
                  (104,
                    Variable
                      (104,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (104,
                          String("List.map2"))
                    ]))
            ]))
    ]))

107
(Value
  (non_rec, @.,
    [
      ((rev_map2, [ A; B; C ],
        [
          (f, (A -> (B -> C)));
          (l1, Type (list/0, A));
          (l2, Type (list/0, B))
        ], Some Type (list/0, C)),
        LetFun 108
          (rec, @coq_rec,
            [
              ((rmap2_f, [ ],
                [
                  (accu,
                    Type
                      (list/0,
                        C));
                  (l1, Type (list/0, A));
                  (l2, Type (list/0, B))
                ], Some Type (list/0, C)),
                Match
                  (109,
                    Tuple
                      (109,
                        Variable
                          (109,
                            l1/0),
                        Variable
                          (109,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/0),
                          Constructor
                            ([]/0)),
                        Variable
                          (110,
                            accu/0));
                      (Tuple
                        (Constructor
                          (cons/0,
                            a1,
                            l1),
                          Constructor
                            (cons/0,
                              a2,
                              l2)),
                        Apply
                          (111,
                            Variable
                              (111,
                                rmap2_f/0),
                            [
                              Constructor
                                (111,
                                  cons/0,
                                  Apply
                                    (111,
                                      Variable
                                        (111,
                                          f/0),
                                      [
                                        Variable
                                          (111,
                                            a1/0);
                                        Variable
                                          (111,
                                            a2/0)
                                      ]),
                                  Variable
                                    (111,
                                      accu/0));
                              Variable
                                (111,
                                  l1/0);
                              Variable
                                (111,
                                  l2/0)
                            ]));
                      (Tuple
                        (Any,
                          Any),
                        Apply
                          (112,
                            Variable
                              (112,
                                OCaml.Pervasives.invalid_arg/0),
                            [
                              Constant
                                (112,
                                  String("List.rev_map2"))
                            ]))
                    ]))
            ]) in
        Apply
          (114, Variable (114, rmap2_f/0),
            [
              Constructor (114, []/0);
              Variable (114, l1/0);
              Variable (114, l2/0)
            ]))
    ]))

116
(Value
  (rec, @coq_rec,
    [
      ((iter2, [ A; B; C ],
        [
          (f, (A -> (B -> C)));
          (l1, Type (list/0, A));
          (l2, Type (list/0, B))
        ], Some Type (unit/0)),
        Match
          (117, Tuple (117, Variable (117, l1/0), Variable (117, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Constructor (118, tt/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                Sequence
                  (119,
                    Apply
                      (119,
                        Variable
                          (119,
                            f/0),
                        [
                          Variable
                            (119,
                              a1/0);
                          Variable
                            (119,
                              a2/0)
                        ]),
                    Apply
                      (119,
                        Variable
                          (119,
                            iter2/0),
                        [
                          Variable
                            (119,
                              f/0);
                          Variable
                            (119,
                              l1/0);
                          Variable
                            (119,
                              l2/0)
                        ])));
              (Tuple (Any, Any),
                Apply
                  (120,
                    Variable
                      (120,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (120,
                          String("List.iter2"))
                    ]))
            ]))
    ]))

123
(Value
  (rec, @coq_rec,
    [
      ((fold_left2, [ A; B; C ],
        [
          (f, (A -> (B -> (C -> A))));
          (accu, A);
          (l1, Type (list/0, B));
          (l2, Type (list/0, C))
        ], Some A),
        Match
          (124, Tuple (124, Variable (124, l1/0), Variable (124, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Variable (125, accu/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                Apply
                  (126,
                    Variable
                      (126,
                        fold_left2/0),
                    [
                      Variable
                        (126,
                          f/0);
                      Apply
                        (126,
                          Variable
                            (126,
                              f/0),
                          [
                            Variable
                              (126,
                                accu/0);
                            Variable
                              (126,
                                a1/0);
                            Variable
                              (126,
                                a2/0)
                          ]);
                      Variable
                        (126,
                          l1/0);
                      Variable
                        (126,
                          l2/0)
                    ]));
              (Tuple (Any, Any),
                Apply
                  (127,
                    Variable
                      (127,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (127,
                          String("List.fold_left2"))
                    ]))
            ]))
    ]))

130
(Value
  (rec, @coq_rec,
    [
      ((fold_right2, [ A; B; C ],
        [
          (f, (A -> (B -> (C -> C))));
          (l1, Type (list/0, A));
          (l2, Type (list/0, B));
          (accu, C)
        ], Some C),
        Match
          (131, Tuple (131, Variable (131, l1/0), Variable (131, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Variable (132, accu/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                Apply
                  (133,
                    Variable
                      (133,
                        f/0),
                    [
                      Variable
                        (133,
                          a1/0);
                      Variable
                        (133,
                          a2/0);
                      Apply
                        (133,
                          Variable
                            (133,
                              fold_right2/0),
                          [
                            Variable
                              (133,
                                f/0);
                            Variable
                              (133,
                                l1/0);
                            Variable
                              (133,
                                l2/0);
                            Variable
                              (133,
                                accu/0)
                          ])
                    ]));
              (Tuple (Any, Any),
                Apply
                  (134,
                    Variable
                      (134,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (134,
                          String("List.fold_right2"))
                    ]))
            ]))
    ]))

137
(Value
  (rec, @coq_rec,
    [
      ((for_all, [ A ], [ (p, (A -> Type (bool/0))); (x, Type (list/0, A)) ],
        Some Type (bool/0)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (138, true/0));
              (Constructor (cons/0, a, l),
                Apply
                  (139,
                    Variable
                      (139,
                        andb/0),
                    [
                      Apply
                        (139,
                          Variable
                            (139,
                              p/0),
                          [
                            Variable
                              (139,
                                a/0)
                          ]);
                      Apply
                        (139,
                          Variable
                            (139,
                              for_all/0),
                          [
                            Variable
                              (139,
                                p/0);
                            Variable
                              (139,
                                l/0)
                          ])
                    ]))
            ]))
    ]))

142
(Value
  (rec, @coq_rec,
    [
      ((_exists, [ A ], [ (p, (A -> Type (bool/0))); (x, Type (list/0, A)) ],
        Some Type (bool/0)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0), Constructor (143, false/0));
              (Constructor (cons/0, a, l),
                Apply
                  (144,
                    Variable
                      (144,
                        orb/0),
                    [
                      Apply
                        (144,
                          Variable
                            (144,
                              p/0),
                          [
                            Variable
                              (144,
                                a/0)
                          ]);
                      Apply
                        (144,
                          Variable
                            (144,
                              _exists/0),
                          [
                            Variable
                              (144,
                                p/0);
                            Variable
                              (144,
                                l/0)
                          ])
                    ]))
            ]))
    ]))

147
(Value
  (rec, @coq_rec,
    [
      ((for_all2, [ A; B ],
        [
          (p, (A -> (B -> Type (bool/0))));
          (l1, Type (list/0, A));
          (l2, Type (list/0, B))
        ], Some Type (bool/0)),
        Match
          (148, Tuple (148, Variable (148, l1/0), Variable (148, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Constructor (149, true/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                Apply
                  (150,
                    Variable
                      (150,
                        andb/0),
                    [
                      Apply
                        (150,
                          Variable
                            (150,
                              p/0),
                          [
                            Variable
                              (150,
                                a1/0);
                            Variable
                              (150,
                                a2/0)
                          ]);
                      Apply
                        (150,
                          Variable
                            (150,
                              for_all2/0),
                          [
                            Variable
                              (150,
                                p/0);
                            Variable
                              (150,
                                l1/0);
                            Variable
                              (150,
                                l2/0)
                          ])
                    ]));
              (Tuple (Any, Any),
                Apply
                  (151,
                    Variable
                      (151,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (151,
                          String("List.for_all2"))
                    ]))
            ]))
    ]))

154
(Value
  (rec, @coq_rec,
    [
      ((_exists2, [ A; B ],
        [
          (p, (A -> (B -> Type (bool/0))));
          (l1, Type (list/0, A));
          (l2, Type (list/0, B))
        ], Some Type (bool/0)),
        Match
          (155, Tuple (155, Variable (155, l1/0), Variable (155, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Constructor (156, false/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                Apply
                  (157,
                    Variable
                      (157,
                        orb/0),
                    [
                      Apply
                        (157,
                          Variable
                            (157,
                              p/0),
                          [
                            Variable
                              (157,
                                a1/0);
                            Variable
                              (157,
                                a2/0)
                          ]);
                      Apply
                        (157,
                          Variable
                            (157,
                              _exists2/0),
                          [
                            Variable
                              (157,
                                p/0);
                            Variable
                              (157,
                                l1/0);
                            Variable
                              (157,
                                l2/0)
                          ])
                    ]));
              (Tuple (Any, Any),
                Apply
                  (158,
                    Variable
                      (158,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (158,
                          String("List.exists2"))
                    ]))
            ]))
    ]))

194
(Value
  (rec, @coq_rec,
    [
      ((find, [ A ], [ (p, (A -> Type (bool/0))); (x, Type (list/0, A)) ],
        Some A),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0),
                Apply
                  (195,
                    Variable
                      (195,
                        OCaml.raise_Not_found/0),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (cons/0, x, l),
                IfThenElse
                  (196,
                    Apply
                      (196,
                        Variable
                          (196,
                            p/0),
                        [
                          Variable
                            (196,
                              x/0)
                        ]),
                    Variable
                      (196,
                        x/0),
                    Apply
                      (196,
                        Variable
                          (196,
                            find/0),
                        [
                          Variable
                            (196,
                              p/0);
                          Variable
                            (196,
                              l/0)
                        ])))
            ]))
    ]))

199
(Value
  (non_rec, @.,
    [
      ((find_all, [ A ], [ (p, (A -> Type (bool/0))) ],
        Some (Type (list/0, A) -> Type (list/0, A))),
        LetFun 200
          (rec, @coq_rec,
            [
              ((find, [ ],
                [
                  (accu,
                    Type
                      (list/0,
                        A));
                  (x, Type (list/0, A))
                ], Some Type (list/0, A)),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/0),
                        Apply
                          (201,
                            Variable
                              (201,
                                rev/0),
                            [
                              Variable
                                (201,
                                  accu/0)
                            ]));
                      (Constructor
                        (cons/0,
                          x,
                          l),
                        IfThenElse
                          (202,
                            Apply
                              (202,
                                Variable
                                  (202,
                                    p/0),
                                [
                                  Variable
                                    (202,
                                      x/0)
                                ]),
                            Apply
                              (202,
                                Variable
                                  (202,
                                    find/0),
                                [
                                  Constructor
                                    (202,
                                      cons/0,
                                      Variable
                                        (202,
                                          x/0),
                                      Variable
                                        (202,
                                          accu/0));
                                  Variable
                                    (202,
                                      l/0)
                                ]),
                            Apply
                              (202,
                                Variable
                                  (202,
                                    find/0),
                                [
                                  Variable
                                    (202,
                                      accu/0);
                                  Variable
                                    (202,
                                      l/0)
                                ])))
                    ]))
            ]) in
        Apply (204, Variable (204, find/0), [ Constructor (204, []/0) ]))
    ]))

206
(Value
  (non_rec, @.,
    [
      ((filter, [ A ], [ ],
        Some ((A -> Type (bool/0)) -> (Type (list/0, A) -> Type (list/0, A)))),
        Variable (206, find_all/0))
    ]))

208
(Value
  (non_rec, @.,
    [
      ((partition, [ A ], [ (p, (A -> Type (bool/0))); (l, Type (list/0, A)) ],
        Some (Type (list/0, A) * Type (list/0, A))),
        LetFun 209
          (rec, @coq_rec,
            [
              ((part, [ ],
                [
                  (yes, Type (list/0, A));
                  (no, Type (list/0, A));
                  (x, Type (list/0, A))
                ],
                Some
                  (Type (list/0, A) *
                    Type
                      (list/0,
                        A))),
                Match
                  (?, Variable (?, x/0),
                    [
                      (Constructor
                        ([]/0),
                        Tuple
                          (210,
                            Apply
                              (210,
                                Variable
                                  (210,
                                    rev/0),
                                [
                                  Variable
                                    (210,
                                      yes/0)
                                ]),
                            Apply
                              (210,
                                Variable
                                  (210,
                                    rev/0),
                                [
                                  Variable
                                    (210,
                                      no/0)
                                ])));
                      (Constructor
                        (cons/0,
                          x,
                          l),
                        IfThenElse
                          (211,
                            Apply
                              (211,
                                Variable
                                  (211,
                                    p/0),
                                [
                                  Variable
                                    (211,
                                      x/0)
                                ]),
                            Apply
                              (211,
                                Variable
                                  (211,
                                    part/0),
                                [
                                  Constructor
                                    (211,
                                      cons/0,
                                      Variable
                                        (211,
                                          x/0),
                                      Variable
                                        (211,
                                          yes/0));
                                  Variable
                                    (211,
                                      no/0);
                                  Variable
                                    (211,
                                      l/0)
                                ]),
                            Apply
                              (211,
                                Variable
                                  (211,
                                    part/0),
                                [
                                  Variable
                                    (211,
                                      yes/0);
                                  Constructor
                                    (211,
                                      cons/0,
                                      Variable
                                        (211,
                                          x/0),
                                      Variable
                                        (211,
                                          no/0));
                                  Variable
                                    (211,
                                      l/0)
                                ])))
                    ]))
            ]) in
        Apply
          (213, Variable (213, part/0),
            [
              Constructor (213, []/0);
              Constructor (213, []/0);
              Variable (213, l/0)
            ]))
    ]))

215
(Value
  (rec, @coq_rec,
    [
      ((split, [ A; B ], [ (x, Type (list/0, (A * B))) ],
        Some (Type (list/0, A) * Type (list/0, B))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor ([]/0),
                Tuple
                  (216,
                    Constructor
                      (216,
                        []/0),
                    Constructor
                      (216,
                        []/0)));
              (Constructor (cons/0, Tuple (x, y), l),
                Match
                  (218,
                    Apply
                      (218,
                        Variable
                          (218,
                            split/0),
                        [
                          Variable
                            (218,
                              l/0)
                        ]),
                    [
                      (Tuple
                        (rx,
                          ry),
                        Tuple
                          (218,
                            Constructor
                              (218,
                                cons/0,
                                Variable
                                  (218,
                                    x/0),
                                Variable
                                  (218,
                                    rx/0)),
                            Constructor
                              (218,
                                cons/0,
                                Variable
                                  (218,
                                    y/0),
                                Variable
                                  (218,
                                    ry/0))))
                    ]))
            ]))
    ]))

221
(Value
  (rec, @coq_rec,
    [
      ((combine, [ A; B ], [ (l1, Type (list/0, A)); (l2, Type (list/0, B)) ],
        Some Type (list/0, (A * B))),
        Match
          (222, Tuple (222, Variable (222, l1/0), Variable (222, l2/0)),
            [
              (Tuple (Constructor ([]/0), Constructor ([]/0)),
                Constructor (223, []/0));
              (Tuple
                (Constructor (cons/0, a1, l1),
                  Constructor
                    (cons/0,
                      a2,
                      l2)),
                Constructor
                  (224, cons/0,
                    Tuple
                      (224,
                        Variable
                          (224,
                            a1/0),
                        Variable
                          (224,
                            a2/0)),
                    Apply
                      (224,
                        Variable
                          (224,
                            combine/0),
                        [
                          Variable
                            (224,
                              l1/0);
                          Variable
                            (224,
                              l2/0)
                        ])));
              (Tuple (Any, Any),
                Apply
                  (225,
                    Variable
                      (225,
                        OCaml.Pervasives.invalid_arg/0),
                    [
                      Constant
                        (225,
                          String("List.combine"))
                    ]))
            ]))
    ]))

229
(Value
  (rec, @coq_rec,
    [
      ((merge, [ A ],
        [
          (cmp, (A -> (A -> Type (Z/0))));
          (l1, Type (list/0, A));
          (l2, Type (list/0, A))
        ], Some Type (list/0, A)),
        LetFun 230
          (rec, @coq_rec,
            [
              ((merge_aux, [ ], [ (l2, Type (list/0, A)) ],
                Some Type (list/0, A)),
                Match
                  (231,
                    Tuple
                      (231,
                        Variable
                          (231,
                            l1/0),
                        Variable
                          (231,
                            l2/0)),
                    [
                      (Tuple
                        (Constructor
                          ([]/0),
                          l2),
                        Variable
                          (232,
                            l2/0));
                      (Tuple
                        (l1,
                          Constructor
                            ([]/0)),
                        Variable
                          (233,
                            l1/0));
                      (Tuple
                        (Constructor
                          (cons/0,
                            h1,
                            t1),
                          Constructor
                            (cons/0,
                              h2,
                              t2)),
                        IfThenElse
                          (235,
                            Apply
                              (235,
                                Variable
                                  (235,
                                    OCaml.Pervasives.le/0),
                                [
                                  Apply
                                    (235,
                                      Variable
                                        (235,
                                          cmp/0),
                                      [
                                        Variable
                                          (235,
                                            h1/0);
                                        Variable
                                          (235,
                                            h2/0)
                                      ]);
                                  Constant
                                    (235,
                                      Int(0))
                                ]),
                            Constructor
                              (236,
                                cons/0,
                                Variable
                                  (236,
                                    h1/0),
                                Apply
                                  (236,
                                    Variable
                                      (236,
                                        merge/0),
                                    [
                                      Variable
                                        (236,
                                          cmp/0);
                                      Variable
                                        (236,
                                          t1/0);
                                      Variable
                                        (236,
                                          l2/0)
                                    ])),
                            Constructor
                              (237,
                                cons/0,
                                Variable
                                  (237,
                                    h2/0),
                                Apply
                                  (237,
                                    Variable
                                      (237,
                                        merge_aux/0),
                                    [
                                      Variable
                                        (237,
                                          t2/0)
                                    ]))))
                    ]))
            ]) in
        Apply (239, Variable (239, merge_aux/0), [ Variable (239, l2/0) ]))
    ]))

242
(Value
  (rec, @coq_rec,
    [
      ((chop, [ A ], [ (k, Type (Z/0)); (l, Type (list/0, A)) ],
        Some Type (list/0, A)),
        IfThenElse
          (243,
            Apply
              (243, Variable (243, equiv_decb/0),
                [ Variable (243, k/0); Constant (243, Int(0)) ]),
            Variable (243, l/0),
            Match
              (243, Variable (244, l/0),
                [
                  (Constructor (cons/0, x, t),
                    Apply
                      (245,
                        Variable
                          (245,
                            chop/0),
                        [
                          Apply
                            (245,
                              Variable
                                (245,
                                  Z.sub/0),
                              [
                                Variable
                                  (245,
                                    k/0);
                                Constant
                                  (245,
                                    Int(1))
                              ]);
                          Variable
                            (245,
                              t/0)
                        ]));
                  (Any,
                    Apply
                      (246,
                        Variable
                          (246,
                            OCaml.assert/0),
                        [
                          Constructor
                            (246,
                              false/0)
                        ]))
                ])))
    ]))

250 Module StableSort:
  251 (Value
    (rec, @coq_rec,
      [
        ((rev_merge, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (l1, Type (list/1, A));
            (l2, Type (list/1, A));
            (accu, Type (list/1, A))
          ], Some Type (list/1, A)),
          LetFun 252
            (rec, @coq_rec,
              [
                ((rev_merge_aux, [ ],
                  [
                    (l2,
                      Type
                        (list/1,
                          A));
                    (accu,
                      Type
                        (list/1,
                          A))
                  ],
                  Some Type (list/1, A)),
                  Match
                    (253,
                      Tuple
                        (253,
                          Variable
                            (253,
                              l1/0),
                          Variable
                            (253,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/1),
                            l2),
                          Apply
                            (254,
                              Variable
                                (254,
                                  rev_append/1),
                              [
                                Variable
                                  (254,
                                    l2/0);
                                Variable
                                  (254,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/1)),
                          Apply
                            (255,
                              Variable
                                (255,
                                  rev_append/1),
                              [
                                Variable
                                  (255,
                                    l1/0);
                                Variable
                                  (255,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/1,
                              h1,
                              t1),
                            Constructor
                              (cons/1,
                                h2,
                                t2)),
                          IfThenElse
                            (257,
                              Apply
                                (257,
                                  Variable
                                    (257,
                                      OCaml.Pervasives.le/1),
                                  [
                                    Apply
                                      (257,
                                        Variable
                                          (257,
                                            cmp/0),
                                        [
                                          Variable
                                            (257,
                                              h1/0);
                                          Variable
                                            (257,
                                              h2/0)
                                        ]);
                                    Constant
                                      (257,
                                        Int(0))
                                  ]),
                              Apply
                                (258,
                                  Variable
                                    (258,
                                      rev_merge/0),
                                  [
                                    Variable
                                      (258,
                                        cmp/0);
                                    Variable
                                      (258,
                                        t1/0);
                                    Variable
                                      (258,
                                        l2/0);
                                    Constructor
                                      (258,
                                        cons/1,
                                        Variable
                                          (258,
                                            h1/0),
                                        Variable
                                          (258,
                                            accu/0))
                                  ]),
                              Apply
                                (259,
                                  Variable
                                    (259,
                                      rev_merge_aux/0),
                                  [
                                    Variable
                                      (259,
                                        t2/0);
                                    Constructor
                                      (259,
                                        cons/1,
                                        Variable
                                          (259,
                                            h2/0),
                                        Variable
                                          (259,
                                            accu/0))
                                  ])))
                      ]))
              ]) in
          Apply
            (261, Variable (261, rev_merge_aux/0),
              [ Variable (261, l2/0); Variable (261, accu/0) ]))
      ]))
  
  264 (Value
    (rec, @coq_rec,
      [
        ((rev_merge_rev, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (l1, Type (list/1, A));
            (l2, Type (list/1, A));
            (accu, Type (list/1, A))
          ], Some Type (list/1, A)),
          LetFun 265
            (rec, @coq_rec,
              [
                ((rev_merge_rev_aux, [ ],
                  [
                    (l2,
                      Type
                        (list/1,
                          A));
                    (accu,
                      Type
                        (list/1,
                          A))
                  ],
                  Some Type (list/1, A)),
                  Match
                    (266,
                      Tuple
                        (266,
                          Variable
                            (266,
                              l1/0),
                          Variable
                            (266,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/1),
                            l2),
                          Apply
                            (267,
                              Variable
                                (267,
                                  rev_append/1),
                              [
                                Variable
                                  (267,
                                    l2/0);
                                Variable
                                  (267,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/1)),
                          Apply
                            (268,
                              Variable
                                (268,
                                  rev_append/1),
                              [
                                Variable
                                  (268,
                                    l1/0);
                                Variable
                                  (268,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/1,
                              h1,
                              t1),
                            Constructor
                              (cons/1,
                                h2,
                                t2)),
                          IfThenElse
                            (270,
                              Apply
                                (270,
                                  Variable
                                    (270,
                                      OCaml.Pervasives.gt/1),
                                  [
                                    Apply
                                      (270,
                                        Variable
                                          (270,
                                            cmp/0),
                                        [
                                          Variable
                                            (270,
                                              h1/0);
                                          Variable
                                            (270,
                                              h2/0)
                                        ]);
                                    Constant
                                      (270,
                                        Int(0))
                                  ]),
                              Apply
                                (271,
                                  Variable
                                    (271,
                                      rev_merge_rev/0),
                                  [
                                    Variable
                                      (271,
                                        cmp/0);
                                    Variable
                                      (271,
                                        t1/0);
                                    Variable
                                      (271,
                                        l2/0);
                                    Constructor
                                      (271,
                                        cons/1,
                                        Variable
                                          (271,
                                            h1/0),
                                        Variable
                                          (271,
                                            accu/0))
                                  ]),
                              Apply
                                (272,
                                  Variable
                                    (272,
                                      rev_merge_rev_aux/0),
                                  [
                                    Variable
                                      (272,
                                        t2/0);
                                    Constructor
                                      (272,
                                        cons/1,
                                        Variable
                                          (272,
                                            h2/0),
                                        Variable
                                          (272,
                                            accu/0))
                                  ])))
                      ]))
              ]) in
          Apply
            (274, Variable (274, rev_merge_rev_aux/0),
              [ Variable (274, l2/0); Variable (274, accu/0) ]))
      ]))
  
  277 (Value
    (rec, @.,
      [
        ((sort_rec, [ A ],
          [
            (counter, Type (nat/1));
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Match
            (?, Variable (?, counter/0),
              [
                (Constructor (O/1),
                  Apply
                    (?,
                      Variable
                        (?,
                          not_terminated/1),
                      [
                        Tuple
                          (?)
                      ]));
                (Constructor (S/1, counter),
                  Match
                    (278,
                      Tuple
                        (278,
                          Variable
                            (278,
                              n/0),
                          Variable
                            (278,
                              l/0)),
                      [
                        (Tuple
                          (Int(2),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Any))),
                          IfThenElse
                            (280,
                              Apply
                                (280,
                                  Variable
                                    (280,
                                      OCaml.Pervasives.le/1),
                                  [
                                    Apply
                                      (280,
                                        Variable
                                          (280,
                                            cmp/0),
                                        [
                                          Variable
                                            (280,
                                              x1/0);
                                          Variable
                                            (280,
                                              x2/0)
                                        ]);
                                    Constant
                                      (280,
                                        Int(0))
                                  ]),
                              Constructor
                                (280,
                                  cons/1,
                                  Variable
                                    (280,
                                      x1/0),
                                  Constructor
                                    (280,
                                      cons/1,
                                      Variable
                                        (280,
                                          x2/0),
                                      Constructor
                                        (280,
                                          []/1))),
                              Constructor
                                (280,
                                  cons/1,
                                  Variable
                                    (280,
                                      x2/0),
                                  Constructor
                                    (280,
                                      cons/1,
                                      Variable
                                        (280,
                                          x1/0),
                                      Constructor
                                        (280,
                                          []/1)))));
                        (Tuple
                          (Int(3),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Constructor
                                      (cons/1,
                                        x3,
                                        Any)))),
                          IfThenElse
                            (282,
                              Apply
                                (282,
                                  Variable
                                    (282,
                                      OCaml.Pervasives.le/1),
                                  [
                                    Apply
                                      (282,
                                        Variable
                                          (282,
                                            cmp/0),
                                        [
                                          Variable
                                            (282,
                                              x1/0);
                                          Variable
                                            (282,
                                              x2/0)
                                        ]);
                                    Constant
                                      (282,
                                        Int(0))
                                  ]),
                              IfThenElse
                                (282,
                                  Apply
                                    (283,
                                      Variable
                                        (283,
                                          OCaml.Pervasives.le/1),
                                      [
                                        Apply
                                          (283,
                                            Variable
                                              (283,
                                                cmp/0),
                                            [
                                              Variable
                                                (283,
                                                  x2/0);
                                              Variable
                                                (283,
                                                  x3/0)
                                            ]);
                                        Constant
                                          (283,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (283,
                                      cons/1,
                                      Variable
                                        (283,
                                          x1/0),
                                      Constructor
                                        (283,
                                          cons/1,
                                          Variable
                                            (283,
                                              x2/0),
                                          Constructor
                                            (283,
                                              cons/1,
                                              Variable
                                                (283,
                                                  x3/0),
                                              Constructor
                                                (283,
                                                  []/1)))),
                                  IfThenElse
                                    (284,
                                      Apply
                                        (284,
                                          Variable
                                            (284,
                                              OCaml.Pervasives.le/1),
                                          [
                                            Apply
                                              (284,
                                                Variable
                                                  (284,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (284,
                                                      x1/0);
                                                  Variable
                                                    (284,
                                                      x3/0)
                                                ]);
                                            Constant
                                              (284,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (284,
                                          cons/1,
                                          Variable
                                            (284,
                                              x1/0),
                                          Constructor
                                            (284,
                                              cons/1,
                                              Variable
                                                (284,
                                                  x3/0),
                                              Constructor
                                                (284,
                                                  cons/1,
                                                  Variable
                                                    (284,
                                                      x2/0),
                                                  Constructor
                                                    (284,
                                                      []/1)))),
                                      Constructor
                                        (285,
                                          cons/1,
                                          Variable
                                            (285,
                                              x3/0),
                                          Constructor
                                            (285,
                                              cons/1,
                                              Variable
                                                (285,
                                                  x1/0),
                                              Constructor
                                                (285,
                                                  cons/1,
                                                  Variable
                                                    (285,
                                                      x2/0),
                                                  Constructor
                                                    (285,
                                                      []/1)))))),
                              IfThenElse
                                (286,
                                  Apply
                                    (287,
                                      Variable
                                        (287,
                                          OCaml.Pervasives.le/1),
                                      [
                                        Apply
                                          (287,
                                            Variable
                                              (287,
                                                cmp/0),
                                            [
                                              Variable
                                                (287,
                                                  x1/0);
                                              Variable
                                                (287,
                                                  x3/0)
                                            ]);
                                        Constant
                                          (287,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (287,
                                      cons/1,
                                      Variable
                                        (287,
                                          x2/0),
                                      Constructor
                                        (287,
                                          cons/1,
                                          Variable
                                            (287,
                                              x1/0),
                                          Constructor
                                            (287,
                                              cons/1,
                                              Variable
                                                (287,
                                                  x3/0),
                                              Constructor
                                                (287,
                                                  []/1)))),
                                  IfThenElse
                                    (288,
                                      Apply
                                        (288,
                                          Variable
                                            (288,
                                              OCaml.Pervasives.le/1),
                                          [
                                            Apply
                                              (288,
                                                Variable
                                                  (288,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (288,
                                                      x2/0);
                                                  Variable
                                                    (288,
                                                      x3/0)
                                                ]);
                                            Constant
                                              (288,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (288,
                                          cons/1,
                                          Variable
                                            (288,
                                              x2/0),
                                          Constructor
                                            (288,
                                              cons/1,
                                              Variable
                                                (288,
                                                  x3/0),
                                              Constructor
                                                (288,
                                                  cons/1,
                                                  Variable
                                                    (288,
                                                      x1/0),
                                                  Constructor
                                                    (288,
                                                      []/1)))),
                                      Constructor
                                        (289,
                                          cons/1,
                                          Variable
                                            (289,
                                              x3/0),
                                          Constructor
                                            (289,
                                              cons/1,
                                              Variable
                                                (289,
                                                  x2/0),
                                              Constructor
                                                (289,
                                                  cons/1,
                                                  Variable
                                                    (289,
                                                      x1/0),
                                                  Constructor
                                                    (289,
                                                      []/1))))))));
                        (Tuple
                          (n,
                            l),
                          LetVar
                            292
                            n1
                            =
                            Apply
                              (292,
                                Variable
                                  (292,
                                    Z.div/1),
                                [
                                  Variable
                                    (292,
                                      n/0);
                                  Constant
                                    (292,
                                      Int(2))
                                ])
                            in
                          LetVar
                            293
                            n2
                            =
                            Apply
                              (293,
                                Variable
                                  (293,
                                    Z.sub/1),
                                [
                                  Variable
                                    (293,
                                      n/0);
                                  Variable
                                    (293,
                                      n1/0)
                                ])
                            in
                          LetVar
                            294
                            l2
                            =
                            Apply
                              (294,
                                Variable
                                  (294,
                                    chop/1),
                                [
                                  Variable
                                    (294,
                                      n1/0);
                                  Variable
                                    (294,
                                      l/0)
                                ])
                            in
                          LetVar
                            295
                            s1
                            =
                            Apply
                              (295,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        rev_sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (295,
                                      cmp/0);
                                  Variable
                                    (295,
                                      n1/0);
                                  Variable
                                    (295,
                                      l/0)
                                ])
                            in
                          LetVar
                            296
                            s2
                            =
                            Apply
                              (296,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        rev_sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (296,
                                      cmp/0);
                                  Variable
                                    (296,
                                      n2/0);
                                  Variable
                                    (296,
                                      l2/0)
                                ])
                            in
                          Apply
                            (297,
                              Variable
                                (297,
                                  rev_merge_rev/0),
                              [
                                Variable
                                  (297,
                                    cmp/0);
                                Variable
                                  (297,
                                    s1/0);
                                Variable
                                  (297,
                                    s2/0);
                                Constructor
                                  (297,
                                    []/1)
                              ]))
                      ]))
              ]));
        ((rev_sort_rec, [ A ],
          [
            (counter, Type (nat/1));
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Match
            (?, Variable (?, counter/0),
              [
                (Constructor (O/1),
                  Apply
                    (?,
                      Variable
                        (?,
                          not_terminated/1),
                      [
                        Tuple
                          (?)
                      ]));
                (Constructor (S/1, counter),
                  Match
                    (300,
                      Tuple
                        (300,
                          Variable
                            (300,
                              n/0),
                          Variable
                            (300,
                              l/0)),
                      [
                        (Tuple
                          (Int(2),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Any))),
                          IfThenElse
                            (302,
                              Apply
                                (302,
                                  Variable
                                    (302,
                                      OCaml.Pervasives.gt/1),
                                  [
                                    Apply
                                      (302,
                                        Variable
                                          (302,
                                            cmp/0),
                                        [
                                          Variable
                                            (302,
                                              x1/0);
                                          Variable
                                            (302,
                                              x2/0)
                                        ]);
                                    Constant
                                      (302,
                                        Int(0))
                                  ]),
                              Constructor
                                (302,
                                  cons/1,
                                  Variable
                                    (302,
                                      x1/0),
                                  Constructor
                                    (302,
                                      cons/1,
                                      Variable
                                        (302,
                                          x2/0),
                                      Constructor
                                        (302,
                                          []/1))),
                              Constructor
                                (302,
                                  cons/1,
                                  Variable
                                    (302,
                                      x2/0),
                                  Constructor
                                    (302,
                                      cons/1,
                                      Variable
                                        (302,
                                          x1/0),
                                      Constructor
                                        (302,
                                          []/1)))));
                        (Tuple
                          (Int(3),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Constructor
                                      (cons/1,
                                        x3,
                                        Any)))),
                          IfThenElse
                            (304,
                              Apply
                                (304,
                                  Variable
                                    (304,
                                      OCaml.Pervasives.gt/1),
                                  [
                                    Apply
                                      (304,
                                        Variable
                                          (304,
                                            cmp/0),
                                        [
                                          Variable
                                            (304,
                                              x1/0);
                                          Variable
                                            (304,
                                              x2/0)
                                        ]);
                                    Constant
                                      (304,
                                        Int(0))
                                  ]),
                              IfThenElse
                                (304,
                                  Apply
                                    (305,
                                      Variable
                                        (305,
                                          OCaml.Pervasives.gt/1),
                                      [
                                        Apply
                                          (305,
                                            Variable
                                              (305,
                                                cmp/0),
                                            [
                                              Variable
                                                (305,
                                                  x2/0);
                                              Variable
                                                (305,
                                                  x3/0)
                                            ]);
                                        Constant
                                          (305,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (305,
                                      cons/1,
                                      Variable
                                        (305,
                                          x1/0),
                                      Constructor
                                        (305,
                                          cons/1,
                                          Variable
                                            (305,
                                              x2/0),
                                          Constructor
                                            (305,
                                              cons/1,
                                              Variable
                                                (305,
                                                  x3/0),
                                              Constructor
                                                (305,
                                                  []/1)))),
                                  IfThenElse
                                    (306,
                                      Apply
                                        (306,
                                          Variable
                                            (306,
                                              OCaml.Pervasives.gt/1),
                                          [
                                            Apply
                                              (306,
                                                Variable
                                                  (306,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (306,
                                                      x1/0);
                                                  Variable
                                                    (306,
                                                      x3/0)
                                                ]);
                                            Constant
                                              (306,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (306,
                                          cons/1,
                                          Variable
                                            (306,
                                              x1/0),
                                          Constructor
                                            (306,
                                              cons/1,
                                              Variable
                                                (306,
                                                  x3/0),
                                              Constructor
                                                (306,
                                                  cons/1,
                                                  Variable
                                                    (306,
                                                      x2/0),
                                                  Constructor
                                                    (306,
                                                      []/1)))),
                                      Constructor
                                        (307,
                                          cons/1,
                                          Variable
                                            (307,
                                              x3/0),
                                          Constructor
                                            (307,
                                              cons/1,
                                              Variable
                                                (307,
                                                  x1/0),
                                              Constructor
                                                (307,
                                                  cons/1,
                                                  Variable
                                                    (307,
                                                      x2/0),
                                                  Constructor
                                                    (307,
                                                      []/1)))))),
                              IfThenElse
                                (308,
                                  Apply
                                    (309,
                                      Variable
                                        (309,
                                          OCaml.Pervasives.gt/1),
                                      [
                                        Apply
                                          (309,
                                            Variable
                                              (309,
                                                cmp/0),
                                            [
                                              Variable
                                                (309,
                                                  x1/0);
                                              Variable
                                                (309,
                                                  x3/0)
                                            ]);
                                        Constant
                                          (309,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (309,
                                      cons/1,
                                      Variable
                                        (309,
                                          x2/0),
                                      Constructor
                                        (309,
                                          cons/1,
                                          Variable
                                            (309,
                                              x1/0),
                                          Constructor
                                            (309,
                                              cons/1,
                                              Variable
                                                (309,
                                                  x3/0),
                                              Constructor
                                                (309,
                                                  []/1)))),
                                  IfThenElse
                                    (310,
                                      Apply
                                        (310,
                                          Variable
                                            (310,
                                              OCaml.Pervasives.gt/1),
                                          [
                                            Apply
                                              (310,
                                                Variable
                                                  (310,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (310,
                                                      x2/0);
                                                  Variable
                                                    (310,
                                                      x3/0)
                                                ]);
                                            Constant
                                              (310,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (310,
                                          cons/1,
                                          Variable
                                            (310,
                                              x2/0),
                                          Constructor
                                            (310,
                                              cons/1,
                                              Variable
                                                (310,
                                                  x3/0),
                                              Constructor
                                                (310,
                                                  cons/1,
                                                  Variable
                                                    (310,
                                                      x1/0),
                                                  Constructor
                                                    (310,
                                                      []/1)))),
                                      Constructor
                                        (311,
                                          cons/1,
                                          Variable
                                            (311,
                                              x3/0),
                                          Constructor
                                            (311,
                                              cons/1,
                                              Variable
                                                (311,
                                                  x2/0),
                                              Constructor
                                                (311,
                                                  cons/1,
                                                  Variable
                                                    (311,
                                                      x1/0),
                                                  Constructor
                                                    (311,
                                                      []/1))))))));
                        (Tuple
                          (n,
                            l),
                          LetVar
                            314
                            n1
                            =
                            Apply
                              (314,
                                Variable
                                  (314,
                                    Z.div/1),
                                [
                                  Variable
                                    (314,
                                      n/0);
                                  Constant
                                    (314,
                                      Int(2))
                                ])
                            in
                          LetVar
                            315
                            n2
                            =
                            Apply
                              (315,
                                Variable
                                  (315,
                                    Z.sub/1),
                                [
                                  Variable
                                    (315,
                                      n/0);
                                  Variable
                                    (315,
                                      n1/0)
                                ])
                            in
                          LetVar
                            316
                            l2
                            =
                            Apply
                              (316,
                                Variable
                                  (316,
                                    chop/1),
                                [
                                  Variable
                                    (316,
                                      n1/0);
                                  Variable
                                    (316,
                                      l/0)
                                ])
                            in
                          LetVar
                            317
                            s1
                            =
                            Apply
                              (317,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (317,
                                      cmp/0);
                                  Variable
                                    (317,
                                      n1/0);
                                  Variable
                                    (317,
                                      l/0)
                                ])
                            in
                          LetVar
                            318
                            s2
                            =
                            Apply
                              (318,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (318,
                                      cmp/0);
                                  Variable
                                    (318,
                                      n2/0);
                                  Variable
                                    (318,
                                      l2/0)
                                ])
                            in
                          Apply
                            (319,
                              Variable
                                (319,
                                  rev_merge/0),
                              [
                                Variable
                                  (319,
                                    cmp/0);
                                Variable
                                  (319,
                                    s1/0);
                                Variable
                                  (319,
                                    s2/0);
                                Constructor
                                  (319,
                                    []/1)
                              ]))
                      ]))
              ]))
      ]))
  
  277 (Value
    (non_rec, @.,
      [
        ((sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Apply
            (?, Variable (?, sort_rec/0),
              [
                Apply
                  (?,
                    Variable
                      (?,
                        read_counter/1),
                    [
                      Tuple
                        (?)
                    ]);
                Variable (?, cmp/0);
                Variable (?, n/0);
                Variable (?, l/0)
              ]))
      ]))
  
  277 (Value
    (non_rec, @.,
      [
        ((rev_sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Apply
            (?, Variable (?, rev_sort_rec/0),
              [
                Apply
                  (?,
                    Variable
                      (?,
                        read_counter/1),
                    [
                      Tuple
                        (?)
                    ]);
                Variable (?, cmp/0);
                Variable (?, n/0);
                Variable (?, l/0)
              ]))
      ]))

322
(Value
  (non_rec, @.,
    [
      ((stable_sort, [ A ],
        [ (cmp, (A -> (A -> Type (Z/0)))); (l, Type (list/0, A)) ],
        Some Type (list/0, A)),
        LetVar 323 len =
          Apply (323, Variable (323, length/0), [ Variable (323, l/0) ]) in
        IfThenElse
          (324,
            Apply
              (324, Variable (324, OCaml.Pervasives.lt/0),
                [ Variable (324, len/0); Constant (324, Int(2)) ]),
            Variable (324, l/0),
            Apply
              (324, Variable (324, StableSort.sort/0),
                [
                  Variable (324, cmp/0);
                  Variable (324, len/0);
                  Variable (324, l/0)
                ])))
    ]))

326
(Value
  (non_rec, @.,
    [
      ((sort, [ A ], [ ],
        Some
          ((A -> (A -> Type (Z/0))) ->
            (Type (list/0, A) -> Type (list/0, A)))),
        Variable (326, stable_sort/0))
    ]))

327
(Value
  (non_rec, @.,
    [
      ((fast_sort, [ A ], [ ],
        Some
          ((A -> (A -> Type (Z/0))) ->
            (Type (list/0, A) -> Type (list/0, A)))),
        Variable (327, stable_sort/0))
    ]))

329 Module SortUniq:
  331 (Value
    (rec, @coq_rec,
      [
        ((rev_merge, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (l1, Type (list/1, A));
            (l2, Type (list/1, A));
            (accu, Type (list/1, A))
          ], Some Type (list/1, A)),
          LetFun 332
            (rec, @coq_rec,
              [
                ((rev_merge_aux, [ ],
                  [
                    (l2,
                      Type
                        (list/1,
                          A));
                    (accu,
                      Type
                        (list/1,
                          A))
                  ],
                  Some Type (list/1, A)),
                  Match
                    (333,
                      Tuple
                        (333,
                          Variable
                            (333,
                              l1/0),
                          Variable
                            (333,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/1),
                            l2),
                          Apply
                            (334,
                              Variable
                                (334,
                                  rev_append/1),
                              [
                                Variable
                                  (334,
                                    l2/0);
                                Variable
                                  (334,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/1)),
                          Apply
                            (335,
                              Variable
                                (335,
                                  rev_append/1),
                              [
                                Variable
                                  (335,
                                    l1/0);
                                Variable
                                  (335,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/1,
                              h1,
                              t1),
                            Constructor
                              (cons/1,
                                h2,
                                t2)),
                          LetVar
                            337
                            c
                            =
                            Apply
                              (337,
                                Variable
                                  (337,
                                    cmp/0),
                                [
                                  Variable
                                    (337,
                                      h1/0);
                                  Variable
                                    (337,
                                      h2/0)
                                ])
                            in
                          IfThenElse
                            (338,
                              Apply
                                (338,
                                  Variable
                                    (338,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (338,
                                        c/0);
                                    Constant
                                      (338,
                                        Int(0))
                                  ]),
                              Apply
                                (338,
                                  Variable
                                    (338,
                                      rev_merge/0),
                                  [
                                    Variable
                                      (338,
                                        cmp/0);
                                    Variable
                                      (338,
                                        t1/0);
                                    Variable
                                      (338,
                                        t2/0);
                                    Constructor
                                      (338,
                                        cons/1,
                                        Variable
                                          (338,
                                            h1/0),
                                        Variable
                                          (338,
                                            accu/0))
                                  ]),
                              IfThenElse
                                (339,
                                  Apply
                                    (339,
                                      Variable
                                        (339,
                                          OCaml.Pervasives.lt/1),
                                      [
                                        Variable
                                          (339,
                                            c/0);
                                        Constant
                                          (339,
                                            Int(0))
                                      ]),
                                  Apply
                                    (340,
                                      Variable
                                        (340,
                                          rev_merge/0),
                                      [
                                        Variable
                                          (340,
                                            cmp/0);
                                        Variable
                                          (340,
                                            t1/0);
                                        Variable
                                          (340,
                                            l2/0);
                                        Constructor
                                          (340,
                                            cons/1,
                                            Variable
                                              (340,
                                                h1/0),
                                            Variable
                                              (340,
                                                accu/0))
                                      ]),
                                  Apply
                                    (341,
                                      Variable
                                        (341,
                                          rev_merge_aux/0),
                                      [
                                        Variable
                                          (341,
                                            t2/0);
                                        Constructor
                                          (341,
                                            cons/1,
                                            Variable
                                              (341,
                                                h2/0),
                                            Variable
                                              (341,
                                                accu/0))
                                      ]))))
                      ]))
              ]) in
          Apply
            (343, Variable (343, rev_merge_aux/0),
              [ Variable (343, l2/0); Variable (343, accu/0) ]))
      ]))
  
  346 (Value
    (rec, @coq_rec,
      [
        ((rev_merge_rev, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (l1, Type (list/1, A));
            (l2, Type (list/1, A));
            (accu, Type (list/1, A))
          ], Some Type (list/1, A)),
          LetFun 347
            (rec, @coq_rec,
              [
                ((rev_merge_rev_aux, [ ],
                  [
                    (l2,
                      Type
                        (list/1,
                          A));
                    (accu,
                      Type
                        (list/1,
                          A))
                  ],
                  Some Type (list/1, A)),
                  Match
                    (348,
                      Tuple
                        (348,
                          Variable
                            (348,
                              l1/0),
                          Variable
                            (348,
                              l2/0)),
                      [
                        (Tuple
                          (Constructor
                            ([]/1),
                            l2),
                          Apply
                            (349,
                              Variable
                                (349,
                                  rev_append/1),
                              [
                                Variable
                                  (349,
                                    l2/0);
                                Variable
                                  (349,
                                    accu/0)
                              ]));
                        (Tuple
                          (l1,
                            Constructor
                              ([]/1)),
                          Apply
                            (350,
                              Variable
                                (350,
                                  rev_append/1),
                              [
                                Variable
                                  (350,
                                    l1/0);
                                Variable
                                  (350,
                                    accu/0)
                              ]));
                        (Tuple
                          (Constructor
                            (cons/1,
                              h1,
                              t1),
                            Constructor
                              (cons/1,
                                h2,
                                t2)),
                          LetVar
                            352
                            c
                            =
                            Apply
                              (352,
                                Variable
                                  (352,
                                    cmp/0),
                                [
                                  Variable
                                    (352,
                                      h1/0);
                                  Variable
                                    (352,
                                      h2/0)
                                ])
                            in
                          IfThenElse
                            (353,
                              Apply
                                (353,
                                  Variable
                                    (353,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (353,
                                        c/0);
                                    Constant
                                      (353,
                                        Int(0))
                                  ]),
                              Apply
                                (353,
                                  Variable
                                    (353,
                                      rev_merge_rev/0),
                                  [
                                    Variable
                                      (353,
                                        cmp/0);
                                    Variable
                                      (353,
                                        t1/0);
                                    Variable
                                      (353,
                                        t2/0);
                                    Constructor
                                      (353,
                                        cons/1,
                                        Variable
                                          (353,
                                            h1/0),
                                        Variable
                                          (353,
                                            accu/0))
                                  ]),
                              IfThenElse
                                (354,
                                  Apply
                                    (354,
                                      Variable
                                        (354,
                                          OCaml.Pervasives.gt/1),
                                      [
                                        Variable
                                          (354,
                                            c/0);
                                        Constant
                                          (354,
                                            Int(0))
                                      ]),
                                  Apply
                                    (355,
                                      Variable
                                        (355,
                                          rev_merge_rev/0),
                                      [
                                        Variable
                                          (355,
                                            cmp/0);
                                        Variable
                                          (355,
                                            t1/0);
                                        Variable
                                          (355,
                                            l2/0);
                                        Constructor
                                          (355,
                                            cons/1,
                                            Variable
                                              (355,
                                                h1/0),
                                            Variable
                                              (355,
                                                accu/0))
                                      ]),
                                  Apply
                                    (356,
                                      Variable
                                        (356,
                                          rev_merge_rev_aux/0),
                                      [
                                        Variable
                                          (356,
                                            t2/0);
                                        Constructor
                                          (356,
                                            cons/1,
                                            Variable
                                              (356,
                                                h2/0),
                                            Variable
                                              (356,
                                                accu/0))
                                      ]))))
                      ]))
              ]) in
          Apply
            (358, Variable (358, rev_merge_rev_aux/0),
              [ Variable (358, l2/0); Variable (358, accu/0) ]))
      ]))
  
  361 (Value
    (rec, @.,
      [
        ((sort_rec, [ A ],
          [
            (counter, Type (nat/1));
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Match
            (?, Variable (?, counter/0),
              [
                (Constructor (O/1),
                  Apply
                    (?,
                      Variable
                        (?,
                          not_terminated/1),
                      [
                        Tuple
                          (?)
                      ]));
                (Constructor (S/1, counter),
                  Match
                    (362,
                      Tuple
                        (362,
                          Variable
                            (362,
                              n/0),
                          Variable
                            (362,
                              l/0)),
                      [
                        (Tuple
                          (Int(2),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Any))),
                          LetVar
                            364
                            c
                            =
                            Apply
                              (364,
                                Variable
                                  (364,
                                    cmp/0),
                                [
                                  Variable
                                    (364,
                                      x1/0);
                                  Variable
                                    (364,
                                      x2/0)
                                ])
                            in
                          IfThenElse
                            (365,
                              Apply
                                (365,
                                  Variable
                                    (365,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (365,
                                        c/0);
                                    Constant
                                      (365,
                                        Int(0))
                                  ]),
                              Constructor
                                (365,
                                  cons/1,
                                  Variable
                                    (365,
                                      x1/0),
                                  Constructor
                                    (365,
                                      []/1)),
                              IfThenElse
                                (366,
                                  Apply
                                    (366,
                                      Variable
                                        (366,
                                          OCaml.Pervasives.lt/1),
                                      [
                                        Variable
                                          (366,
                                            c/0);
                                        Constant
                                          (366,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (366,
                                      cons/1,
                                      Variable
                                        (366,
                                          x1/0),
                                      Constructor
                                        (366,
                                          cons/1,
                                          Variable
                                            (366,
                                              x2/0),
                                          Constructor
                                            (366,
                                              []/1))),
                                  Constructor
                                    (366,
                                      cons/1,
                                      Variable
                                        (366,
                                          x2/0),
                                      Constructor
                                        (366,
                                          cons/1,
                                          Variable
                                            (366,
                                              x1/0),
                                          Constructor
                                            (366,
                                              []/1))))));
                        (Tuple
                          (Int(3),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Constructor
                                      (cons/1,
                                        x3,
                                        Any)))),
                          LetVar
                            368
                            c
                            =
                            Apply
                              (368,
                                Variable
                                  (368,
                                    cmp/0),
                                [
                                  Variable
                                    (368,
                                      x1/0);
                                  Variable
                                    (368,
                                      x2/0)
                                ])
                            in
                          IfThenElse
                            (369,
                              Apply
                                (369,
                                  Variable
                                    (369,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (369,
                                        c/0);
                                    Constant
                                      (369,
                                        Int(0))
                                  ]),
                              LetVar
                                369
                                c
                                =
                                Apply
                                  (370,
                                    Variable
                                      (370,
                                        cmp/0),
                                    [
                                      Variable
                                        (370,
                                          x2/0);
                                      Variable
                                        (370,
                                          x3/0)
                                    ])
                                in
                              IfThenElse
                                (371,
                                  Apply
                                    (371,
                                      Variable
                                        (371,
                                          equiv_decb/1),
                                      [
                                        Variable
                                          (371,
                                            c/0);
                                        Constant
                                          (371,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (371,
                                      cons/1,
                                      Variable
                                        (371,
                                          x2/0),
                                      Constructor
                                        (371,
                                          []/1)),
                                  IfThenElse
                                    (372,
                                      Apply
                                        (372,
                                          Variable
                                            (372,
                                              OCaml.Pervasives.lt/1),
                                          [
                                            Variable
                                              (372,
                                                c/0);
                                            Constant
                                              (372,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (372,
                                          cons/1,
                                          Variable
                                            (372,
                                              x2/0),
                                          Constructor
                                            (372,
                                              cons/1,
                                              Variable
                                                (372,
                                                  x3/0),
                                              Constructor
                                                (372,
                                                  []/1))),
                                      Constructor
                                        (372,
                                          cons/1,
                                          Variable
                                            (372,
                                              x3/0),
                                          Constructor
                                            (372,
                                              cons/1,
                                              Variable
                                                (372,
                                                  x2/0),
                                              Constructor
                                                (372,
                                                  []/1))))),
                              IfThenElse
                                (373,
                                  Apply
                                    (373,
                                      Variable
                                        (373,
                                          OCaml.Pervasives.lt/1),
                                      [
                                        Variable
                                          (373,
                                            c/0);
                                        Constant
                                          (373,
                                            Int(0))
                                      ]),
                                  LetVar
                                    373
                                    c
                                    =
                                    Apply
                                      (374,
                                        Variable
                                          (374,
                                            cmp/0),
                                        [
                                          Variable
                                            (374,
                                              x2/0);
                                          Variable
                                            (374,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (375,
                                      Apply
                                        (375,
                                          Variable
                                            (375,
                                              equiv_decb/1),
                                          [
                                            Variable
                                              (375,
                                                c/0);
                                            Constant
                                              (375,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (375,
                                          cons/1,
                                          Variable
                                            (375,
                                              x1/0),
                                          Constructor
                                            (375,
                                              cons/1,
                                              Variable
                                                (375,
                                                  x2/0),
                                              Constructor
                                                (375,
                                                  []/1))),
                                      IfThenElse
                                        (376,
                                          Apply
                                            (376,
                                              Variable
                                                (376,
                                                  OCaml.Pervasives.lt/1),
                                              [
                                                Variable
                                                  (376,
                                                    c/0);
                                                Constant
                                                  (376,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (376,
                                              cons/1,
                                              Variable
                                                (376,
                                                  x1/0),
                                              Constructor
                                                (376,
                                                  cons/1,
                                                  Variable
                                                    (376,
                                                      x2/0),
                                                  Constructor
                                                    (376,
                                                      cons/1,
                                                      Variable
                                                        (376,
                                                          x3/0),
                                                      Constructor
                                                        (376,
                                                          []/1)))),
                                          LetVar
                                            377
                                            c
                                            =
                                            Apply
                                              (377,
                                                Variable
                                                  (377,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (377,
                                                      x1/0);
                                                  Variable
                                                    (377,
                                                      x3/0)
                                                ])
                                            in
                                          IfThenElse
                                            (378,
                                              Apply
                                                (378,
                                                  Variable
                                                    (378,
                                                      equiv_decb/1),
                                                  [
                                                    Variable
                                                      (378,
                                                        c/0);
                                                    Constant
                                                      (378,
                                                        Int(0))
                                                  ]),
                                              Constructor
                                                (378,
                                                  cons/1,
                                                  Variable
                                                    (378,
                                                      x1/0),
                                                  Constructor
                                                    (378,
                                                      cons/1,
                                                      Variable
                                                        (378,
                                                          x2/0),
                                                      Constructor
                                                        (378,
                                                          []/1))),
                                              IfThenElse
                                                (379,
                                                  Apply
                                                    (379,
                                                      Variable
                                                        (379,
                                                          OCaml.Pervasives.lt/1),
                                                      [
                                                        Variable
                                                          (379,
                                                            c/0);
                                                        Constant
                                                          (379,
                                                            Int(0))
                                                      ]),
                                                  Constructor
                                                    (379,
                                                      cons/1,
                                                      Variable
                                                        (379,
                                                          x1/0),
                                                      Constructor
                                                        (379,
                                                          cons/1,
                                                          Variable
                                                            (379,
                                                              x3/0),
                                                          Constructor
                                                            (379,
                                                              cons/1,
                                                              Variable
                                                                (379,
                                                                  x2/0),
                                                              Constructor
                                                                (379,
                                                                  []/1)))),
                                                  Constructor
                                                    (380,
                                                      cons/1,
                                                      Variable
                                                        (380,
                                                          x3/0),
                                                      Constructor
                                                        (380,
                                                          cons/1,
                                                          Variable
                                                            (380,
                                                              x1/0),
                                                          Constructor
                                                            (380,
                                                              cons/1,
                                                              Variable
                                                                (380,
                                                                  x2/0),
                                                              Constructor
                                                                (380,
                                                                  []/1)))))))),
                                  LetVar
                                    381
                                    c
                                    =
                                    Apply
                                      (382,
                                        Variable
                                          (382,
                                            cmp/0),
                                        [
                                          Variable
                                            (382,
                                              x1/0);
                                          Variable
                                            (382,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (383,
                                      Apply
                                        (383,
                                          Variable
                                            (383,
                                              equiv_decb/1),
                                          [
                                            Variable
                                              (383,
                                                c/0);
                                            Constant
                                              (383,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (383,
                                          cons/1,
                                          Variable
                                            (383,
                                              x2/0),
                                          Constructor
                                            (383,
                                              cons/1,
                                              Variable
                                                (383,
                                                  x1/0),
                                              Constructor
                                                (383,
                                                  []/1))),
                                      IfThenElse
                                        (384,
                                          Apply
                                            (384,
                                              Variable
                                                (384,
                                                  OCaml.Pervasives.lt/1),
                                              [
                                                Variable
                                                  (384,
                                                    c/0);
                                                Constant
                                                  (384,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (384,
                                              cons/1,
                                              Variable
                                                (384,
                                                  x2/0),
                                              Constructor
                                                (384,
                                                  cons/1,
                                                  Variable
                                                    (384,
                                                      x1/0),
                                                  Constructor
                                                    (384,
                                                      cons/1,
                                                      Variable
                                                        (384,
                                                          x3/0),
                                                      Constructor
                                                        (384,
                                                          []/1)))),
                                          LetVar
                                            385
                                            c
                                            =
                                            Apply
                                              (385,
                                                Variable
                                                  (385,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (385,
                                                      x2/0);
                                                  Variable
                                                    (385,
                                                      x3/0)
                                                ])
                                            in
                                          IfThenElse
                                            (386,
                                              Apply
                                                (386,
                                                  Variable
                                                    (386,
                                                      equiv_decb/1),
                                                  [
                                                    Variable
                                                      (386,
                                                        c/0);
                                                    Constant
                                                      (386,
                                                        Int(0))
                                                  ]),
                                              Constructor
                                                (386,
                                                  cons/1,
                                                  Variable
                                                    (386,
                                                      x2/0),
                                                  Constructor
                                                    (386,
                                                      cons/1,
                                                      Variable
                                                        (386,
                                                          x1/0),
                                                      Constructor
                                                        (386,
                                                          []/1))),
                                              IfThenElse
                                                (387,
                                                  Apply
                                                    (387,
                                                      Variable
                                                        (387,
                                                          OCaml.Pervasives.lt/1),
                                                      [
                                                        Variable
                                                          (387,
                                                            c/0);
                                                        Constant
                                                          (387,
                                                            Int(0))
                                                      ]),
                                                  Constructor
                                                    (387,
                                                      cons/1,
                                                      Variable
                                                        (387,
                                                          x2/0),
                                                      Constructor
                                                        (387,
                                                          cons/1,
                                                          Variable
                                                            (387,
                                                              x3/0),
                                                          Constructor
                                                            (387,
                                                              cons/1,
                                                              Variable
                                                                (387,
                                                                  x1/0),
                                                              Constructor
                                                                (387,
                                                                  []/1)))),
                                                  Constructor
                                                    (388,
                                                      cons/1,
                                                      Variable
                                                        (388,
                                                          x3/0),
                                                      Constructor
                                                        (388,
                                                          cons/1,
                                                          Variable
                                                            (388,
                                                              x2/0),
                                                          Constructor
                                                            (388,
                                                              cons/1,
                                                              Variable
                                                                (388,
                                                                  x1/0),
                                                              Constructor
                                                                (388,
                                                                  []/1)))))))))));
                        (Tuple
                          (n,
                            l),
                          LetVar
                            391
                            n1
                            =
                            Apply
                              (391,
                                Variable
                                  (391,
                                    Z.div/1),
                                [
                                  Variable
                                    (391,
                                      n/0);
                                  Constant
                                    (391,
                                      Int(2))
                                ])
                            in
                          LetVar
                            392
                            n2
                            =
                            Apply
                              (392,
                                Variable
                                  (392,
                                    Z.sub/1),
                                [
                                  Variable
                                    (392,
                                      n/0);
                                  Variable
                                    (392,
                                      n1/0)
                                ])
                            in
                          LetVar
                            393
                            l2
                            =
                            Apply
                              (393,
                                Variable
                                  (393,
                                    chop/1),
                                [
                                  Variable
                                    (393,
                                      n1/0);
                                  Variable
                                    (393,
                                      l/0)
                                ])
                            in
                          LetVar
                            394
                            s1
                            =
                            Apply
                              (394,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        rev_sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (394,
                                      cmp/0);
                                  Variable
                                    (394,
                                      n1/0);
                                  Variable
                                    (394,
                                      l/0)
                                ])
                            in
                          LetVar
                            395
                            s2
                            =
                            Apply
                              (395,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        rev_sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (395,
                                      cmp/0);
                                  Variable
                                    (395,
                                      n2/0);
                                  Variable
                                    (395,
                                      l2/0)
                                ])
                            in
                          Apply
                            (396,
                              Variable
                                (396,
                                  rev_merge_rev/0),
                              [
                                Variable
                                  (396,
                                    cmp/0);
                                Variable
                                  (396,
                                    s1/0);
                                Variable
                                  (396,
                                    s2/0);
                                Constructor
                                  (396,
                                    []/1)
                              ]))
                      ]))
              ]));
        ((rev_sort_rec, [ A ],
          [
            (counter, Type (nat/1));
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Match
            (?, Variable (?, counter/0),
              [
                (Constructor (O/1),
                  Apply
                    (?,
                      Variable
                        (?,
                          not_terminated/1),
                      [
                        Tuple
                          (?)
                      ]));
                (Constructor (S/1, counter),
                  Match
                    (399,
                      Tuple
                        (399,
                          Variable
                            (399,
                              n/0),
                          Variable
                            (399,
                              l/0)),
                      [
                        (Tuple
                          (Int(2),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Any))),
                          LetVar
                            401
                            c
                            =
                            Apply
                              (401,
                                Variable
                                  (401,
                                    cmp/0),
                                [
                                  Variable
                                    (401,
                                      x1/0);
                                  Variable
                                    (401,
                                      x2/0)
                                ])
                            in
                          IfThenElse
                            (402,
                              Apply
                                (402,
                                  Variable
                                    (402,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (402,
                                        c/0);
                                    Constant
                                      (402,
                                        Int(0))
                                  ]),
                              Constructor
                                (402,
                                  cons/1,
                                  Variable
                                    (402,
                                      x1/0),
                                  Constructor
                                    (402,
                                      []/1)),
                              IfThenElse
                                (403,
                                  Apply
                                    (403,
                                      Variable
                                        (403,
                                          OCaml.Pervasives.gt/1),
                                      [
                                        Variable
                                          (403,
                                            c/0);
                                        Constant
                                          (403,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (403,
                                      cons/1,
                                      Variable
                                        (403,
                                          x1/0),
                                      Constructor
                                        (403,
                                          cons/1,
                                          Variable
                                            (403,
                                              x2/0),
                                          Constructor
                                            (403,
                                              []/1))),
                                  Constructor
                                    (403,
                                      cons/1,
                                      Variable
                                        (403,
                                          x2/0),
                                      Constructor
                                        (403,
                                          cons/1,
                                          Variable
                                            (403,
                                              x1/0),
                                          Constructor
                                            (403,
                                              []/1))))));
                        (Tuple
                          (Int(3),
                            Constructor
                              (cons/1,
                                x1,
                                Constructor
                                  (cons/1,
                                    x2,
                                    Constructor
                                      (cons/1,
                                        x3,
                                        Any)))),
                          LetVar
                            405
                            c
                            =
                            Apply
                              (405,
                                Variable
                                  (405,
                                    cmp/0),
                                [
                                  Variable
                                    (405,
                                      x1/0);
                                  Variable
                                    (405,
                                      x2/0)
                                ])
                            in
                          IfThenElse
                            (406,
                              Apply
                                (406,
                                  Variable
                                    (406,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (406,
                                        c/0);
                                    Constant
                                      (406,
                                        Int(0))
                                  ]),
                              LetVar
                                406
                                c
                                =
                                Apply
                                  (407,
                                    Variable
                                      (407,
                                        cmp/0),
                                    [
                                      Variable
                                        (407,
                                          x2/0);
                                      Variable
                                        (407,
                                          x3/0)
                                    ])
                                in
                              IfThenElse
                                (408,
                                  Apply
                                    (408,
                                      Variable
                                        (408,
                                          equiv_decb/1),
                                      [
                                        Variable
                                          (408,
                                            c/0);
                                        Constant
                                          (408,
                                            Int(0))
                                      ]),
                                  Constructor
                                    (408,
                                      cons/1,
                                      Variable
                                        (408,
                                          x2/0),
                                      Constructor
                                        (408,
                                          []/1)),
                                  IfThenElse
                                    (409,
                                      Apply
                                        (409,
                                          Variable
                                            (409,
                                              OCaml.Pervasives.gt/1),
                                          [
                                            Variable
                                              (409,
                                                c/0);
                                            Constant
                                              (409,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (409,
                                          cons/1,
                                          Variable
                                            (409,
                                              x2/0),
                                          Constructor
                                            (409,
                                              cons/1,
                                              Variable
                                                (409,
                                                  x3/0),
                                              Constructor
                                                (409,
                                                  []/1))),
                                      Constructor
                                        (409,
                                          cons/1,
                                          Variable
                                            (409,
                                              x3/0),
                                          Constructor
                                            (409,
                                              cons/1,
                                              Variable
                                                (409,
                                                  x2/0),
                                              Constructor
                                                (409,
                                                  []/1))))),
                              IfThenElse
                                (410,
                                  Apply
                                    (410,
                                      Variable
                                        (410,
                                          OCaml.Pervasives.gt/1),
                                      [
                                        Variable
                                          (410,
                                            c/0);
                                        Constant
                                          (410,
                                            Int(0))
                                      ]),
                                  LetVar
                                    410
                                    c
                                    =
                                    Apply
                                      (411,
                                        Variable
                                          (411,
                                            cmp/0),
                                        [
                                          Variable
                                            (411,
                                              x2/0);
                                          Variable
                                            (411,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (412,
                                      Apply
                                        (412,
                                          Variable
                                            (412,
                                              equiv_decb/1),
                                          [
                                            Variable
                                              (412,
                                                c/0);
                                            Constant
                                              (412,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (412,
                                          cons/1,
                                          Variable
                                            (412,
                                              x1/0),
                                          Constructor
                                            (412,
                                              cons/1,
                                              Variable
                                                (412,
                                                  x2/0),
                                              Constructor
                                                (412,
                                                  []/1))),
                                      IfThenElse
                                        (413,
                                          Apply
                                            (413,
                                              Variable
                                                (413,
                                                  OCaml.Pervasives.gt/1),
                                              [
                                                Variable
                                                  (413,
                                                    c/0);
                                                Constant
                                                  (413,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (413,
                                              cons/1,
                                              Variable
                                                (413,
                                                  x1/0),
                                              Constructor
                                                (413,
                                                  cons/1,
                                                  Variable
                                                    (413,
                                                      x2/0),
                                                  Constructor
                                                    (413,
                                                      cons/1,
                                                      Variable
                                                        (413,
                                                          x3/0),
                                                      Constructor
                                                        (413,
                                                          []/1)))),
                                          LetVar
                                            414
                                            c
                                            =
                                            Apply
                                              (414,
                                                Variable
                                                  (414,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (414,
                                                      x1/0);
                                                  Variable
                                                    (414,
                                                      x3/0)
                                                ])
                                            in
                                          IfThenElse
                                            (415,
                                              Apply
                                                (415,
                                                  Variable
                                                    (415,
                                                      equiv_decb/1),
                                                  [
                                                    Variable
                                                      (415,
                                                        c/0);
                                                    Constant
                                                      (415,
                                                        Int(0))
                                                  ]),
                                              Constructor
                                                (415,
                                                  cons/1,
                                                  Variable
                                                    (415,
                                                      x1/0),
                                                  Constructor
                                                    (415,
                                                      cons/1,
                                                      Variable
                                                        (415,
                                                          x2/0),
                                                      Constructor
                                                        (415,
                                                          []/1))),
                                              IfThenElse
                                                (416,
                                                  Apply
                                                    (416,
                                                      Variable
                                                        (416,
                                                          OCaml.Pervasives.gt/1),
                                                      [
                                                        Variable
                                                          (416,
                                                            c/0);
                                                        Constant
                                                          (416,
                                                            Int(0))
                                                      ]),
                                                  Constructor
                                                    (416,
                                                      cons/1,
                                                      Variable
                                                        (416,
                                                          x1/0),
                                                      Constructor
                                                        (416,
                                                          cons/1,
                                                          Variable
                                                            (416,
                                                              x3/0),
                                                          Constructor
                                                            (416,
                                                              cons/1,
                                                              Variable
                                                                (416,
                                                                  x2/0),
                                                              Constructor
                                                                (416,
                                                                  []/1)))),
                                                  Constructor
                                                    (417,
                                                      cons/1,
                                                      Variable
                                                        (417,
                                                          x3/0),
                                                      Constructor
                                                        (417,
                                                          cons/1,
                                                          Variable
                                                            (417,
                                                              x1/0),
                                                          Constructor
                                                            (417,
                                                              cons/1,
                                                              Variable
                                                                (417,
                                                                  x2/0),
                                                              Constructor
                                                                (417,
                                                                  []/1)))))))),
                                  LetVar
                                    418
                                    c
                                    =
                                    Apply
                                      (419,
                                        Variable
                                          (419,
                                            cmp/0),
                                        [
                                          Variable
                                            (419,
                                              x1/0);
                                          Variable
                                            (419,
                                              x3/0)
                                        ])
                                    in
                                  IfThenElse
                                    (420,
                                      Apply
                                        (420,
                                          Variable
                                            (420,
                                              equiv_decb/1),
                                          [
                                            Variable
                                              (420,
                                                c/0);
                                            Constant
                                              (420,
                                                Int(0))
                                          ]),
                                      Constructor
                                        (420,
                                          cons/1,
                                          Variable
                                            (420,
                                              x2/0),
                                          Constructor
                                            (420,
                                              cons/1,
                                              Variable
                                                (420,
                                                  x1/0),
                                              Constructor
                                                (420,
                                                  []/1))),
                                      IfThenElse
                                        (421,
                                          Apply
                                            (421,
                                              Variable
                                                (421,
                                                  OCaml.Pervasives.gt/1),
                                              [
                                                Variable
                                                  (421,
                                                    c/0);
                                                Constant
                                                  (421,
                                                    Int(0))
                                              ]),
                                          Constructor
                                            (421,
                                              cons/1,
                                              Variable
                                                (421,
                                                  x2/0),
                                              Constructor
                                                (421,
                                                  cons/1,
                                                  Variable
                                                    (421,
                                                      x1/0),
                                                  Constructor
                                                    (421,
                                                      cons/1,
                                                      Variable
                                                        (421,
                                                          x3/0),
                                                      Constructor
                                                        (421,
                                                          []/1)))),
                                          LetVar
                                            422
                                            c
                                            =
                                            Apply
                                              (422,
                                                Variable
                                                  (422,
                                                    cmp/0),
                                                [
                                                  Variable
                                                    (422,
                                                      x2/0);
                                                  Variable
                                                    (422,
                                                      x3/0)
                                                ])
                                            in
                                          IfThenElse
                                            (423,
                                              Apply
                                                (423,
                                                  Variable
                                                    (423,
                                                      equiv_decb/1),
                                                  [
                                                    Variable
                                                      (423,
                                                        c/0);
                                                    Constant
                                                      (423,
                                                        Int(0))
                                                  ]),
                                              Constructor
                                                (423,
                                                  cons/1,
                                                  Variable
                                                    (423,
                                                      x2/0),
                                                  Constructor
                                                    (423,
                                                      cons/1,
                                                      Variable
                                                        (423,
                                                          x1/0),
                                                      Constructor
                                                        (423,
                                                          []/1))),
                                              IfThenElse
                                                (424,
                                                  Apply
                                                    (424,
                                                      Variable
                                                        (424,
                                                          OCaml.Pervasives.gt/1),
                                                      [
                                                        Variable
                                                          (424,
                                                            c/0);
                                                        Constant
                                                          (424,
                                                            Int(0))
                                                      ]),
                                                  Constructor
                                                    (424,
                                                      cons/1,
                                                      Variable
                                                        (424,
                                                          x2/0),
                                                      Constructor
                                                        (424,
                                                          cons/1,
                                                          Variable
                                                            (424,
                                                              x3/0),
                                                          Constructor
                                                            (424,
                                                              cons/1,
                                                              Variable
                                                                (424,
                                                                  x1/0),
                                                              Constructor
                                                                (424,
                                                                  []/1)))),
                                                  Constructor
                                                    (425,
                                                      cons/1,
                                                      Variable
                                                        (425,
                                                          x3/0),
                                                      Constructor
                                                        (425,
                                                          cons/1,
                                                          Variable
                                                            (425,
                                                              x2/0),
                                                          Constructor
                                                            (425,
                                                              cons/1,
                                                              Variable
                                                                (425,
                                                                  x1/0),
                                                              Constructor
                                                                (425,
                                                                  []/1)))))))))));
                        (Tuple
                          (n,
                            l),
                          LetVar
                            428
                            n1
                            =
                            Apply
                              (428,
                                Variable
                                  (428,
                                    Z.div/1),
                                [
                                  Variable
                                    (428,
                                      n/0);
                                  Constant
                                    (428,
                                      Int(2))
                                ])
                            in
                          LetVar
                            429
                            n2
                            =
                            Apply
                              (429,
                                Variable
                                  (429,
                                    Z.sub/1),
                                [
                                  Variable
                                    (429,
                                      n/0);
                                  Variable
                                    (429,
                                      n1/0)
                                ])
                            in
                          LetVar
                            430
                            l2
                            =
                            Apply
                              (430,
                                Variable
                                  (430,
                                    chop/1),
                                [
                                  Variable
                                    (430,
                                      n1/0);
                                  Variable
                                    (430,
                                      l/0)
                                ])
                            in
                          LetVar
                            431
                            s1
                            =
                            Apply
                              (431,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (431,
                                      cmp/0);
                                  Variable
                                    (431,
                                      n1/0);
                                  Variable
                                    (431,
                                      l/0)
                                ])
                            in
                          LetVar
                            432
                            s2
                            =
                            Apply
                              (432,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        sort_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (432,
                                      cmp/0);
                                  Variable
                                    (432,
                                      n2/0);
                                  Variable
                                    (432,
                                      l2/0)
                                ])
                            in
                          Apply
                            (433,
                              Variable
                                (433,
                                  rev_merge/0),
                              [
                                Variable
                                  (433,
                                    cmp/0);
                                Variable
                                  (433,
                                    s1/0);
                                Variable
                                  (433,
                                    s2/0);
                                Constructor
                                  (433,
                                    []/1)
                              ]))
                      ]))
              ]))
      ]))
  
  361 (Value
    (non_rec, @.,
      [
        ((sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Apply
            (?, Variable (?, sort_rec/0),
              [
                Apply
                  (?,
                    Variable
                      (?,
                        read_counter/1),
                    [
                      Tuple
                        (?)
                    ]);
                Variable (?, cmp/0);
                Variable (?, n/0);
                Variable (?, l/0)
              ]))
      ]))
  
  361 (Value
    (non_rec, @.,
      [
        ((rev_sort, [ A ],
          [
            (cmp, (A -> (A -> Type (Z/1))));
            (n, Type (Z/1));
            (l, Type (list/1, A))
          ], Some Type (list/1, A)),
          Apply
            (?, Variable (?, rev_sort_rec/0),
              [
                Apply
                  (?,
                    Variable
                      (?,
                        read_counter/1),
                    [
                      Tuple
                        (?)
                    ]);
                Variable (?, cmp/0);
                Variable (?, n/0);
                Variable (?, l/0)
              ]))
      ]))

436
(Value
  (non_rec, @.,
    [
      ((sort_uniq, [ A ],
        [ (cmp, (A -> (A -> Type (Z/0)))); (l, Type (list/0, A)) ],
        Some Type (list/0, A)),
        LetVar 437 len =
          Apply (437, Variable (437, length/0), [ Variable (437, l/0) ]) in
        IfThenElse
          (438,
            Apply
              (438, Variable (438, OCaml.Pervasives.lt/0),
                [ Variable (438, len/0); Constant (438, Int(2)) ]),
            Variable (438, l/0),
            Apply
              (438, Variable (438, SortUniq.sort/0),
                [
                  Variable (438, cmp/0);
                  Variable (438, len/0);
                  Variable (438, l/0)
                ])))
    ]))
