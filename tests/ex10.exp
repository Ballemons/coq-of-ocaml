((Module List2
  ((TypeDefinition
    (Inductive t (a)
     (NonGadt
      ((Nil ())
       (Cons ((Variable a) (Apply ((path ()) (base t)) ((Variable a)))))))))
   (Value
    ((is_rec (New true))
     (cases
      ((((name sum) (typ_vars ())
         (args
          ((l (Apply ((path ()) (base t)) ((Apply ((path ()) (base Z)) ()))))))
         (typ ((Apply ((path ()) (base Z)) ()))))
        (Match (Variable ((path ()) (base l)))
         (((Constructor ((path ()) (base Nil)) ()) (Constant (Int 0)))
          ((Constructor ((path ()) (base Cons)) ((Variable x) (Variable xs)))
           (Apply (Variable ((path (Z)) (base add)))
            ((Variable ((path ()) (base x)))
             (Apply (Variable ((path ()) (base sum)))
              ((Variable ((path ()) (base xs)))))))))))))))
   (Value
    ((is_rec (New true))
     (cases
      ((((name of_list) (typ_vars (A))
         (args
          ((function_parameter
            (Apply ((path ()) (base list)) ((Variable A))))))
         (typ ((Apply ((path ()) (base t)) ((Variable A))))))
        (Match (Variable ((path ()) (base function_parameter)))
         (((Constructor ((path ()) (base [])) ())
           (Constructor ((path ()) (base Nil)) ()))
          ((Constructor ((path ()) (base cons)) ((Variable x) (Variable xs)))
           (Constructor ((path ()) (base Cons))
            ((Variable ((path ()) (base x)))
             (Apply (Variable ((path ()) (base of_list)))
              ((Variable ((path ()) (base xs)))))))))))))))
   (Module Inside
    ((Value
      ((is_rec (New false))
       (cases
        ((((name x) (typ_vars ()) (args ())
           (typ ((Apply ((path ()) (base Z)) ()))))
          (Constant (Int 12)))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name n) (typ_vars (A)) (args ((function_parameter (Variable A))))
       (typ ((Apply ((path ()) (base Z)) ()))))
      (Match (Variable ((path ()) (base function_parameter)))
       ((Any
         (Apply (Variable ((path (List2)) (base sum)))
          ((Apply (Variable ((path (List2)) (base of_list)))
            ((Constructor ((path ()) (base cons))
              ((Constant (Int 5))
               (Constructor ((path ()) (base cons))
                ((Constant (Int 7))
                 (Constructor ((path ()) (base cons))
                  ((Constant (Int 6))
                   (Constructor ((path ()) (base cons))
                    ((Variable ((path (List2 Inside)) (base x)))
                     (Constructor ((path ()) (base [])) ()))))))))))))))))))))))
