((),
  Value
    (rec, 'map_rec', [ 'A'; 'B' ],
      [
        ('counter', Type ('nat'));
        ('f', ('B' -> 'A'));
        ('l', Type ('list', 'B'))
      ], Some Monad ([ 'NonTermination' ], Type ('list', 'A'))) =
    Match
      (unknown, Variable (unknown, 'counter'),
        [
          (Nat(0),
            Apply
              (unknown, Variable (unknown, 'not_terminated'),
                Variable (unknown, 'tt')));
          (Constructor ('S', 'counter'),
            Match
              (unknown, Variable (unknown, 'l'),
                [
                  (Constructor ('[]'),
                    Return
                      (unknown,
                        Constructor
                          (unknown,
                            '[]')));
                  (Constructor ('cons', 'x', 'xs'),
                    Bind
                      (unknown,
                        Apply
                          (unknown,
                            Apply
                              (unknown,
                                Apply
                                  (unknown,
                                    Variable
                                      (unknown,
                                        'map_rec'),
                                    Variable
                                      (unknown,
                                        'counter')),
                                Variable
                                  (unknown,
                                    'f')),
                            Variable
                              (unknown,
                                'xs')),
                        Some
                          'x_1',
                        Return
                          (unknown,
                            Constructor
                              (unknown,
                                'cons',
                                Apply
                                  (unknown,
                                    Variable
                                      (unknown,
                                        'f'),
                                    Variable
                                      (unknown,
                                        'x')),
                                Variable
                                  (unknown,
                                    'x_1')))))
                ]))
        ]))

((),
  Value
    (non_rec, 'map', [ 'A'; 'B' ],
      [ ('f', ('B' -> 'A')); ('l', Type ('list', 'B')) ],
      Some Monad ([ 'Counter'; 'NonTermination' ], Type ('list', 'A'))) =
    Bind
      (unknown,
        Lift
          (unknown, [ 'Counter' ], [ 'Counter'; 'NonTermination' ],
            Apply
              (unknown, Variable (unknown, 'read_counter'),
                Variable (unknown, 'tt'))), Some 'counter',
        Lift
          (unknown, [ 'NonTermination' ], [ 'Counter'; 'NonTermination' ],
            Apply
              (unknown,
                Apply
                  (unknown,
                    Apply
                      (unknown, Variable (unknown, 'map_rec'),
                        Variable (unknown, 'counter')), Variable (unknown, 'f')),
                Variable (unknown, 'l')))))

((),
  Value
    (rec, 'fold_rec', [ 'A'; 'B' ],
      [
        ('counter', Type ('nat'));
        ('f', ('A' -> ('B' -> 'A')));
        ('a', 'A');
        ('l', Type ('list', 'B'))
      ], Some Monad ([ 'NonTermination' ], 'A')) =
    Match
      (unknown, Variable (unknown, 'counter'),
        [
          (Nat(0),
            Apply
              (unknown, Variable (unknown, 'not_terminated'),
                Variable (unknown, 'tt')));
          (Constructor ('S', 'counter'),
            Match
              (unknown, Variable (unknown, 'l'),
                [
                  (Constructor ('[]'),
                    Return
                      (unknown,
                        Variable
                          (unknown,
                            'a')));
                  (Constructor ('cons', 'x', 'xs'),
                    Apply
                      (unknown,
                        Apply
                          (unknown,
                            Apply
                              (unknown,
                                Apply
                                  (unknown,
                                    Variable
                                      (unknown,
                                        'fold_rec'),
                                    Variable
                                      (unknown,
                                        'counter')),
                                Variable
                                  (unknown,
                                    'f')),
                            Apply
                              (unknown,
                                Apply
                                  (unknown,
                                    Variable
                                      (unknown,
                                        'f'),
                                    Variable
                                      (unknown,
                                        'a')),
                                Variable
                                  (unknown,
                                    'x'))),
                        Variable
                          (unknown,
                            'xs')))
                ]))
        ]))

((),
  Value
    (non_rec, 'fold', [ 'A'; 'B' ],
      [ ('f', ('A' -> ('B' -> 'A'))); ('a', 'A'); ('l', Type ('list', 'B')) ],
      Some Monad ([ 'Counter'; 'NonTermination' ], 'A')) =
    Bind
      (unknown,
        Lift
          (unknown, [ 'Counter' ], [ 'Counter'; 'NonTermination' ],
            Apply
              (unknown, Variable (unknown, 'read_counter'),
                Variable (unknown, 'tt'))), Some 'counter',
        Lift
          (unknown, [ 'NonTermination' ], [ 'Counter'; 'NonTermination' ],
            Apply
              (unknown,
                Apply
                  (unknown,
                    Apply
                      (unknown,
                        Apply
                          (unknown, Variable (unknown, 'fold_rec'),
                            Variable (unknown, 'counter')),
                        Variable (unknown, 'f')), Variable (unknown, 'a')),
                Variable (unknown, 'l')))))

((),
  Value (non_rec, 'l', [ ], [ ], Some Type ('list', Type ('Z'))) =
    Constructor
      (unknown, 'cons', Constant (unknown, Int(5)),
        Constructor
          (unknown, 'cons', Constant (unknown, Int(6)),
            Constructor
              (unknown, 'cons', Constant (unknown, Int(7)),
                Constructor
                  (unknown, 'cons', Constant (unknown, Int(2)),
                    Constructor (unknown, '[]'))))))

((),
  Value
    (non_rec, 'n', [ 'A' ],
      [
        ('incr', (Type ('Z') -> 'A'));
        ('plus', (Type ('Z') -> ('A' -> Type ('Z'))))
      ], Some Monad ([ 'Counter'; 'NonTermination' ], Type ('Z'))) =
    Bind
      (unknown,
        Apply
          (unknown,
            Apply
              (unknown, Variable (unknown, 'map'), Variable (unknown, 'incr')),
            Variable (unknown, 'l')), Some 'x',
        Apply
          (unknown,
            Apply
              (unknown,
                Apply
                  (unknown, Variable (unknown, 'fold'),
                    Function
                      (unknown, 'x',
                        Function
                          (unknown, 'y',
                            Apply
                              (unknown,
                                Apply
                                  (unknown, Variable (unknown, 'plus'),
                                    Variable (unknown, 'x')),
                                Variable (unknown, 'y'))))),
                Constant (unknown, Int(0))), Variable (unknown, 'x'))))
