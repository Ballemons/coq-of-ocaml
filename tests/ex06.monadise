Value
  (rec, 'map_rec', [ 'A'; 'B' ],
    [ ('counter', Type ('nat')); ('f', ('B' -> 'A')); ('l', Type ('list', 'B')) ],
    Some Monad ([ 'NonTermination' ], Type ('list', 'A'))) =
  Match
    ('counter',
      [
        (Nat(0), Apply ('not_terminated', 'tt'));
        (Constructor ('S', 'counter'),
          Match
            ('l',
              [
                (Constructor ('[]'),
                  Return
                    (Constructor
                      ('[]')));
                (Constructor ('cons', 'x', 'xs'),
                  Bind
                    (Apply
                      (Apply
                        (Apply
                          ('map_rec',
                            'counter'),
                          'f'),
                        'xs'),
                      Some
                        'x_1',
                      Return
                        (Constructor
                          ('cons',
                            Apply
                              ('f',
                                'x'),
                            'x_1'))))
              ]))
      ])

Value
  (non_rec, 'map', [ 'A'; 'B' ],
    [ ('f', ('B' -> 'A')); ('l', Type ('list', 'B')) ], Some
    Monad ([ 'Counter'; 'NonTermination' ], Type ('list', 'A'))) =
  Bind
    (Lift
      ([ 'Counter' ], [ 'Counter'; 'NonTermination' ],
        Apply ('read_counter', 'tt')), Some 'counter',
      Lift
        ([ 'NonTermination' ], [ 'Counter'; 'NonTermination' ],
          Apply (Apply (Apply ('map_rec', 'counter'), 'f'), 'l')))

Value
  (rec, 'fold_rec', [ 'A'; 'B' ],
    [
      ('counter', Type ('nat'));
      ('f', ('A' -> ('B' -> 'A')));
      ('a', 'A');
      ('l', Type ('list', 'B'))
    ], Some Monad ([ 'NonTermination' ], 'A')) =
  Match
    ('counter',
      [
        (Nat(0), Apply ('not_terminated', 'tt'));
        (Constructor ('S', 'counter'),
          Match
            ('l',
              [
                (Constructor ('[]'), Return ('a'));
                (Constructor ('cons', 'x', 'xs'),
                  Apply
                    (Apply
                      (Apply
                        (Apply
                          ('fold_rec',
                            'counter'),
                          'f'),
                        Apply
                          (Apply
                            ('f',
                              'a'),
                            'x')),
                      'xs'))
              ]))
      ])

Value
  (non_rec, 'fold', [ 'A'; 'B' ],
    [ ('f', ('A' -> ('B' -> 'A'))); ('a', 'A'); ('l', Type ('list', 'B')) ],
    Some Monad ([ 'Counter'; 'NonTermination' ], 'A')) =
  Bind
    (Lift
      ([ 'Counter' ], [ 'Counter'; 'NonTermination' ],
        Apply ('read_counter', 'tt')), Some 'counter',
      Lift
        ([ 'NonTermination' ], [ 'Counter'; 'NonTermination' ],
          Apply (Apply (Apply (Apply ('fold_rec', 'counter'), 'f'), 'a'), 'l')))

Value (non_rec, 'l', [ ], [ ], Some Type ('list', Type ('Z'))) =
  Constructor
    ('cons', Int(5),
      Constructor
        ('cons', Int(6),
          Constructor
            ('cons', Int(7), Constructor ('cons', Int(2), Constructor ('[]')))))

Value
  (non_rec, 'n', [ 'A' ],
    [
      ('incr', (Type ('Z') -> 'A'));
      ('plus', (Type ('Z') -> ('A' -> Type ('Z'))))
    ], Some Monad ([ 'Counter'; 'NonTermination' ], Type ('Z'))) =
  Bind
    (Apply (Apply ('map', 'incr'), 'l'), Some 'x',
      Apply
        (Apply
          (Apply
            ('fold',
              Function ('x', Function ('y', Apply (Apply ('plus', 'x'), 'y')))),
            Int(0)), 'x'))
