Module 'SizedString':
  Record 't':
    ([ ('name', Type ('string')); ('size', Type ('Z')) ])

((),
  Value (non_rec, 'r', [ ], [ ], Some Type ('SizedString.t')) =
    Record
      (unknown, ('SizedString.name', Constant (unknown, String("gre"))),
        ('SizedString.size', Constant (unknown, Int(3)))))

((),
  Value (non_rec, 'r'', [ ], [ ], Some Type ('SizedString.t')) =
    Record
      (unknown, ('SizedString.name', Constant (unknown, String("haha"))),
        ('SizedString.size', Constant (unknown, Int(4)))))

((),
  Value (non_rec, 's', [ ], [ ], Some Type ('Z')) =
    Apply
      (unknown,
        Apply
          (unknown, Variable (unknown, 'Z.add'),
            Field (unknown, Variable (unknown, 'r'), 'SizedString.size')),
        Field (unknown, Variable (unknown, 'r''), 'SizedString.size')))

((),
  Value
    (non_rec, 'f', [ ], [ ('match_var_0', Type ('SizedString.t')) ],
      Some Type ('bool')) =
    Match
      (unknown, Variable (unknown, 'match_var_0'),
        [
          (Record (('SizedString.size', Int(3))), Constructor (unknown, 'true'));
          (Any, Constructor (unknown, 'false'))
        ]))

((),
  Value (non_rec, 'b', [ ], [ ], Some Type ('bool')) =
    Apply (unknown, Variable (unknown, 'f'), Variable (unknown, 'r')))

((),
  Value (non_rec, 'b'', [ ], [ ], Some Type ('bool')) =
    Apply (unknown, Variable (unknown, 'f'), Variable (unknown, 'r'')))

Module 'Point':
  Record 't':
    ([ ('x', Type ('Z')); ('y', Type ('Z')); ('z', Type ('Z')) ])
  
  ((),
    Value (non_rec, 'p', [ ], [ ], Some Type ('t')) =
      Record
        (unknown, ('x', Constant (unknown, Int(5))),
          ('y', Constant (unknown, Int(-3))), ('z', Constant (unknown, Int(1)))))
  
  ((),
    Value (non_rec, 'b', [ ], [ ], Some Type ('bool')) =
      Match
        (unknown, Variable (unknown, 'p'),
          [
            (Record (('x', Int(5)), ('z', Int(1))),
              Constructor (unknown, 'true'));
            (Any, Constructor (unknown, 'false'))
          ]))
