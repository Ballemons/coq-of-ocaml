Value 'tail':
  (non_rec, [ 'A' ], [ ('l', Type ('list', 'A')) ], Type ('list', 'A'),
    Match
      ('l',
        [
          (Constructor ('cons', Any, 'xs'), Lift ([ ], [ 'Failure' ], 'xs'));
          (Constructor ('[]'),
            Apply
              ('failwith',
                String("Cannot take the tail of an empty list.")))
        ]))

Value 'print_list':
  (rec, [ ], [ ('match_var_0', Type ('list', Type ('Z'))) ], Type ('unit'),
    Match
      ('match_var_0',
        [
          (Constructor ('[]'), Lift ([ ], [ 'io' ], Constructor ('tt')));
          (Constructor ('cons', 'x', 'xs'),
            Bind
              (Apply ('print_int', 'x'), None,
                Apply ('print_list', 'xs')))
        ]))

Value 'f':
  (non_rec, [ ], [ ], (Type ('list', Type ('Z')) -> Type ('unit')), 'print_list')

Value 'x':
  (non_rec, [ 'A' ], [ ('z', 'A') ], Type ('unit'),
    Bind
      (Lift
        ([ 'Failure' ], [ 'Failure'; 'io' ],
          Apply
            ('tail',
              Constructor
                ('cons', Int(5),
                  Constructor
                    ('cons', Int(7),
                      Constructor ('cons', Int(8), Constructor ('[]')))))),
        Some 'x', Lift ([ 'io' ], [ 'Failure'; 'io' ], Apply ('f', 'x'))))
