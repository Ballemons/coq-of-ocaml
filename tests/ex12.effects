Inductive 'tree':
  ([ ],
    [ ('Leaf', [ ]); ('Node', [ Type ('tree'); Type ('Z'); Type ('tree') ]) ])

(. -> . -> . -[ 'NonTermination' ]-> .,
  Value
    (rec, 'find_rec', [ ],
      [ ('counter', Type ('nat')); ('x', Type ('Z')); ('t', Type ('tree')) ],
      Some Type ('bool')) =
    Match
      ((?, Effect ([ 'NonTermination' ], .)),
        Variable ((?, Effect ([ ], .)), 'counter'),
        [
          (Nat(0),
            Apply
              ((?, Effect ([ 'NonTermination' ], .)),
                Variable
                  ((?,
                    Effect
                      ([ ],
                        .
                          -[
                            'NonTermination'
                          ]-> .)),
                    'not_terminated'),
                Variable ((?, Effect ([ ], .)), 'tt')));
          (Constructor ('S', 'counter'),
            Match
              ((?, Effect ([ 'NonTermination' ], .)),
                Variable ((?, Effect ([ ], .)), 't'),
                [
                  (Constructor ('Leaf'),
                    Constructor
                      ((?,
                        Effect
                          ([
                          ],
                            .)),
                        'false'));
                  (Constructor
                    ('Node',
                      't1',
                      'x'',
                      't2'),
                    IfThenElse
                      ((?,
                        Effect
                          ([
                            'NonTermination'
                          ],
                            .)),
                        Apply
                          ((?,
                            Effect
                              ([
                              ],
                                .)),
                            Apply
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    'Z.ltb'),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    'x')),
                            Variable
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)),
                                'x'')),
                        Apply
                          ((?,
                            Effect
                              ([
                                'NonTermination'
                              ],
                                .)),
                            Apply
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        'NonTermination'
                                      ]->
                                      .)),
                                Apply
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              'NonTermination'
                                            ]->
                                            .)),
                                    Variable
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                ->
                                                .
                                                  -[
                                                    'NonTermination'
                                                  ]->
                                                  .)),
                                        'find_rec'),
                                    Variable
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        'counter')),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    'x')),
                            Variable
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)),
                                't1')),
                        IfThenElse
                          ((?,
                            Effect
                              ([
                                'NonTermination'
                              ],
                                .)),
                            Apply
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Apply
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        'Z.ltb'),
                                    Variable
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        'x'')),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    'x')),
                            Apply
                              ((?,
                                Effect
                                  ([
                                    'NonTermination'
                                  ],
                                    .)),
                                Apply
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            'NonTermination'
                                          ]->
                                          .)),
                                    Apply
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                -[
                                                  'NonTermination'
                                                ]->
                                                .)),
                                        Variable
                                          ((?,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        'NonTermination'
                                                      ]->
                                                      .)),
                                            'find_rec'),
                                        Variable
                                          ((?,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            'counter')),
                                    Variable
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        'x')),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    't2')),
                            Constructor
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)),
                                'true'))))
                ]))
        ]))

(. -> . -[ 'Counter'; 'NonTermination' ]-> .,
  Value
    (non_rec, 'find', [ ], [ ('x', Type ('Z')); ('t', Type ('tree')) ],
      Some Type ('bool')) =
    Let (?, Effect ([ 'Counter'; 'NonTermination' ], .))
      (non_rec, 'counter', [ ], [ ], None) =
      Apply
        ((?, Effect ([ 'Counter' ], .)),
          Variable ((?, Effect ([ ], . -[ 'Counter' ]-> .)), 'read_counter'),
          Variable ((?, Effect ([ ], .)), 'tt')) in
    Apply
      ((?, Effect ([ 'NonTermination' ], .)),
        Apply
          ((?, Effect ([ ], . -[ 'NonTermination' ]-> .)),
            Apply
              ((?, Effect ([ ], . -> . -[ 'NonTermination' ]-> .)),
                Variable
                  ((?, Effect ([ ], . -> . -> . -[ 'NonTermination' ]-> .)),
                    'find_rec'), Variable ((?, Effect ([ ], .)), 'counter')),
            Variable ((?, Effect ([ ], .)), 'x')),
        Variable ((?, Effect ([ ], .)), 't')))
