Exception ('TailLess', ())

Exception ('Wtf', (Type ('Z') * Type ('string')))

((),
  Value
    (non_rec, 'f', [ 'A'; 'B' ], [ ('x', 'B') ],
      Some Monad ([ 'TailLess' ], 'A')) =
    Apply (7, Variable (7, 'TailLess'), Tuple (?)))

((),
  Value
    (non_rec, 'g', [ 'A'; 'B' ], [ ('x', 'B') ], Some Monad ([ 'Wtf' ], 'A')) =
    Apply
      (9, Variable (9, 'Wtf'),
        Tuple (?, Constant (9, Int(12)), Constant (9, String("no")))))

((),
  Value
    (rec, 'h_rec', [ 'A' ],
      [ ('counter', Type ('nat')); ('l', Type ('list', 'A')) ],
      Some Monad ([ 'IO'; 'NonTermination'; 'TailLess' ], 'A')) =
    Match
      (?, Variable (?, 'counter'),
        [
          (Nat(0),
            Lift
              (?, [ 'NonTermination' ],
                [ 'IO'; 'NonTermination'; 'TailLess' ],
                Apply
                  (?, Variable (?, 'not_terminated'),
                    Variable (?, 'tt'))));
          (Constructor ('S', 'counter'),
            Match
              (12, Variable (12, 'l'),
                [
                  (Constructor ('[]'),
                    Lift
                      (?,
                        [
                          'IO';
                          'TailLess'
                        ],
                        [
                          'IO';
                          'NonTermination';
                          'TailLess'
                        ],
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  'IO'
                                ],
                                [
                                  'IO';
                                  'TailLess'
                                ],
                                Apply
                                  (13,
                                    Variable
                                      (13,
                                        'print_string'),
                                    Constant
                                      (13,
                                        String("no tail")))),
                            None,
                            Lift
                              (?,
                                [
                                  'TailLess'
                                ],
                                [
                                  'IO';
                                  'TailLess'
                                ],
                                Apply
                                  (13,
                                    Variable
                                      (13,
                                        'TailLess'),
                                    Tuple
                                      (?))))));
                  (Constructor
                    ('cons',
                      'x',
                      Constructor
                        ('[]')),
                    Return
                      (?,
                        Variable
                          (14,
                            'x')));
                  (Constructor ('cons', Any, 'xs'),
                    Apply
                      (15,
                        Apply
                          (?,
                            Variable
                              (?,
                                'h_rec'),
                            Variable
                              (?,
                                'counter')),
                        Variable
                          (15,
                            'xs')))
                ]))
        ]))

((),
  Value
    (non_rec, 'h', [ 'A' ], [ ('l', Type ('list', 'A')) ],
      Some Monad ([ 'Counter'; 'IO'; 'NonTermination'; 'TailLess' ], 'A')) =
    Bind
      (?,
        Lift
          (?, [ 'Counter' ], [ 'Counter'; 'IO'; 'NonTermination'; 'TailLess' ],
            Apply (?, Variable (?, 'read_counter'), Variable (?, 'tt'))),
        Some 'counter',
        Lift
          (?, [ 'IO'; 'NonTermination'; 'TailLess' ],
            [ 'Counter'; 'IO'; 'NonTermination'; 'TailLess' ],
            Apply
              (?, Apply (?, Variable (?, 'h_rec'), Variable (?, 'counter')),
                Variable (?, 'l')))))
