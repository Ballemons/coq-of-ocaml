Exception ('TailLess', ())

Exception ('Wtf', (Type ('Z') * Type ('string')))

((),
  Value
    (non_rec, 'f', [ 'A'; 'B' ], [ ('x', 'B') ],
      Some Monad ([ 'TailLess' ], 'A')) =
    Apply ((), Variable ((), 'TailLess'), Tuple (())))

((),
  Value
    (non_rec, 'g', [ 'A'; 'B' ], [ ('x', 'B') ], Some Monad ([ 'Wtf' ], 'A')) =
    Apply
      ((), Variable ((), 'Wtf'),
        Tuple ((), Constant ((), Int(12)), Constant ((), String("no")))))

((),
  Value
    (rec, 'h_rec', [ 'A' ],
      [ ('counter', Type ('nat')); ('l', Type ('list', 'A')) ],
      Some Monad ([ 'IO'; 'NonTermination'; 'TailLess' ], 'A')) =
    Match
      ((), Variable ((), 'counter'),
        [
          (Nat(0),
            Lift
              ((), [ 'NonTermination' ],
                [ 'IO'; 'NonTermination'; 'TailLess' ],
                Apply
                  ((), Variable ((), 'not_terminated'),
                    Variable ((), 'tt'))));
          (Constructor ('S', 'counter'),
            Match
              ((), Variable ((), 'l'),
                [
                  (Constructor ('[]'),
                    Lift
                      ((),
                        [
                          'IO';
                          'TailLess'
                        ],
                        [
                          'IO';
                          'NonTermination';
                          'TailLess'
                        ],
                        Bind
                          ((),
                            Lift
                              ((),
                                [
                                  'IO'
                                ],
                                [
                                  'IO';
                                  'TailLess'
                                ],
                                Apply
                                  ((),
                                    Variable
                                      ((),
                                        'print_string'),
                                    Constant
                                      ((),
                                        String("no tail")))),
                            None,
                            Lift
                              ((),
                                [
                                  'TailLess'
                                ],
                                [
                                  'IO';
                                  'TailLess'
                                ],
                                Apply
                                  ((),
                                    Variable
                                      ((),
                                        'TailLess'),
                                    Tuple
                                      (()))))));
                  (Constructor
                    ('cons',
                      'x',
                      Constructor
                        ('[]')),
                    Return
                      ((),
                        Variable
                          ((),
                            'x')));
                  (Constructor ('cons', Any, 'xs'),
                    Apply
                      ((),
                        Apply
                          ((),
                            Variable
                              ((),
                                'h_rec'),
                            Variable
                              ((),
                                'counter')),
                        Variable
                          ((),
                            'xs')))
                ]))
        ]))

((),
  Value
    (non_rec, 'h', [ 'A' ], [ ('l', Type ('list', 'A')) ],
      Some Monad ([ 'Counter'; 'IO'; 'NonTermination'; 'TailLess' ], 'A')) =
    Bind
      ((),
        Lift
          ((), [ 'Counter' ], [ 'Counter'; 'IO'; 'NonTermination'; 'TailLess' ],
            Apply ((), Variable ((), 'read_counter'), Variable ((), 'tt'))),
        Some 'counter',
        Lift
          ((), [ 'IO'; 'NonTermination'; 'TailLess' ],
            [ 'Counter'; 'IO'; 'NonTermination'; 'TailLess' ],
            Apply
              ((), Apply ((), Variable ((), 'h_rec'), Variable ((), 'counter')),
                Variable ((), 'l')))))
