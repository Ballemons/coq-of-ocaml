Module 'SizedString':
  Record 't':
    ([ ('name', Type ('string')); ('size', Type ('Z')) ])

((),
  Value (non_rec, 'r', [ ], [ ], Some Type ('SizedString.t')) =
    Record
      (?, ('SizedString.name', Constant (?, String("gre"))),
        ('SizedString.size', Constant (?, Int(3)))))

((),
  Value (non_rec, 'r'', [ ], [ ], Some Type ('SizedString.t')) =
    Record
      (?, ('SizedString.name', Constant (?, String("haha"))),
        ('SizedString.size', Constant (?, Int(4)))))

((),
  Value (non_rec, 's', [ ], [ ], Some Type ('Z')) =
    Apply
      (?,
        Apply
          (?, Variable (?, 'Z.add'),
            Field (?, Variable (?, 'r'), 'SizedString.size')),
        Field (?, Variable (?, 'r''), 'SizedString.size')))

((),
  Value
    (non_rec, 'f', [ ], [ ('match_var_0', Type ('SizedString.t')) ],
      Some Type ('bool')) =
    Match
      (?, Variable (?, 'match_var_0'),
        [
          (Record (('SizedString.size', Int(3))), Constructor (?, 'true'));
          (Any, Constructor (?, 'false'))
        ]))

((),
  Value (non_rec, 'b', [ ], [ ], Some Type ('bool')) =
    Apply (?, Variable (?, 'f'), Variable (?, 'r')))

((),
  Value (non_rec, 'b'', [ ], [ ], Some Type ('bool')) =
    Apply (?, Variable (?, 'f'), Variable (?, 'r'')))

Module 'Point':
  Record 't':
    ([ ('x', Type ('Z')); ('y', Type ('Z')); ('z', Type ('Z')) ])
  
  ((),
    Value (non_rec, 'p', [ ], [ ], Some Type ('t')) =
      Record
        (?, ('x', Constant (?, Int(5))), ('y', Constant (?, Int(-3))),
          ('z', Constant (?, Int(1)))))
  
  ((),
    Value (non_rec, 'b', [ ], [ ], Some Type ('bool')) =
      Match
        (?, Variable (?, 'p'),
          [
            (Record (('x', Int(5)), ('z', Int(1))), Constructor (?, 'true'));
            (Any, Constructor (?, 'false'))
          ]))
