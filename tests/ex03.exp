Value 'n1':
  (non_rec, [ ], [ ], Type ('Z'), Let ('m', Int(12), Let ('n1', 'm', 'n1')))

Value 'n2':
  (non_rec, [ ], [ ], Type ('Z'),
    LetFun
      (non_rec, 'p1', [ 'A'; 'B'; 'C' ],
        [ ('c', (('B' -> ('C' -> 'B')) -> 'A')) ],
        Apply ('c', Function ('x', Function ('y', 'x'))),
        LetFun
          (non_rec, 'c', [ 'A' ],
            [ ('f', (Type ('Z') -> (Type ('Z') -> 'A'))) ],
            Apply (Apply ('f', Int(12)), Int(23)), Apply ('p1', 'c'))))
