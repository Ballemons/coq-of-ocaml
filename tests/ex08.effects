Other

Value
  (.,
    Compound
      (Effect ([ ], .), Compound (Effect ([ ], .)), Leaf (Effect ([ ], .))))

Value
  (.,
    Match
      (Effect ([ ], .), Leaf (Effect ([ ], .)), Leaf (Effect ([ ], .)),
        Compound (Effect ([ ], .))))

Other

Value
  (. -> . -[ 'NonTermination' ]-> .,
    Match
      (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
        Apply
          (Effect ([ 'NonTermination' ], .),
            Leaf (Effect ([ ], . -[ 'NonTermination' ]-> .)),
            Leaf (Effect ([ ], .))),
        Match
          (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
            Compound (Effect ([ ], .)),
            Compound
              (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
                Apply
                  (Effect ([ 'NonTermination' ], .),
                    Apply
                      (Effect ([ ], . -[ 'NonTermination' ]-> .),
                        Leaf (Effect ([ ], . -> . -[ 'NonTermination' ]-> .)),
                        Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .)))))))

Value
  (. -[ 'Counter'; 'NonTermination' ]-> .,
    Let
      (Effect ([ 'Counter'; 'NonTermination' ], .),
        Apply
          (Effect ([ 'Counter' ], .), Leaf (Effect ([ ], . -[ 'Counter' ]-> .)),
            Leaf (Effect ([ ], .))),
        Apply
          (Effect ([ 'NonTermination' ], .),
            Apply
              (Effect ([ ], . -[ 'NonTermination' ]-> .),
                Leaf (Effect ([ ], . -> . -[ 'NonTermination' ]-> .)),
                Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .)))))

Value
  (. -> . -[ 'NonTermination' ]-> .,
    Match
      (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
        Apply
          (Effect ([ 'NonTermination' ], .),
            Leaf (Effect ([ ], . -[ 'NonTermination' ]-> .)),
            Leaf (Effect ([ ], .))),
        Match
          (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
            Leaf (Effect ([ ], .)),
            Apply
              (Effect ([ 'NonTermination' ], .),
                Apply
                  (Effect ([ ], .), Leaf (Effect ([ ], .)),
                    Leaf (Effect ([ ], .))),
                Apply
                  (Effect ([ 'NonTermination' ], .),
                    Apply
                      (Effect ([ ], . -[ 'NonTermination' ]-> .),
                        Leaf (Effect ([ ], . -> . -[ 'NonTermination' ]-> .)),
                        Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .)))))))

Value
  (. -[ 'Counter'; 'NonTermination' ]-> .,
    Let
      (Effect ([ 'Counter'; 'NonTermination' ], .),
        Apply
          (Effect ([ 'Counter' ], .), Leaf (Effect ([ ], . -[ 'Counter' ]-> .)),
            Leaf (Effect ([ ], .))),
        Apply
          (Effect ([ 'NonTermination' ], .),
            Apply
              (Effect ([ ], . -[ 'NonTermination' ]-> .),
                Leaf (Effect ([ ], . -> . -[ 'NonTermination' ]-> .)),
                Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .)))))

Value
  (.,
    Apply
      (Effect ([ 'Counter'; 'NonTermination' ], .),
        Leaf (Effect ([ ], . -[ 'Counter'; 'NonTermination' ]-> .)),
        Apply
          (Effect ([ 'Counter'; 'NonTermination' ], .),
            Leaf (Effect ([ ], . -[ 'Counter'; 'NonTermination' ]-> .)),
            Compound
              (Effect ([ ], .), Leaf (Effect ([ ], .)),
                Compound
                  (Effect ([ ], .), Leaf (Effect ([ ], .)),
                    Compound
                      (Effect ([ ], .), Leaf (Effect ([ ], .)),
                        Compound (Effect ([ ], .))))))))
