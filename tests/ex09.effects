Value
  (.,
    Let
      (Effect ([ 'Counter'; 'NonTermination' ], .),
        Match
          (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
            Apply
              (Effect ([ 'NonTermination' ], .),
                Leaf (Effect ([ ], . -[ 'NonTermination' ]-> .)),
                Leaf (Effect ([ ], .))),
            Match
              (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
                Compound (Effect ([ ], .)),
                Compound
                  (Effect ([ 'NonTermination' ], .),
                    Apply
                      (Effect ([ ], .), Leaf (Effect ([ ], .)),
                        Leaf (Effect ([ ], .))),
                    Apply
                      (Effect ([ 'NonTermination' ], .),
                        Apply
                          (Effect ([ ], . -[ 'NonTermination' ]-> .),
                            Apply
                              (Effect ([ ], . -> . -[ 'NonTermination' ]-> .),
                                Leaf
                                  (Effect
                                    ([ ], . -> . -> . -[ 'NonTermination' ]-> .)),
                                Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .))),
                        Leaf (Effect ([ ], .)))))),
        Let
          (Effect ([ 'Counter'; 'NonTermination' ], .),
            Let
              (Effect ([ 'Counter'; 'NonTermination' ], .),
                Apply
                  (Effect ([ 'Counter' ], .),
                    Leaf (Effect ([ ], . -[ 'Counter' ]-> .)),
                    Leaf (Effect ([ ], .))),
                Apply
                  (Effect ([ 'NonTermination' ], .),
                    Apply
                      (Effect ([ ], . -[ 'NonTermination' ]-> .),
                        Apply
                          (Effect ([ ], . -> . -[ 'NonTermination' ]-> .),
                            Leaf
                              (Effect
                                ([ ], . -> . -> . -[ 'NonTermination' ]-> .)),
                            Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .))),
                    Leaf (Effect ([ ], .)))),
            Let
              (Effect ([ 'Counter'; 'NonTermination' ], .),
                Match
                  (Effect ([ 'NonTermination' ], .), Leaf (Effect ([ ], .)),
                    Apply
                      (Effect ([ 'NonTermination' ], .),
                        Leaf (Effect ([ ], . -[ 'NonTermination' ]-> .)),
                        Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .))),
                Let
                  (Effect ([ 'Counter'; 'NonTermination' ], .),
                    Let
                      (Effect ([ 'Counter'; 'NonTermination' ], .),
                        Apply
                          (Effect ([ 'Counter' ], .),
                            Leaf (Effect ([ ], . -[ 'Counter' ]-> .)),
                            Leaf (Effect ([ ], .))),
                        Apply
                          (Effect ([ 'NonTermination' ], .),
                            Apply
                              (Effect ([ ], . -[ 'NonTermination' ]-> .),
                                Leaf
                                  (Effect
                                    ([ ], . -> . -[ 'NonTermination' ]-> .)),
                                Leaf (Effect ([ ], .))), Leaf (Effect ([ ], .)))),
                    Apply
                      (Effect ([ 'Counter'; 'NonTermination' ], .),
                        Apply
                          (Effect ([ ], . -[ 'Counter'; 'NonTermination' ]-> .),
                            Leaf
                              (Effect
                                ([ ],
                                  . -> . -[ 'Counter'; 'NonTermination' ]-> .)),
                            Function
                              (Effect ([ ], . -> .),
                                Apply
                                  (Effect ([ ], .),
                                    Apply
                                      (Effect ([ ], .), Leaf (Effect ([ ], .)),
                                        Leaf (Effect ([ ], .))),
                                    Leaf (Effect ([ ], .))))),
                        Compound
                          (Effect ([ ], .), Leaf (Effect ([ ], .)),
                            Compound
                              (Effect ([ ], .), Leaf (Effect ([ ], .)),
                                Compound
                                  (Effect ([ ], .), Leaf (Effect ([ ], .)),
                                    Compound (Effect ([ ], .)))))))))))
