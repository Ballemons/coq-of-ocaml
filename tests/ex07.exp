((Value
  ((is_rec (New false))
   (cases
    ((((name b) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base bool))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path ()) (base orb))) (depth 1)))
       ((Apply
         (Variable ((path_name ((path ()) (base equiv_decb))) (depth 1)))
         ((Constructor ((path_name ((path ()) (base false))) (depth 1)) ())
          (Constructor ((path_name ((path ()) (base true))) (depth 1)) ())))
        (Apply (Variable ((path_name ((path ()) (base andb))) (depth 1)))
         ((Apply
           (Variable ((path_name ((path ()) (base nequiv_decb))) (depth 1)))
           ((Constructor ((path_name ((path ()) (base tt))) (depth 1)) ())
            (Constructor ((path_name ((path ()) (base tt))) (depth 1)) ())))
          (Apply (Variable ((path_name ((path ()) (base negb))) (depth 1)))
           ((Constructor ((path_name ((path ()) (base true))) (depth 1)) ()))))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name n1) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path (Z)) (base add))) (depth 1)))
       ((Constant (Int 1))
        (Apply (Variable ((path_name ((path (Z)) (base mul))) (depth 1)))
         ((Constant (Int 2)) (Constant (Int 3)))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name n2) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path (Z)) (base sub))) (depth 1)))
       ((Apply (Variable ((path_name ((path (Z)) (base add))) (depth 1)))
         ((Apply (Variable ((path_name ((path (Z)) (base abs))) (depth 1)))
           ((Constant (Int -1))))
          (Constant (Int 1))))
        (Apply (Variable ((path_name ((path (Z)) (base mul))) (depth 1)))
         ((Apply
           (Variable ((path_name ((path (Z)) (base modulo))) (depth 1)))
           ((Apply (Variable ((path_name ((path (Z)) (base div))) (depth 1)))
             ((Constant (Int 5)) (Constant (Int 23))))
            (Constant (Int 4))))
          (Constant (Int 3)))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name n3) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path (Z)) (base pred))) (depth 1)))
       ((Apply (Variable ((path_name ((path (Z)) (base succ))) (depth 1)))
         ((Constant (Int 12)))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name n4) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path (Z)) (base lxor))) (depth 1)))
       ((Apply (Variable ((path_name ((path (Z)) (base lor))) (depth 1)))
         ((Apply (Variable ((path_name ((path (Z)) (base land))) (depth 1)))
           ((Constant (Int 5)) (Constant (Int 7))))
          (Constant (Int 3))))
        (Constant (Int 9)))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name n5) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path (Z)) (base add))) (depth 1)))
       ((Apply (Variable ((path_name ((path (Z)) (base shiftl))) (depth 1)))
         ((Constant (Int 156)) (Constant (Int 4))))
        (Apply (Variable ((path_name ((path (Z)) (base shiftr))) (depth 1)))
         ((Constant (Int 12)) (Constant (Int 1)))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name s) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base string))) (depth 1)) ()))))
      (Apply
       (Variable ((path_name ((path (String)) (base append))) (depth 1)))
       ((Constant (String ghj)) (Constant (String klm)))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name c) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply
       (Variable
        ((path_name ((path (OCaml Pervasives)) (base int_of_char)))
         (depth 1)))
       ((Constant (Char c)))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name x) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base unit))) (depth 1)) ()))))
      (Apply
       (Variable
        ((path_name ((path (OCaml Pervasives)) (base ignore))) (depth 1)))
       ((Constant (Int 23)))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name p) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path (Z)) (base add))) (depth 1)))
       ((Apply (Variable ((path_name ((path ()) (base fst))) (depth 1)))
         ((Tuple ((Constant (Int 1)) (Constant (Int 2))))))
        (Apply (Variable ((path_name ((path ()) (base snd))) (depth 1)))
         ((Tuple ((Constant (Int 3)) (Constant (Int 4)))))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name l) (typ_vars ()) (args ())
       (typ
        ((Apply ((path_name ((path ()) (base list))) (depth 1))
          ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))))
      (Apply
       (Variable
        ((path_name ((path (OCaml Pervasives)) (base app))) (depth 1)))
       ((Constructor ((path_name ((path ()) (base cons))) (depth 1))
         ((Constant (Int 1))
          (Constructor ((path_name ((path ()) (base cons))) (depth 1))
           ((Constant (Int 2))
            (Constructor ((path_name ((path ()) (base []))) (depth 1)) ())))))
        (Constructor ((path_name ((path ()) (base cons))) (depth 1))
         ((Constant (Int 3))
          (Constructor ((path_name ((path ()) (base []))) (depth 1)) ()))))))))))
 (Value
  ((is_rec (New false))
   (cases
    ((((name y) (typ_vars ()) (args ())
       (typ ((Apply ((path_name ((path ()) (base Z))) (depth 1)) ()))))
      (Apply (Variable ((path_name ((path ()) (base apply))) (depth 1)))
       ((Function n
         (Apply (Variable ((path_name ((path (Z)) (base add))) (depth 1)))
          ((Variable ((path_name ((path ()) (base n))) (depth 0)))
           (Constant (Int 1)))))
        (Constant (Int 12))))))))))
