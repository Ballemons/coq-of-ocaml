3 Module SizedString:
  4
  Record t:
    [ (name, Type (string/2)); (size, Type (Z/2)) ]

9
Value
  (non_rec, @.,
    [
      ((r, [ ], [ ], Some Type (SizedString.t/0)),
        Record
          ((9, Effect ([ ], .)),
            (SizedString.name/0,
              Constant ((9, Effect ([ ], .)), String("gre"))),
            (SizedString.size/0, Constant ((9, Effect ([ ], .)), Int(3)))))
    ])

10
Value
  (non_rec, @.,
    [
      ((r', [ ], [ ], Some Type (SizedString.t/0)),
        Record
          ((10, Effect ([ ], .)),
            (SizedString.name/0,
              Constant ((10, Effect ([ ], .)), String("haha"))),
            (SizedString.size/0, Constant ((10, Effect ([ ], .)), Int(4)))))
    ])

12
Value
  (non_rec, @.,
    [
      ((s, [ ], [ ], Some Type (Z/1)),
        Apply
          ((12, Effect ([ ], .)), Variable ((12, Effect ([ ], .)), Z.add/1),
            [
              Field
                ((12, Effect ([ ], .)),
                  Variable
                    ((12,
                      Effect
                        ([
                        ],
                          .)),
                      r/0),
                  SizedString.size/0);
              Field
                ((12, Effect ([ ], .)),
                  Variable
                    ((12,
                      Effect
                        ([
                        ],
                          .)),
                      r'/0),
                  SizedString.size/0)
            ]))
    ])

14
Value
  (non_rec, @.,
    [
      ((f, [ ], [ (x, Type (SizedString.t/0)) ], Some Type (bool/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Record ((SizedString.size/0, Int(3))),
                Constructor
                  ((15, Effect ([ ], .)),
                    true/1));
              (Any, Constructor ((16, Effect ([ ], .)), false/1))
            ]))
    ])

18
Value
  (non_rec, @.,
    [
      ((b, [ ], [ ], Some Type (bool/1)),
        Apply
          ((18, Effect ([ ], .)),
            Variable ((18, Effect ([ ], . -> .)), f/0),
            [ Variable ((18, Effect ([ ], .)), r/0) ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((b', [ ], [ ], Some Type (bool/1)),
        Apply
          ((19, Effect ([ ], .)),
            Variable ((19, Effect ([ ], . -> .)), f/0),
            [ Variable ((19, Effect ([ ], .)), r'/0) ]))
    ])

21 Module Point:
  22
  Record t:
    [ (x, Type (Z/2)); (y, Type (Z/2)); (z, Type (Z/2)) ]
  
  27
  Value
    (non_rec, @.,
      [
        ((p, [ ], [ ], Some Type (t/0)),
          Record
            ((27, Effect ([ ], .)),
              (x/0, Constant ((27, Effect ([ ], .)), Int(5))),
              (y/0, Constant ((27, Effect ([ ], .)), Int(-3))),
              (z/0, Constant ((27, Effect ([ ], .)), Int(1)))))
      ])
  
  29
  Value
    (non_rec, @.,
      [
        ((b, [ ], [ ], Some Type (bool/2)),
          Match
            ((29, Effect ([ ], .)),
              Variable ((29, Effect ([ ], .)), p/0),
              [
                (Record ((x/0, Int(5)), (z/0, Int(1))),
                  Constructor
                    ((30,
                      Effect
                        ([
                        ],
                          .)),
                      true/2));
                (Any,
                  Constructor
                    ((31,
                      Effect
                        ([
                        ],
                          .)),
                      false/2))
              ]))
      ])
