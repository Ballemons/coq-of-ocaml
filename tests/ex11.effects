Module
  Other

Value
  (.,
    Compound
      (Effect (false, .), Leaf (Effect (false, .)), Leaf (Effect (false, .))))

Value
  (.,
    Compound
      (Effect (false, .), Leaf (Effect (false, .)), Leaf (Effect (false, .))))

Value
  (.,
    Apply
      (Effect (false, .),
        Apply
          (Effect (false, .), Leaf (Effect (false, .)),
            Field (Effect (false, .), Leaf (Effect (false, .)))),
        Field (Effect (false, .), Leaf (Effect (false, .)))))

Value
  (. -> .,
    Match
      (Effect (false, .), Leaf (Effect (false, .)),
        Compound (Effect (false, .)), Compound (Effect (false, .))))

Value
  (.,
    Apply
      (Effect (false, .), Leaf (Effect (false, . -> .)),
        Leaf (Effect (false, .))))

Value
  (.,
    Apply
      (Effect (false, .), Leaf (Effect (false, . -> .)),
        Leaf (Effect (false, .))))

Module
  Other
  
  Value
    (.,
      Compound
        (Effect (false, .), Leaf (Effect (false, .)), Leaf (Effect (false, .)),
          Leaf (Effect (false, .))))
  
  Value
    (.,
      Match
        (Effect (false, .), Leaf (Effect (false, .)),
          Compound (Effect (false, .)), Compound (Effect (false, .))))
[
  '' : .;
  'andb' : .;
  'app' : .;
  'append' : .;
  'apply' : .;
  'b' : .;
  'b'' : .;
  'char_of_int' : .;
  'equiv_decb' : .;
  'f' : . -> .;
  'fst' : .;
  'ignore' : .;
  'int_of_char' : .;
  'negb' : .;
  'nequiv_decb' : .;
  'orb' : .;
  'r' : .;
  'r'' : .;
  'reverse_apply' : .;
  's' : .;
  'snd' : .;
  'Point.b' : .;
  'Point.p' : .;
  'TODO.failwith' : . -e-> .;
  'Z.abs' : .;
  'Z.add' : .;
  'Z.div' : .;
  'Z.land' : .;
  'Z.lor' : .;
  'Z.ltb' : .;
  'Z.lxor' : .;
  'Z.modulo' : .;
  'Z.mul' : .;
  'Z.opp' : .;
  'Z.pred' : .;
  'Z.shiftl' : .;
  'Z.shiftr' : .;
  'Z.sub' : .;
  'Z.succ' : .
]
