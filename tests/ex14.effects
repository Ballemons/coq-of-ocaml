(. -> . -> .,
  Value
    (non_rec, 'f', [ ], [ ('n', Type ('Z')); ('b', Type ('bool')) ],
      Some Type ('Z')) =
    IfThenElse
      ((unknown, Effect ([ ], .)), Variable ((unknown, Effect ([ ], .)), 'b'),
        Apply
          ((unknown, Effect ([ ], .)),
            Apply
              ((unknown, Effect ([ ], .)),
                Variable ((unknown, Effect ([ ], .)), 'Z.add'),
                Variable ((unknown, Effect ([ ], .)), 'n')),
            Constant ((unknown, Effect ([ ], .)), Int(1))),
        Apply
          ((unknown, Effect ([ ], .)),
            Apply
              ((unknown, Effect ([ ], .)),
                Variable ((unknown, Effect ([ ], .)), 'Z.sub'),
                Variable ((unknown, Effect ([ ], .)), 'n')),
            Constant ((unknown, Effect ([ ], .)), Int(1)))))
