4
Value
  (non_rec, @.,
    [
      ((b_eq, [ ], [ ], Some Type (bool/1)),
        Apply
          (4, Variable (4, equiv_decb/1),
            [ Constant (4, Int(1)); Constant (4, Int(2)) ]))
    ])

5
Value
  (non_rec, @.,
    [
      ((b_neq1, [ ], [ ], Some Type (bool/1)),
        Apply
          (5, Variable (5, nequiv_decb/1),
            [ Constructor (5, true/1); Constructor (5, false/1) ]))
    ])

6
Value
  (non_rec, @.,
    [
      ((b_neq2, [ ], [ ], Some Type (bool/1)),
        Apply
          (6, Variable (6, nequiv_decb/1),
            [ Constructor (6, tt/1); Constructor (6, tt/1) ]))
    ])

7
Value
  (non_rec, @.,
    [
      ((b_lt, [ ], [ ], Some Type (bool/1)),
        Apply
          (7, Variable (7, OCaml.Pervasives.lt/1),
            [ Constant (7, Int(1)); Constant (7, Int(2)) ]))
    ])

8
Value
  (non_rec, @.,
    [
      ((b_gt, [ ], [ ], Some Type (bool/1)),
        Apply
          (8, Variable (8, OCaml.Pervasives.gt/1),
            [ Constant (8, Int(1)); Constant (8, Int(2)) ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((b_le, [ ], [ ], Some Type (bool/1)),
        Apply
          (9, Variable (9, OCaml.Pervasives.le/1),
            [ Constructor (9, true/1); Constructor (9, false/1) ]))
    ])

10
Value
  (non_rec, @.,
    [
      ((b_ge, [ ], [ ], Some Type (bool/1)),
        Apply
          (10, Variable (10, OCaml.Pervasives.ge/1),
            [ Constructor (10, tt/1); Constructor (10, tt/1) ]))
    ])

11
Value
  (non_rec, @.,
    [
      ((comp, [ ], [ ], Some Type (Z/1)),
        Apply
          (11, Variable (11, OCaml.Pervasives.compare/1),
            [ Constant (11, Int(1)); Constant (11, Int(2)) ]))
    ])

12
Value
  (non_rec, @.,
    [
      ((n_min, [ ], [ ], Some Type (Z/1)),
        Apply
          (12, Variable (12, OCaml.Pervasives.min/1),
            [ Constant (12, Int(1)); Constant (12, Int(2)) ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((n_max, [ ], [ ], Some Type (Z/1)),
        Apply
          (13, Variable (13, OCaml.Pervasives.max/1),
            [ Constant (13, Int(1)); Constant (13, Int(2)) ]))
    ])

18
Value
  (non_rec, @.,
    [
      ((b_not, [ ], [ ], Some Type (bool/1)),
        Apply (18, Variable (18, negb/1), [ Constructor (18, false/1) ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((b_and, [ ], [ ], Some Type (bool/1)),
        Apply
          (19, Variable (19, andb/1),
            [ Constructor (19, true/1); Constructor (19, false/1) ]))
    ])

20
Value
  (non_rec, @.,
    [
      ((b_and_old, [ ], [ ], Some Type (bool/1)),
        Apply
          (20, Variable (20, andb/1),
            [ Constructor (20, true/1); Constructor (20, false/1) ]))
    ])

21
Value
  (non_rec, @.,
    [
      ((b_or, [ ], [ ], Some Type (bool/1)),
        Apply
          (21, Variable (21, orb/1),
            [ Constructor (21, true/1); Constructor (21, false/1) ]))
    ])

22
Value
  (non_rec, @.,
    [
      ((b_or_old, [ ], [ ], Some Type (bool/1)),
        Apply
          (22, Variable (22, orb/1),
            [ Constructor (22, true/1); Constructor (22, false/1) ]))
    ])

25
Value
  (non_rec, @.,
    [
      ((app1, [ ], [ ], Some Type (Z/1)),
        Apply
          (25, Variable (25, OCaml.Pervasives.reverse_apply/1),
            [
              Constant (25, Int(12));
              Function (25, x, Variable (25, x/0))
            ]))
    ])

26
Value
  (non_rec, @.,
    [
      ((app2, [ ], [ ], Some Type (Z/1)),
        Apply
          (26, Variable (26, apply/1),
            [
              Function (26, x, Variable (26, x/0));
              Constant (26, Int(12))
            ]))
    ])

29
Value
  (non_rec, @.,
    [
      ((n_neg1, [ ], [ ], Some Type (Z/1)),
        Apply (29, Variable (29, Z.opp/1), [ Constant (29, Int(12)) ]))
    ])

30
Value
  (non_rec, @.,
    [ ((n_neg2, [ ], [ ], Some Type (Z/1)), Constant (30, Int(-12))) ])

31
Value
  (non_rec, @.,
    [
      ((n_pos1, [ ], [ ], Some Type (Z/1)),
        Apply (31, Variable (31, /1), [ Constant (31, Int(12)) ]))
    ])

32
Value
  (non_rec, @.,
    [ ((n_pos2, [ ], [ ], Some Type (Z/1)), Constant (32, Int(12))) ])

33
Value
  (non_rec, @.,
    [
      ((n_succ, [ ], [ ], Some Type (Z/1)),
        Apply (33, Variable (33, Z.succ/1), [ Constant (33, Int(1)) ]))
    ])

34
Value
  (non_rec, @.,
    [
      ((n_pred, [ ], [ ], Some Type (Z/1)),
        Apply (34, Variable (34, Z.pred/1), [ Constant (34, Int(1)) ]))
    ])

35
Value
  (non_rec, @.,
    [
      ((n_plus, [ ], [ ], Some Type (Z/1)),
        Apply
          (35, Variable (35, Z.add/1),
            [ Constant (35, Int(1)); Constant (35, Int(2)) ]))
    ])

36
Value
  (non_rec, @.,
    [
      ((n_minus, [ ], [ ], Some Type (Z/1)),
        Apply
          (36, Variable (36, Z.sub/1),
            [ Constant (36, Int(1)); Constant (36, Int(2)) ]))
    ])

37
Value
  (non_rec, @.,
    [
      ((n_times, [ ], [ ], Some Type (Z/1)),
        Apply
          (37, Variable (37, Z.mul/1),
            [ Constant (37, Int(1)); Constant (37, Int(2)) ]))
    ])

38
Value
  (non_rec, @.,
    [
      ((n_div, [ ], [ ], Some Type (Z/1)),
        Apply
          (38, Variable (38, Z.div/1),
            [ Constant (38, Int(1)); Constant (38, Int(2)) ]))
    ])

39
Value
  (non_rec, @.,
    [
      ((n_mod, [ ], [ ], Some Type (Z/1)),
        Apply
          (39, Variable (39, Z.modulo/1),
            [ Constant (39, Int(1)); Constant (39, Int(2)) ]))
    ])

40
Value
  (non_rec, @.,
    [
      ((n_abs, [ ], [ ], Some Type (Z/1)),
        Apply (40, Variable (40, Z.abs/1), [ Constant (40, Int(1)) ]))
    ])

45
Value
  (non_rec, @.,
    [
      ((n_land, [ ], [ ], Some Type (Z/1)),
        Apply
          (45, Variable (45, Z.land/1),
            [ Constant (45, Int(12)); Constant (45, Int(13)) ]))
    ])

46
Value
  (non_rec, @.,
    [
      ((n_lor, [ ], [ ], Some Type (Z/1)),
        Apply
          (46, Variable (46, Z.lor/1),
            [ Constant (46, Int(12)); Constant (46, Int(13)) ]))
    ])

47
Value
  (non_rec, @.,
    [
      ((n_lxor, [ ], [ ], Some Type (Z/1)),
        Apply
          (47, Variable (47, Z.lxor/1),
            [ Constant (47, Int(12)); Constant (47, Int(13)) ]))
    ])

49
Value
  (non_rec, @.,
    [
      ((n_lsl, [ ], [ ], Some Type (Z/1)),
        Apply
          (49, Variable (49, Z.shiftl/1),
            [ Constant (49, Int(12)); Constant (49, Int(13)) ]))
    ])

50
Value
  (non_rec, @.,
    [
      ((n_lsr, [ ], [ ], Some Type (Z/1)),
        Apply
          (50, Variable (50, Z.shiftr/1),
            [ Constant (50, Int(12)); Constant (50, Int(13)) ]))
    ])

57
Value
  (non_rec, @.,
    [
      ((ss, [ ], [ ], Some Type (string/1)),
        Apply
          (57, Variable (57, String.append/1),
            [
              Constant (57, String("begin"));
              Constant (57, String("end"))
            ]))
    ])

60
Value
  (non_rec, @.,
    [
      ((n_char, [ ], [ ], Some Type (Z/1)),
        Apply
          (60, Variable (60, OCaml.Pervasives.int_of_char/1),
            [ Constant (60, Char("c")) ]))
    ])

63
Value
  (non_rec, @.,
    [
      ((i, [ ], [ ], Some Type (unit/1)),
        Apply
          (63, Variable (63, OCaml.Pervasives.ignore/1),
            [ Constant (63, Int(12)) ]))
    ])

66
Value
  (non_rec, @.,
    [
      ((s_bool, [ ], [ ], Some Type (string/1)),
        Apply
          (66, Variable (66, OCaml.Pervasives.string_of_bool/1),
            [ Constructor (66, false/1) ]))
    ])

67
Value
  (non_rec, @.,
    [
      ((bool_s, [ ], [ ], Some Type (bool/1)),
        Apply
          (67, Variable (67, OCaml.Pervasives.bool_of_string/1),
            [ Constant (67, String("false")) ]))
    ])

68
Value
  (non_rec, @.,
    [
      ((s_n, [ ], [ ], Some Type (string/1)),
        Apply
          (68, Variable (68, OCaml.Pervasives.string_of_int/1),
            [ Constant (68, Int(12)) ]))
    ])

69
Value
  (non_rec, @.,
    [
      ((n_s, [ ], [ ], Some Type (Z/1)),
        Apply
          (69, Variable (69, OCaml.Pervasives.int_of_string/1),
            [ Constant (69, String("12")) ]))
    ])

74
Value
  (non_rec, @.,
    [
      ((n1, [ ], [ ], Some Type (Z/1)),
        Apply
          (74, Variable (74, fst/1),
            [ Tuple (74, Constant (74, Int(12)), Constant (74, Int(13))) ]))
    ])

75
Value
  (non_rec, @.,
    [
      ((n2, [ ], [ ], Some Type (Z/1)),
        Apply
          (75, Variable (75, snd/1),
            [ Tuple (75, Constant (75, Int(12)), Constant (75, Int(13))) ]))
    ])

78
Value
  (non_rec, @.,
    [
      ((ll, [ ], [ ], Some Type (list/1, Type (Z/1))),
        Apply
          (78, Variable (78, OCaml.Pervasives.app/1),
            [
              Constructor
                (78, cons/1, Constant (78, Int(1)),
                  Constructor
                    (78,
                      cons/1,
                      Constant
                        (78,
                          Int(2)),
                      Constructor
                        (78,
                          []/1)));
              Constructor
                (78, cons/1, Constant (78, Int(3)),
                  Constructor
                    (78,
                      cons/1,
                      Constant
                        (78,
                          Int(4)),
                      Constructor
                        (78,
                          []/1)))
            ]))
    ])
