3
Inductive tree:
  ([ ], [ (Leaf, [ ]); (Node, [ Type (tree/0); Type (Z/0); Type (tree/0) ]) ])

7
(Value
  (rec, @.,
    [
      ((find_rec, [ ],
        [ (counter, Type (nat/0)); (x, Type (Z/0)); (t, Type (tree/0)) ],
        Some Monad ([ NonTermination/0 ], Type (bool/0))),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/0),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated/0),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S/0, counter),
                Match
                  (8, Variable (8, t/0),
                    [
                      (Constructor
                        (Leaf/0),
                        Return
                          (?,
                            Constructor
                              (9,
                                false/0)));
                      (Constructor
                        (Node/0,
                          t1,
                          x',
                          t2),
                        IfThenElse
                          (11,
                            Apply
                              (11,
                                Variable
                                  (11,
                                    OCaml.Pervasives.lt/0),
                                [
                                  Variable
                                    (11,
                                      x/0);
                                  Variable
                                    (11,
                                      x'/0)
                                ]),
                            Apply
                              (12,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        find_rec/0),
                                    [
                                      Variable
                                        (?,
                                          counter/0)
                                    ]),
                                [
                                  Variable
                                    (12,
                                      x/0);
                                  Variable
                                    (12,
                                      t1/0)
                                ]),
                            IfThenElse
                              (13,
                                Apply
                                  (13,
                                    Variable
                                      (13,
                                        OCaml.Pervasives.lt/0),
                                    [
                                      Variable
                                        (13,
                                          x'/0);
                                      Variable
                                        (13,
                                          x/0)
                                    ]),
                                Apply
                                  (14,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            find_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (14,
                                          x/0);
                                      Variable
                                        (14,
                                          t2/0)
                                    ]),
                                Return
                                  (?,
                                    Constructor
                                      (16,
                                        true/0)))))
                    ]))
            ]))
    ]))

7
(Value
  (non_rec, @.,
    [
      ((find, [ ], [ (x, Type (Z/0)); (t, Type (tree/0)) ],
        Some Monad ([ Counter/0; NonTermination/0 ], Type (bool/0))),
        Bind
          (?,
            Lift
              (?, [ Counter/0 ], [ Counter/0; NonTermination/0 ],
                Apply (?, Variable (?, read_counter/0), [ Tuple (?) ])),
            Some x_1,
            Lift
              (?, [ NonTermination/0 ], [ Counter/0; NonTermination/0 ],
                Apply
                  (?, Variable (?, find_rec/0),
                    [
                      Variable (?, x_1/0);
                      Variable (?, x/0);
                      Variable (?, t/0)
                    ]))))
    ]))
