3
((),
  Value
    (non_rec, f, [ A; B; C ], [ (x, A) ],
      Some Monad ([ IO/1 ], (C -> Monad ([ Failure/1 ], B)))) =
    Bind
      (?,
        Apply (4, Variable (4, print_string/1), [ Constant (4, String("Hi")) ]),
        None,
        Return
          (?,
            Function
              (5, y,
                Apply
                  (5, Variable (5, failwith/1), [ Constant (5, String("Bye")) ])))))

7
((),
  Value (non_rec, r, [ A; B ], [ (x, B) ], Some Monad ([ Failure/1; IO/1 ], A))
    =
    Match
      (?, Variable (?, x/0),
        [
          (Any,
            Bind
              (?,
                Lift
                  (?, [ IO/1 ], [ Failure/1; IO/1 ],
                    Apply
                      (7, Variable (7, f/0),
                        [
                          Constant
                            (7,
                              Int(1))
                        ])), Some x_1,
                Lift
                  (?, [ Failure/1 ],
                    [ Failure/1; IO/1 ],
                    Apply
                      (7,
                        Variable
                          (?,
                            x_1/0),
                        [
                          Constant
                            (7,
                              Int(2))
                        ]))))
        ]))
