Module
  Other
  
  Value
    (.,
      Match
        (Effect (false, .), Leaf (Effect (false, .)),
          Match
            (Effect (false, .), Leaf (Effect (false, .)),
              Leaf (Effect (false, .)),
              Apply
                (Effect (false, .),
                  Apply
                    (Effect (false, .), Leaf (Effect (false, .)),
                      Leaf (Effect (false, .))),
                  Apply
                    (Effect (false, .), Leaf (Effect (false, .)),
                      Leaf (Effect (false, .)))))))
  
  Value
    (.,
      Match
        (Effect (false, .), Leaf (Effect (false, .)),
          Compound (Effect (false, .)),
          Compound
            (Effect (false, .), Leaf (Effect (false, .)),
              Apply
                (Effect (false, .), Leaf (Effect (false, .)),
                  Leaf (Effect (false, .))))))
  
  Module
    Value (., Leaf (Effect (false, .)))

Value
  (.,
    Apply
      (Effect (false, .), Leaf (Effect (false, .)),
        Apply
          (Effect (false, .), Leaf (Effect (false, .)),
            Compound
              (Effect (false, .), Leaf (Effect (false, .)),
                Compound
                  (Effect (false, .), Leaf (Effect (false, .)),
                    Compound
                      (Effect (false, .), Leaf (Effect (false, .)),
                        Compound
                          (Effect (false, .), Leaf (Effect (false, .)),
                            Compound (Effect (false, .)))))))))
[
  '' : .;
  'andb' : .;
  'app' : .;
  'append' : .;
  'apply' : .;
  'char_of_int' : .;
  'equiv_decb' : .;
  'fst' : .;
  'ignore' : .;
  'int_of_char' : .;
  'n' : .;
  'negb' : .;
  'nequiv_decb' : .;
  'orb' : .;
  'reverse_apply' : .;
  'snd' : .;
  'List2.of_list' : .;
  'List2.sum' : .;
  'List2.Inside.x' : .;
  'TODO.failwith' : . -e-> .;
  'Z.abs' : .;
  'Z.add' : .;
  'Z.div' : .;
  'Z.land' : .;
  'Z.lor' : .;
  'Z.ltb' : .;
  'Z.lxor' : .;
  'Z.modulo' : .;
  'Z.mul' : .;
  'Z.opp' : .;
  'Z.pred' : .;
  'Z.shiftl' : .;
  'Z.shiftr' : .;
  'Z.sub' : .;
  'Z.succ' : .
]
