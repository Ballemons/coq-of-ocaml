4
(Value
  (non_rec, @.,
    [
      ((n, [ ], [ ], Some Type (Z/0)), Constant ((4, Effect ([ ], .)), Int(12)))
    ]))

5
(Value
  (non_rec, @.,
    [
      ((c1, [ ], [ ], Some Type (ascii/0)),
        Constant ((5, Effect ([ ], .)), Char("a")))
    ]))

6
(Value
  (non_rec, @.,
    [
      ((c2, [ ], [ ], Some Type (ascii/0)),
        Constant ((6, Effect ([ ], .)), Char("\\n")))
    ]))

7
(Value
  (non_rec, @.,
    [
      ((c3, [ ], [ ], Some Type (ascii/0)),
        Constant ((7, Effect ([ ], .)), Char("\\t")))
    ]))

8
(Value
  (non_rec, @.,
    [
      ((c4, [ ], [ ], Some Type (ascii/0)),
        Constant ((8, Effect ([ ], .)), Char("\"")))
    ]))

9
(Value
  (non_rec, @.,
    [
      ((s, [ ], [ ], Some Type (string/0)),
        Constant ((9, Effect ([ ], .)), String("hi\n\t:)\"")))
    ]))

11
(Value
  (non_rec, @.,
    [
      ((b1, [ ], [ ], Some Type (bool/0)),
        Constructor ((11, Effect ([ ], .)), false/0))
    ]))

12
(Value
  (non_rec, @.,
    [
      ((b2, [ ], [ ], Some Type (bool/0)),
        Constructor ((12, Effect ([ ], .)), true/0))
    ]))

13
(Value
  (non_rec, @.,
    [
      ((u, [ ], [ ], Some Type (unit/0)),
        Constructor ((13, Effect ([ ], .)), tt/0))
    ]))

16
(Value
  (non_rec, @.,
    [
      ((l1, [ A ], [ ], Some Type (list/0, A)),
        Constructor ((16, Effect ([ ], .)), []/0))
    ]))

17
(Value
  (non_rec, @.,
    [
      ((l2, [ ], [ ], Some Type (list/0, Type (Z/0))),
        Constructor
          ((17, Effect ([ ], .)), cons/0,
            Constant ((17, Effect ([ ], .)), Int(0)),
            Constructor
              ((17, Effect ([ ], .)), cons/0,
                Constant ((17, Effect ([ ], .)), Int(1)),
                Constructor
                  ((17, Effect ([ ], .)), cons/0,
                    Constant ((17, Effect ([ ], .)), Int(2)),
                    Constructor
                      ((17, Effect ([ ], .)), cons/0,
                        Constant
                          ((17, Effect ([ ], .)), Int(3)),
                        Constructor
                          ((17, Effect ([ ], .)), []/0))))))
    ]))

18
(Value
  (non_rec, @.,
    [
      ((o, [ ], [ ], Some Type (option/0, Type (Z/0))),
        IfThenElse
          ((18, Effect ([ ], .)), Variable ((18, Effect ([ ], .)), b1/0),
            Constructor ((18, Effect ([ ], .)), None/0),
            Constructor
              ((18, Effect ([ ], .)), Some/0,
                Variable ((18, Effect ([ ], .)), n/0))))
    ]))

26
(Value
  (non_rec, @.,
    [
      ((e_match, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Match_failure/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((26,
                    Effect
                      ([
                        OCaml.Match_failure/0
                      ],
                        .)),
                    Variable
                      ((26,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Match_failure/0
                              ]->
                              .)),
                        OCaml.raise_Match_failure/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Tuple
                            ((26,
                              Effect
                                ([
                                ],
                                  .)),
                              Constant
                                ((26,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  String("error")),
                              Constant
                                ((26,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(1)),
                              Constant
                                ((26,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(2))))
                    ]))
            ]))
    ]))

27
(Value
  (non_rec, @.,
    [
      ((e_assert, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Assert_failure/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((27,
                    Effect
                      ([
                        OCaml.Assert_failure/0
                      ],
                        .)),
                    Variable
                      ((27,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Assert_failure/0
                              ]->
                              .)),
                        OCaml.raise_Assert_failure/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Tuple
                            ((27,
                              Effect
                                ([
                                ],
                                  .)),
                              Constant
                                ((27,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  String("error")),
                              Constant
                                ((27,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(1)),
                              Constant
                                ((27,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(2))))
                    ]))
            ]))
    ]))

28
(Value
  (non_rec, @.,
    [
      ((e_invalid, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Invalid_argument/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((28,
                    Effect
                      ([
                        OCaml.Invalid_argument/0
                      ],
                        .)),
                    Variable
                      ((28,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Invalid_argument/0
                              ]->
                              .)),
                        OCaml.raise_Invalid_argument/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Constant
                            ((28,
                              Effect
                                ([
                                ],
                                  .)),
                              String("error")))
                    ]))
            ]))
    ]))

29
(Value
  (non_rec, @.,
    [
      ((e_failure, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Failure/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((29,
                    Effect
                      ([
                        OCaml.Failure/0
                      ],
                        .)),
                    Variable
                      ((29,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Failure/0
                              ]->
                              .)),
                        OCaml.raise_Failure/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Constant
                            ((29,
                              Effect
                                ([
                                ],
                                  .)),
                              String("error")))
                    ]))
            ]))
    ]))

30
(Value
  (non_rec, @.,
    [
      ((e_not_found, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Not_found/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((30,
                    Effect
                      ([
                        OCaml.Not_found/0
                      ],
                        .)),
                    Variable
                      ((30,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Not_found/0
                              ]->
                              .)),
                        OCaml.raise_Not_found/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]))
            ]))
    ]))

31
(Value
  (non_rec, @.,
    [
      ((e_out_of_mem, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Out_of_memory/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((31,
                    Effect
                      ([
                        OCaml.Out_of_memory/0
                      ],
                        .)),
                    Variable
                      ((31,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Out_of_memory/0
                              ]->
                              .)),
                        OCaml.raise_Out_of_memory/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]))
            ]))
    ]))

32
(Value
  (non_rec, @.,
    [
      ((e_overflow, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Stack_overflow/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((32,
                    Effect
                      ([
                        OCaml.Stack_overflow/0
                      ],
                        .)),
                    Variable
                      ((32,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Stack_overflow/0
                              ]->
                              .)),
                        OCaml.raise_Stack_overflow/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]))
            ]))
    ]))

33
(Value
  (non_rec, @.,
    [
      ((e_sys_err, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Sys_error/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((33,
                    Effect
                      ([
                        OCaml.Sys_error/0
                      ],
                        .)),
                    Variable
                      ((33,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Sys_error/0
                              ]->
                              .)),
                        OCaml.raise_Sys_error/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Constant
                            ((33,
                              Effect
                                ([
                                ],
                                  .)),
                              String("error")))
                    ]))
            ]))
    ]))

34
(Value
  (non_rec, @.,
    [
      ((e_EOF, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.End_of_file/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((34,
                    Effect
                      ([
                        OCaml.End_of_file/0
                      ],
                        .)),
                    Variable
                      ((34,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.End_of_file/0
                              ]->
                              .)),
                        OCaml.raise_End_of_file/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]))
            ]))
    ]))

35
(Value
  (non_rec, @.,
    [
      ((e_div, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Division_by_zero/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((35,
                    Effect
                      ([
                        OCaml.Division_by_zero/0
                      ],
                        .)),
                    Variable
                      ((35,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Division_by_zero/0
                              ]->
                              .)),
                        OCaml.raise_Division_by_zero/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]))
            ]))
    ]))

36
(Value
  (non_rec, @.,
    [
      ((e_sys_blocked, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Sys_blocked_io/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((36,
                    Effect
                      ([
                        OCaml.Sys_blocked_io/0
                      ],
                        .)),
                    Variable
                      ((36,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Sys_blocked_io/0
                              ]->
                              .)),
                        OCaml.raise_Sys_blocked_io/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]))
            ]))
    ]))

37
(Value
  (non_rec, @.,
    [
      ((e_rec_module, [ A; B ], [ (x, A) ], Some B),
        Match
          ((?, Effect ([ OCaml.Undefined_recursive_module/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((37,
                    Effect
                      ([
                        OCaml.Undefined_recursive_module/0
                      ],
                        .)),
                    Variable
                      ((37,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Undefined_recursive_module/0
                              ]->
                              .)),
                        OCaml.raise_Undefined_recursive_module/0),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Tuple
                            ((37,
                              Effect
                                ([
                                ],
                                  .)),
                              Constant
                                ((37,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  String("error")),
                              Constant
                                ((37,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(1)),
                              Constant
                                ((37,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(2))))
                    ]))
            ]))
    ]))
